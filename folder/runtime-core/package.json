{
  "_args": [
    [
      {
        "raw": "runtime-core@git+https://github.com/reTHINK-project/dev-runtime-core.git#develop",
        "scope": null,
        "escapedName": "runtime-core",
        "name": "runtime-core",
        "rawSpec": "git+https://github.com/reTHINK-project/dev-runtime-core.git#develop",
        "spec": "git+https://github.com/reTHINK-project/dev-runtime-core.git#develop",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:reTHINK-project/dev-runtime-core.git#develop",
          "sshUrl": "git+ssh://git@github.com/reTHINK-project/dev-runtime-core.git#develop",
          "httpsUrl": "git+https://github.com/reTHINK-project/dev-runtime-core.git#develop",
          "gitUrl": "git://github.com/reTHINK-project/dev-runtime-core.git#develop",
          "shortcut": "github:reTHINK-project/dev-runtime-core#develop",
          "directUrl": "https://raw.githubusercontent.com/reTHINK-project/dev-runtime-core/develop/package.json"
        }
      },
      "/home/luis/Documents/rethink/dev-smart-contextual-assistance-app/rethink/node_modules/runtime-browser"
    ]
  ],
  "_from": "git+https://github.com/reTHINK-project/dev-runtime-core.git#develop",
  "_id": "runtime-core@0.7.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/runtime-core",
  "_phantomChildren": {
    "babel-polyfill": "6.23.0"
  },
  "_requested": {
    "raw": "runtime-core@git+https://github.com/reTHINK-project/dev-runtime-core.git#develop",
    "scope": null,
    "escapedName": "runtime-core",
    "name": "runtime-core",
    "rawSpec": "git+https://github.com/reTHINK-project/dev-runtime-core.git#develop",
    "spec": "git+https://github.com/reTHINK-project/dev-runtime-core.git#develop",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:reTHINK-project/dev-runtime-core.git#develop",
      "sshUrl": "git+ssh://git@github.com/reTHINK-project/dev-runtime-core.git#develop",
      "httpsUrl": "git+https://github.com/reTHINK-project/dev-runtime-core.git#develop",
      "gitUrl": "git://github.com/reTHINK-project/dev-runtime-core.git#develop",
      "shortcut": "github:reTHINK-project/dev-runtime-core#develop",
      "directUrl": "https://raw.githubusercontent.com/reTHINK-project/dev-runtime-core/develop/package.json"
    }
  },
  "_requiredBy": [
    "/runtime-browser"
  ],
  "_resolved": "git+https://github.com/reTHINK-project/dev-runtime-core.git#fe60c3e0baf8ca0b5cdedec2c85e568f7d8d4aa6",
  "_shasum": "91036e2b95b98fc4d53bc6d11a4c20e9613d2d04",
  "_shrinkwrap": null,
  "_spec": "runtime-core@git+https://github.com/reTHINK-project/dev-runtime-core.git#develop",
  "_where": "/home/luis/Documents/rethink/dev-smart-contextual-assistance-app/rethink/node_modules/runtime-browser",
  "author": {
    "name": "reThink Project"
  },
  "bugs": {
    "url": "https://github.com/reTHINK-project/dev-runtime-core/issues"
  },
  "contributors": [
    {
      "name": "Vitor Silva",
      "email": "vitor-t-silva@telecom.pt"
    }
  ],
  "dependencies": {
    "service-framework": "github:rethink-project/dev-service-framework#develop"
  },
  "description": "core runtime development",
  "devDependencies": {
    "babel-core": "^6.21.0",
    "babel-loader": "^6.2.10",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-transform-regenerator": "^6.21.0",
    "babel-plugin-transform-runtime": "^6.15.0",
    "babel-polyfill": "^6.16.0",
    "babel-preset-env": "^1.1.8",
    "babel-runtime": "^6.6.1",
    "base64-url": "^1.2.2",
    "bip39": "^2.2.0",
    "bitcoinjs-lib": "^2.2.0",
    "chai": "^3.5.0",
    "chai-as-promised": "^6.0.0",
    "chai-json-schema": "^1.4.0",
    "cross-env": "^3.1.4",
    "dexie": "^1.5.1",
    "esdoc": "^0.5.2",
    "eslint": "^3.12.2",
    "eslint-loader": "^1.6.1",
    "eslint-plugin-import": "^2.2.0",
    "hex64": "^0.4.0",
    "jsrsasign": "^5.0.9",
    "karma": "^1.3.0",
    "karma-chai": "^0.1.0",
    "karma-chrome-launcher": "^2.0.0",
    "karma-coverage": "^1.1.1",
    "karma-mocha": "^1.3.0",
    "karma-mocha-reporter": "^2.2.1",
    "karma-sinon": "^1.0.5",
    "karma-webpack": "^2.0.1",
    "mocha": "3.2.0",
    "proxy-observe": "^0.0.21",
    "sinon": "^1.17.3",
    "sinon-chai": "^2.8.0",
    "sjcl": "^1.0.3",
    "tv4": "^1.2.7",
    "webpack": "^2.2.0-rc.7"
  },
  "files": [
    "dist"
  ],
  "gitHead": "fe60c3e0baf8ca0b5cdedec2c85e568f7d8d4aa6",
  "homepage": "https://rethink-project.eu/",
  "keywords": [
    "reThink",
    "webRTC"
  ],
  "license": "Apache-2.0",
  "name": "runtime-core",
  "optionalDependencies": {},
  "private": true,
  "readme": "# Hyperty Runtime Core\n\n### Build status\n\n| Master                                   | Develop                                  |\n| ---------------------------------------- | ---------------------------------------- |\n| [![Build Status](https://travis-ci.org/reTHINK-project/dev-runtime-core.svg?branch=master)](https://travis-ci.org/reTHINK-project/dev-runtime-core) | [![Build Status](https://travis-ci.org/reTHINK-project/dev-runtime-core.svg?branch=develop)](https://travis-ci.org/reTHINK-project/dev-runtime-core)\n\n\n--------------------\n\n-\t[Overview](#overview)\n-\t[User View: How to include the Hyperty Runtime Core in other Projects](#user-view)\n-\t[Developer View](#developer-view)\n-\t[Tasks](#tasks)\n\n## <a id=\"note\">Note</a>\nIn order to try speed up the instalation process, we remove the first verification of global modules, so, if you want install this repository, you should install globaly this modules:\n\n```shell\nnpm install -g karma-cli\n```\n\n## <a id=\"overview\">Overview</a>\n\nThis repository contains the source code and associated documentation of the core components required to support the deployment and execution of Hyperties in user devices or in network servers. More information about the Hyperty concept and the reTHINK framework in general is provided [here](https://github.com/reTHINK-project/dev-service-framework/blob/master/README.md).\n\nThe Hyperty Runtime architecture follows a security by design approach since it was highly influenced by a careful [security analysis](docs/specs/securityanalysis.md) where different types of components are executed in isolated sandboxes. Thus, components downloaded from a specific Service Provider are executed in sandboxes that are different from the sandboxes used to execute components downloaded from another service provider. Communication between components running in different sandboxes is only possible through messages exchanged through a Message Bus functionality provided by the Hyperty Runtime Core Sandbox. On the other hand, and according to the [ProtoOFly concept](https://github.com/reTHINK-project/dev-service-framework/blob/master/docs/manuals/hyperty-messaging-framework.md#protocol-on-the-fly-protofly-and-protostubs), the protocol stub is executed in isolated sandbox and provides the bridge for the Hperty Runtime to communicate with associated Service Provider. The detailed specification of the Hyperty Runtime Core is provided [here](docs/specs/readme.md).\n\nHyperty Core Runtime components are platform agnostic and are to be included in platform specific Hyperty Runtimes, like Web Browsers and Nodejs based platforms.\n\n## <a id=\"user-view\">User View</a>\n\n**How to include the Hyperty Runtime Core in other Projects**\n\nHow to include this repository in other runtime platforms, like [dev-runtime-browser](https://github.com/reTHINK-project/dev-runtime-browser) or [dev-runtime-node](https://github.com/reTHINK-project/dev-runtime-node);\n\nInstall the runtime-core like a npm module;\n```shell\nnpm install github:rethink-project/dev-runtime-core#master --save\n```\n\n### Browser Environment\n\n```javascript\n\nimport {Sandbox, SandboxRegistry, SandboxType} from 'runtime-core/dist/sandbox'\nimport MiniBus from 'runtime-core/dist/minibus';\n\nconsole.log('Sandbox: ', Sandbox, SandboxRegistry);\nconsole.log('MiniBus: ', MiniBus);\n```\n\n### Nodejs Environment\n\n> **This code, probably, needs to be updated**\n\n```javascript\n\nvar Sandbox = require('runtime-core').sandbox;\nvar MiniBus = require('runtime-core').minibus;\n\nconsole.log('Sandbox: ', Sandbox);\nconsole.log('MiniBus: ', MiniBus);\n\n```\n\nif you found some issues, please submit them into the respective repository;\n\n---\n\n## <a id=\"developer-view\">Developer view</a>\n\n### Setup Environment\n\nTo install the runtime-core repository in your machine, you can clone the github and run the following command;\n\n```shell\n# install all the dependencies\nnpm install\n```\n---\n\n### Issues\n\nif you have some trouble with the environment, you can open an issue [here](https://github.com/reTHINK-project/dev-runtime-core/issues);\n\n\n### Javascript Environment\n\nJavaScript code should be written in ES6. There are direct dependencies from nodejs and npm, these can be installed separately or in conjunction with [nvm](https://github.com/creationix/nvm)\n\n#### Dependencies\n\n-  nodejs\n\n-  npm\n\n-  karma - Make the communication between unit test tool and jenkins. See more on [karma](http://karma-runner.github.io/0.13/index.html)\n\n-  mocha - Unit test tool. See more on [http://mochajs.org](http://mochajs.org/)\n\n   â€‹\n\n#### Code Style and Hinting\n\nOn the root directory you will find **.eslintrc.yml** based on the [google style code](http://eslint.org/docs/user-guide/migrating-from-jscs#converting-presets) without some restrictions, this file are helpers to maintain syntax consistency (this could be changed if we understand), it signals syntax mistakes and makes the code equal for all developers.\n\n-\t[eslint](http://eslint.org/) - Maintain JavaScript Code Style\n\nAll IDE's and Text Editors can handle these tools.\n\n```shell\n# to check if the code is aligned with the style code\nnpm run test:lint\n```\n\n\n#### Documentation\n\nTo generates api documentation, check [here](#documentation-task);\n\n#### Unit Testing\n\nUnit testing can be launched manually with **karma start**.\nThe tool to do the tests is the [chaijs](http://chaijs.com/), with expect;\n\n##### Karma\n\nif you have some problems starting the karma tests, try running this commands for the following order:\n\n1.  `npm uninstall karma karma-browserify karma-mocha karma-mocha-reporter karma-chrome-launcher -g`\n\n2.  `npm install karma-cli -g`\n\n3.  `npm install`\n\n    â€‹\n\n##### Note\n\nThis repository is ready to start working on development of runtime-core. The code will go to the **src** folder. The unit tests will be on **test** folder, following the name standard <component>.spec.js\n\n---\n\n## <a id=\"tasks\">Gulp Tasks</a>\n\n-\t[Documentation](#documentation-task)\n-\t[License](#license)\n-\t[Dist](#dist)\n\n### <a id=\"documentation-task\">Documentation</a>\n\n```shell\n# Generate all the associated to the runtime core;\nnpm run build:doc\n```\n\n> Generate all documentation associated to runtime core;\n>\n> -  if you run **gulp doc** the documentation based on jsdoc3 will be generated on folder docs/jsdoc and you can interact;\n>\n>    `gulp doc`  **deprecated**\n>\n> -  if you run **gulp api** the documentation is generate based on docs/api/ html files, and converted to markdown;\n>\n>    `gulp api`  **deprecated**\n>\n> -  if you run **gulp docx** should be generated an .docx file, but **this process should be optimized**, is not working very well;\n>\n>    `gulp docx ` **deprecated**\n\n### License\n\nThe license text will be added to all files after it build\n\n> To add the license text to all files in src folder;\n>\n> `gulp license` **deprecated**\n\n\n\n### Dist\n\nTo distribute the runtime-core, you can make a distribution file.\n\nRun the command:\n\n```shell\n# make a build of core components to be used for development; The files could be a little large because include the sourceMaps;\nnpm run build:dev\n\n# make a build of core components to be used form production;\nnpm run build:prod\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/reTHINK-project/dev-runtime-core.git"
  },
  "scripts": {
    "build:dev": "cross-env MODE=dev webpack",
    "build:doc": "esdoc -c esdoc.json",
    "build:prod": "cross-env MODE=prod webpack",
    "test": "karma start",
    "test:lint": "eslint --config .eslintrc.yml ./src/"
  },
  "version": "0.7.1"
}
