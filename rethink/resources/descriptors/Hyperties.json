{
  "HelloWorldObserver": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "HelloWorldObserver",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10001,
    "version": "0.1",
    "description": "Description of HelloWorldObserver",
    "objectName": "HelloWorldObserver",
    "configuration": {},
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy",
    "hypertyType": [
      "audio",
      "video"
    ]
  },
  "HelloWorldReporter": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "HelloWorldReporter",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10002,
    "version": "0.1",
    "description": "Description of HelloWorldReporter",
    "objectName": "HelloWorldReporter",
    "configuration": {},
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy",
    "hypertyType": [
      "audio",
      "video"
    ]
  },
  "GroupChat": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "GroupChat",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10003,
    "version": "0.1",
    "description": "Description of GroupChat",
    "objectName": "GroupChat",
    "configuration": {},
    "hypertyType": [
      "audio",
      "video"
    ],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "Location": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "Location",
      "encoding": "base64",
      "signature": ""
    },
    "hypertyType": [],
    "cguid": 10004,
    "version": "0.1",
    "description": "Description of Location",
    "objectName": "Location",
    "configuration": {},
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "RoomUIObserver": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "RoomUIObserver",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10005,
    "version": "0.1",
    "description": "Description of RoomUIObserver",
    "objectName": "RoomUIObserver",
    "configuration": {},
    "hypertyType": [],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "RoomUIReporter": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "RoomUIReporter",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10006,
    "version": "0.1",
    "description": "Description of RoomUIReporter",
    "objectName": "RoomUIReporter",
    "configuration": {},
    "hypertyType": [],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "UserStatus": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "UserStatus",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10007,
    "version": "0.1",
    "description": "Description of UserStatus",
    "objectName": "UserStatus",
    "configuration": {},
    "hypertyType": [],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "GroupChatManager": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "GroupChatManager",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10008,
    "version": "0.1",
    "description": "Description of GroupChatManager",
    "objectName": "GroupChatManager",
    "configuration": {},
    "hypertyType": [
      "chat"
    ],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [
      "https://catalogue.hybroker.rethink.ptinovacao.pt/.well-known/dataschema/Communication"
    ],
    "accessControlPolicy": "somePolicy"
  },
  "Connector": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "Connector",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10009,
    "version": "0.1",
    "description": "Description of Connector",
    "objectName": "Connector",
    "configuration": {
      "webrtc": {
        "iceServers": [
          {
            "url": "stun:stun.l.google.com:19302"
          },
          {
            "url": "turn:194.65.138.95:3478",
            "credential": "luis123",
            "username": "luis"
          }
        ]
      }
    },
    "hypertyType": [
      "audio",
      "video"
    ],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [
      "https://catalogue.hybroker.rethink.ptinovacao.pt/.well-known/dataschema/Connection"
    ],
    "accessControlPolicy": "somePolicy"
  },
  "BraceletSensorObserver": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "BraceletSensorObserver",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10010,
    "version": "0.1",
    "description": "Description of BraceletSensorObserver",
    "objectName": "BraceletSensorObserver",
    "configuration": {},
    "hypertyType": [
      "heart_rate",
      "sleep",
      "steps",
      "battery"
    ],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [
      "https://catalogue.hybroker.rethink.ptinovacao.pt/.well-known/dataschema/Context"
    ],
    "accessControlPolicy": "somePolicy"
  },
  "BraceletSensorReporter": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "BraceletSensorReporter",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10011,
    "version": "0.1",
    "description": "Description of BraceletSensorReporter",
    "objectName": "BraceletSensorReporter",
    "configuration": {},
    "hypertyType": [
      "heart_rate",
      "sleep",
      "steps",
      "battery"
    ],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [
      "https://catalogue.hybroker.rethink.ptinovacao.pt/.well-known/dataschema/Context"
    ],
    "accessControlPolicy": "somePolicy"
  },
  "NotificationsObserver": {
    "sourcePackage": {
      "sourceCode": "KGZ1bmN0aW9uKGYpe2lmKHR5cGVvZiBleHBvcnRzPT09Im9iamVjdCImJnR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIil7bW9kdWxlLmV4cG9ydHM9ZigpfWVsc2UgaWYodHlwZW9mIGRlZmluZT09PSJmdW5jdGlvbiImJmRlZmluZS5hbWQpe2RlZmluZShbXSxmKX1lbHNle3ZhciBnO2lmKHR5cGVvZiB3aW5kb3chPT0idW5kZWZpbmVkIil7Zz13aW5kb3d9ZWxzZSBpZih0eXBlb2YgZ2xvYmFsIT09InVuZGVmaW5lZCIpe2c9Z2xvYmFsfWVsc2UgaWYodHlwZW9mIHNlbGYhPT0idW5kZWZpbmVkIil7Zz1zZWxmfWVsc2V7Zz10aGlzfWcuYWN0aXZhdGUgPSBmKCl9fSkoZnVuY3Rpb24oKXt2YXIgZGVmaW5lLG1vZHVsZSxleHBvcnRzO3JldHVybiAoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PSJmdW5jdGlvbiImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoIkNhbm5vdCBmaW5kIG1vZHVsZSAnIitvKyInIik7dGhyb3cgZi5jb2RlPSJNT0RVTEVfTk9UX0ZPVU5EIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PSJmdW5jdGlvbiImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pKHsxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKKGZ1bmN0aW9uIChnbG9iYWwpewovKioKKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0EKKiBDb3B5cmlnaHQgMjAxNiBJTkVTQy1JRAoqIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTAoqIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WCiogQ29weXJpZ2h0IDIwMTYgT1JBTkdFIFNBCiogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBRwoqIENvcHlyaWdodCAyMDE2IEFwaXplZQoqIENvcHlyaWdodCAyMDE2IFRFQ0hOSVNDSEUgVU5JVkVSU0lUQVQgQkVSTElOCioKKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CioKKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAoqCiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQoqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAoqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgoqKi8KCi8vIERpc3RyaWJ1dGlvbiBmaWxlIGZvciBTeW5jaGVyLmpzIAovLyB2ZXJzaW9uOiAwLjMuMAovLyBMYXN0IGJ1aWxkOiBUaHUgSnVsIDIxIDIwMTYgMTU6MzE6MzIgR01UKzAxMDAgKFdFU1QpCgohZnVuY3Rpb24oZSl7aWYoIm9iamVjdCI9PXR5cGVvZiBleHBvcnRzJiYidW5kZWZpbmVkIiE9dHlwZW9mIG1vZHVsZSltb2R1bGUuZXhwb3J0cz1lKCk7ZWxzZSBpZigiZnVuY3Rpb24iPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kKWRlZmluZShbXSxlKTtlbHNle3ZhciB0O3Q9InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3c/d2luZG93OiJ1bmRlZmluZWQiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbDoidW5kZWZpbmVkIiE9dHlwZW9mIHNlbGY/c2VsZjp0aGlzLHQuU3luY2hlcj1lKCl9fShmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbiBlKHQscixvKXtmdW5jdGlvbiBuKHMsYyl7aWYoIXJbc10pe2lmKCF0W3NdKXt2YXIgYT0iZnVuY3Rpb24iPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighYyYmYSlyZXR1cm4gYShzLCEwKTtpZihpKXJldHVybiBpKHMsITApO3ZhciB1PW5ldyBFcnJvcigiQ2Fubm90IGZpbmQgbW9kdWxlICciK3MrIiciKTt0aHJvdyB1LmNvZGU9Ik1PRFVMRV9OT1RfRk9VTkQiLHV9dmFyIGw9cltzXT17ZXhwb3J0czp7fX07dFtzXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgcj10W3NdWzFdW2VdO3JldHVybiBuKHI/cjplKX0sbCxsLmV4cG9ydHMsZSx0LHIsbyl9cmV0dXJuIHJbc10uZXhwb3J0c31mb3IodmFyIGk9ImZ1bmN0aW9uIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUscz0wO3M8by5sZW5ndGg7cysrKW4ob1tzXSk7cmV0dXJuIG59KHsxOltmdW5jdGlvbihlLHQscil7T2JqZWN0Lm9ic2VydmUmJiFBcnJheS5vYnNlcnZlJiZmdW5jdGlvbihlLHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgcj1lLmdldE5vdGlmaWVyLG89InBlcmZvcm1DaGFuZ2UiLG49Il9vcmlnaW5hbCIsaT0ic3BsaWNlIixzPXtwdXNoOmZ1bmN0aW9uIGEoZSl7dmFyIHQ9YXJndW1lbnRzLHM9YVtuXS5hcHBseSh0aGlzLHQpO3JldHVybiByKHRoaXMpW29dKGksZnVuY3Rpb24oKXtyZXR1cm57aW5kZXg6cy10Lmxlbmd0aCxhZGRlZENvdW50OnQubGVuZ3RoLHJlbW92ZWQ6W119fSksc30sdW5zaGlmdDpmdW5jdGlvbiB1KGUpe3ZhciB0PWFyZ3VtZW50cyxzPXVbbl0uYXBwbHkodGhpcyx0KTtyZXR1cm4gcih0aGlzKVtvXShpLGZ1bmN0aW9uKCl7cmV0dXJue2luZGV4OjAsYWRkZWRDb3VudDp0Lmxlbmd0aCxyZW1vdmVkOltdfX0pLHN9LHBvcDpmdW5jdGlvbiBsKCl7dmFyIGU9dGhpcy5sZW5ndGgsdD1sW25dLmNhbGwodGhpcyk7cmV0dXJuIHRoaXMubGVuZ3RoIT09ZSYmcih0aGlzKVtvXShpLGZ1bmN0aW9uKCl7cmV0dXJue2luZGV4OnRoaXMubGVuZ3RoLGFkZGVkQ291bnQ6MCxyZW1vdmVkOlt0XX19LHRoaXMpLHR9LHNoaWZ0OmZ1bmN0aW9uIGYoKXt2YXIgZT10aGlzLmxlbmd0aCx0PWZbbl0uY2FsbCh0aGlzKTtyZXR1cm4gdGhpcy5sZW5ndGghPT1lJiZyKHRoaXMpW29dKGksZnVuY3Rpb24oKXtyZXR1cm57aW5kZXg6MCxhZGRlZENvdW50OjAscmVtb3ZlZDpbdF19fSx0aGlzKSx0fSxzcGxpY2U6ZnVuY3Rpb24gZChlLHQpe3ZhciBzPWFyZ3VtZW50cyxjPWRbbl0uYXBwbHkodGhpcyxzKTtyZXR1cm4oYy5sZW5ndGh8fHMubGVuZ3RoPjIpJiZyKHRoaXMpW29dKGksZnVuY3Rpb24oKXtyZXR1cm57aW5kZXg6ZSxhZGRlZENvdW50OnMubGVuZ3RoLTIscmVtb3ZlZDpjfX0sdGhpcyksY319O2Zvcih2YXIgYyBpbiBzKXNbY11bbl09dC5wcm90b3R5cGVbY10sdC5wcm90b3R5cGVbY109c1tjXTt0Lm9ic2VydmU9ZnVuY3Rpb24odCxyKXtyZXR1cm4gZS5vYnNlcnZlKHQscixbImFkZCIsInVwZGF0ZSIsImRlbGV0ZSIsaV0pfSx0LnVub2JzZXJ2ZT1lLnVub2JzZXJ2ZX0oT2JqZWN0LEFycmF5KX0se31dLDI6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9eyJkZWZhdWx0IjplKCJjb3JlLWpzL2xpYnJhcnkvZm4vanNvbi9zdHJpbmdpZnkiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vanNvbi9zdHJpbmdpZnkiOjE4fV0sMzpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvY3JlYXRlIiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9jcmVhdGUiOjE5fV0sNDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZGVmaW5lLXByb3BlcnR5IiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9kZWZpbmUtcHJvcGVydHkiOjIwfV0sNTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiOjIxfV0sNjpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZiIpLF9fZXNNb2R1bGU6ITB9fSx7ImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZiI6MjJ9XSw3OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPXsiZGVmYXVsdCI6ZSgiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9rZXlzIiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9rZXlzIjoyM31dLDg6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9eyJkZWZhdWx0IjplKCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L3NldC1wcm90b3R5cGUtb2YiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L3NldC1wcm90b3R5cGUtb2YiOjI0fV0sOTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9wcm9taXNlIiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL3Byb21pc2UiOjI1fV0sMTA6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9eyJkZWZhdWx0IjplKCJjb3JlLWpzL2xpYnJhcnkvZm4vc3ltYm9sIiksX19lc01vZHVsZTohMH19LHsiY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbCI6MjZ9XSwxMTpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz17ImRlZmF1bHQiOmUoImNvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wvaXRlcmF0b3IiKSxfX2VzTW9kdWxlOiEwfX0seyJjb3JlLWpzL2xpYnJhcnkvZm4vc3ltYm9sL2l0ZXJhdG9yIjoyN31dLDEyOltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3IuX19lc01vZHVsZT0hMCxyWyJkZWZhdWx0Il09ZnVuY3Rpb24oZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKX19LHt9XSwxMzpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fXIuX19lc01vZHVsZT0hMDt2YXIgbj1lKCIuLi9jb3JlLWpzL29iamVjdC9kZWZpbmUtcHJvcGVydHkiKSxpPW8obik7clsiZGVmYXVsdCJdPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgcj0wO3I8dC5sZW5ndGg7cisrKXt2YXIgbz10W3JdO28uZW51bWVyYWJsZT1vLmVudW1lcmFibGV8fCExLG8uY29uZmlndXJhYmxlPSEwLCJ2YWx1ZSJpbiBvJiYoby53cml0YWJsZT0hMCksKDAsaVsiZGVmYXVsdCJdKShlLG8ua2V5LG8pfX1yZXR1cm4gZnVuY3Rpb24odCxyLG8pe3JldHVybiByJiZlKHQucHJvdG90eXBlLHIpLG8mJmUodCxvKSx0fX0oKX0seyIuLi9jb3JlLWpzL29iamVjdC9kZWZpbmUtcHJvcGVydHkiOjR9XSwxNDpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fXIuX19lc01vZHVsZT0hMDt2YXIgbj1lKCIuLi9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mIiksaT1vKG4pLHM9ZSgiLi4vY29yZS1qcy9vYmplY3QvZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIiksYz1vKHMpO3JbImRlZmF1bHQiXT1mdW5jdGlvbiBhKGUsdCxyKXtudWxsPT09ZSYmKGU9RnVuY3Rpb24ucHJvdG90eXBlKTt2YXIgbz0oMCxjWyJkZWZhdWx0Il0pKGUsdCk7aWYodm9pZCAwPT09byl7dmFyIG49KDAsaVsiZGVmYXVsdCJdKShlKTtyZXR1cm4gbnVsbD09PW4/dm9pZCAwOmEobix0LHIpfWlmKCJ2YWx1ZSJpbiBvKXJldHVybiBvLnZhbHVlO3ZhciBzPW8uZ2V0O2lmKHZvaWQgMCE9PXMpcmV0dXJuIHMuY2FsbChyKX19LHsiLi4vY29yZS1qcy9vYmplY3QvZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIjo1LCIuLi9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mIjo2fV0sMTU6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1yLl9fZXNNb2R1bGU9ITA7dmFyIG49ZSgiLi4vY29yZS1qcy9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZiIpLGk9byhuKSxzPWUoIi4uL2NvcmUtanMvb2JqZWN0L2NyZWF0ZSIpLGM9byhzKSxhPWUoIi4uL2hlbHBlcnMvdHlwZW9mIiksdT1vKGEpO3JbImRlZmF1bHQiXT1mdW5jdGlvbihlLHQpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90ICIrKCJ1bmRlZmluZWQiPT10eXBlb2YgdD8idW5kZWZpbmVkIjooMCx1WyJkZWZhdWx0Il0pKHQpKSk7ZS5wcm90b3R5cGU9KDAsY1siZGVmYXVsdCJdKSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKGlbImRlZmF1bHQiXT8oMCxpWyJkZWZhdWx0Il0pKGUsdCk6ZS5fX3Byb3RvX189dCl9fSx7Ii4uL2NvcmUtanMvb2JqZWN0L2NyZWF0ZSI6MywiLi4vY29yZS1qcy9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZiI6OCwiLi4vaGVscGVycy90eXBlb2YiOjE3fV0sMTY6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1yLl9fZXNNb2R1bGU9ITA7dmFyIG49ZSgiLi4vaGVscGVycy90eXBlb2YiKSxpPW8obik7clsiZGVmYXVsdCJdPWZ1bmN0aW9uKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWQiKTtyZXR1cm4hdHx8Im9iamVjdCIhPT0oInVuZGVmaW5lZCI9PXR5cGVvZiB0PyJ1bmRlZmluZWQiOigwLGlbImRlZmF1bHQiXSkodCkpJiYiZnVuY3Rpb24iIT10eXBlb2YgdD9lOnR9fSx7Ii4uL2hlbHBlcnMvdHlwZW9mIjoxN31dLDE3OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19ci5fX2VzTW9kdWxlPSEwO3ZhciBuPWUoIi4uL2NvcmUtanMvc3ltYm9sL2l0ZXJhdG9yIiksaT1vKG4pLHM9ZSgiLi4vY29yZS1qcy9zeW1ib2wiKSxjPW8ocyksYT0iZnVuY3Rpb24iPT10eXBlb2YgY1siZGVmYXVsdCJdJiYic3ltYm9sIj09dHlwZW9mIGlbImRlZmF1bHQiXT9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiYiZnVuY3Rpb24iPT10eXBlb2YgY1siZGVmYXVsdCJdJiZlLmNvbnN0cnVjdG9yPT09Y1siZGVmYXVsdCJdPyJzeW1ib2wiOnR5cGVvZiBlfTtyWyJkZWZhdWx0Il09ImZ1bmN0aW9uIj09dHlwZW9mIGNbImRlZmF1bHQiXSYmInN5bWJvbCI9PT1hKGlbImRlZmF1bHQiXSk/ZnVuY3Rpb24oZSl7cmV0dXJuInVuZGVmaW5lZCI9PXR5cGVvZiBlPyJ1bmRlZmluZWQiOmEoZSl9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiYiZnVuY3Rpb24iPT10eXBlb2YgY1siZGVmYXVsdCJdJiZlLmNvbnN0cnVjdG9yPT09Y1siZGVmYXVsdCJdPyJzeW1ib2wiOiJ1bmRlZmluZWQiPT10eXBlb2YgZT8idW5kZWZpbmVkIjphKGUpfX0seyIuLi9jb3JlLWpzL3N5bWJvbCI6MTAsIi4uL2NvcmUtanMvc3ltYm9sL2l0ZXJhdG9yIjoxMX1dLDE4OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLG49by5KU09OfHwoby5KU09OPXtzdHJpbmdpZnk6SlNPTi5zdHJpbmdpZnl9KTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG4uc3RyaW5naWZ5LmFwcGx5KG4sYXJndW1lbnRzKX19LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MzV9XSwxOTpbZnVuY3Rpb24oZSx0LHIpe2UoIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5jcmVhdGUiKTt2YXIgbz1lKCIuLi8uLi9tb2R1bGVzL19jb3JlIikuT2JqZWN0O3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybiBvLmNyZWF0ZShlLHQpfX0seyIuLi8uLi9tb2R1bGVzL19jb3JlIjozNSwiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmNyZWF0ZSI6MTAwfV0sMjA6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnR5Iik7dmFyIG89ZSgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLk9iamVjdDt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBvLmRlZmluZVByb3BlcnR5KGUsdCxyKX19LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MzUsIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydHkiOjEwMX1dLDIxOltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciIpO3ZhciBvPWUoIi4uLy4uL21vZHVsZXMvX2NvcmUiKS5PYmplY3Q7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG8uZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCl9fSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjM1LCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIjoxMDJ9XSwyMjpbZnVuY3Rpb24oZSx0LHIpe2UoIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtcHJvdG90eXBlLW9mIiksdC5leHBvcnRzPWUoIi4uLy4uL21vZHVsZXMvX2NvcmUiKS5PYmplY3QuZ2V0UHJvdG90eXBlT2Z9LHsiLi4vLi4vbW9kdWxlcy9fY29yZSI6MzUsIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtcHJvdG90eXBlLW9mIjoxMDN9XSwyMzpbZnVuY3Rpb24oZSx0LHIpe2UoIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzIiksdC5leHBvcnRzPWUoIi4uLy4uL21vZHVsZXMvX2NvcmUiKS5PYmplY3Qua2V5c30seyIuLi8uLi9tb2R1bGVzL19jb3JlIjozNSwiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmtleXMiOjEwNH1dLDI0OltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LnNldC1wcm90b3R5cGUtb2YiKSx0LmV4cG9ydHM9ZSgiLi4vLi4vbW9kdWxlcy9fY29yZSIpLk9iamVjdC5zZXRQcm90b3R5cGVPZn0seyIuLi8uLi9tb2R1bGVzL19jb3JlIjozNSwiLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LnNldC1wcm90b3R5cGUtb2YiOjEwNX1dLDI1OltmdW5jdGlvbihlLHQscil7ZSgiLi4vbW9kdWxlcy9lczYub2JqZWN0LnRvLXN0cmluZyIpLGUoIi4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvciIpLGUoIi4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSIpLGUoIi4uL21vZHVsZXMvZXM2LnByb21pc2UiKSx0LmV4cG9ydHM9ZSgiLi4vbW9kdWxlcy9fY29yZSIpLlByb21pc2V9LHsiLi4vbW9kdWxlcy9fY29yZSI6MzUsIi4uL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmciOjEwNiwiLi4vbW9kdWxlcy9lczYucHJvbWlzZSI6MTA3LCIuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IiOjEwOCwiLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIjoxMTJ9XSwyNjpbZnVuY3Rpb24oZSx0LHIpe2UoIi4uLy4uL21vZHVsZXMvZXM2LnN5bWJvbCIpLGUoIi4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmciKSxlKCIuLi8uLi9tb2R1bGVzL2VzNy5zeW1ib2wuYXN5bmMtaXRlcmF0b3IiKSxlKCIuLi8uLi9tb2R1bGVzL2VzNy5zeW1ib2wub2JzZXJ2YWJsZSIpLHQuZXhwb3J0cz1lKCIuLi8uLi9tb2R1bGVzL19jb3JlIikuU3ltYm9sfSx7Ii4uLy4uL21vZHVsZXMvX2NvcmUiOjM1LCIuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nIjoxMDYsIi4uLy4uL21vZHVsZXMvZXM2LnN5bWJvbCI6MTA5LCIuLi8uLi9tb2R1bGVzL2VzNy5zeW1ib2wuYXN5bmMtaXRlcmF0b3IiOjExMCwiLi4vLi4vbW9kdWxlcy9lczcuc3ltYm9sLm9ic2VydmFibGUiOjExMX1dLDI3OltmdW5jdGlvbihlLHQscil7ZSgiLi4vLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yIiksZSgiLi4vLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIiksdC5leHBvcnRzPWUoIi4uLy4uL21vZHVsZXMvX3drcy1leHQiKS5mKCJpdGVyYXRvciIpfSx7Ii4uLy4uL21vZHVsZXMvX3drcy1leHQiOjk2LCIuLi8uLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IiOjEwOCwiLi4vLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIjoxMTJ9XSwyODpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlKXtpZigiZnVuY3Rpb24iIT10eXBlb2YgZSl0aHJvdyBUeXBlRXJyb3IoZSsiIGlzIG5vdCBhIGZ1bmN0aW9uISIpO3JldHVybiBlfX0se31dLDI5OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKCl7fX0se31dLDMwOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLG8pe2lmKCEoZSBpbnN0YW5jZW9mIHQpfHx2b2lkIDAhPT1vJiZvIGluIGUpdGhyb3cgVHlwZUVycm9yKHIrIjogaW5jb3JyZWN0IGludm9jYXRpb24hIik7cmV0dXJuIGV9fSx7fV0sMzE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19pcy1vYmplY3QiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYoIW8oZSkpdGhyb3cgVHlwZUVycm9yKGUrIiBpcyBub3QgYW4gb2JqZWN0ISIpO3JldHVybiBlfX0seyIuL19pcy1vYmplY3QiOjU0fV0sMzI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL190by1pb2JqZWN0Iiksbj1lKCIuL190by1sZW5ndGgiKSxpPWUoIi4vX3RvLWluZGV4Iik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0LHIscyl7dmFyIGMsYT1vKHQpLHU9bihhLmxlbmd0aCksbD1pKHMsdSk7aWYoZSYmciE9cil7Zm9yKDt1Pmw7KWlmKGM9YVtsKytdLGMhPWMpcmV0dXJuITB9ZWxzZSBmb3IoO3U+bDtsKyspaWYoKGV8fGwgaW4gYSkmJmFbbF09PT1yKXJldHVybiBlfHxsfHwwO3JldHVybiFlJiYtMX19fSx7Ii4vX3RvLWluZGV4Ijo4OCwiLi9fdG8taW9iamVjdCI6OTAsIi4vX3RvLWxlbmd0aCI6OTF9XSwzMzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2NvZiIpLG49ZSgiLi9fd2tzIikoInRvU3RyaW5nVGFnIiksaT0iQXJndW1lbnRzIj09byhmdW5jdGlvbigpe3JldHVybiBhcmd1bWVudHN9KCkpLHM9ZnVuY3Rpb24oZSx0KXt0cnl7cmV0dXJuIGVbdF19Y2F0Y2gocil7fX07dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0LHIsYztyZXR1cm4gdm9pZCAwPT09ZT8iVW5kZWZpbmVkIjpudWxsPT09ZT8iTnVsbCI6InN0cmluZyI9PXR5cGVvZihyPXModD1PYmplY3QoZSksbikpP3I6aT9vKHQpOiJPYmplY3QiPT0oYz1vKHQpKSYmImZ1bmN0aW9uIj09dHlwZW9mIHQuY2FsbGVlPyJBcmd1bWVudHMiOmN9fSx7Ii4vX2NvZiI6MzQsIi4vX3drcyI6OTd9XSwzNDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPXt9LnRvU3RyaW5nO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gby5jYWxsKGUpLnNsaWNlKDgsLTEpfX0se31dLDM1OltmdW5jdGlvbihlLHQscil7dmFyIG89dC5leHBvcnRzPXt2ZXJzaW9uOiIyLjQuMCJ9OyJudW1iZXIiPT10eXBlb2YgX19lJiYoX19lPW8pfSx7fV0sMzY6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19hLWZ1bmN0aW9uIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtpZihvKGUpLHZvaWQgMD09PXQpcmV0dXJuIGU7c3dpdGNoKHIpe2Nhc2UgMTpyZXR1cm4gZnVuY3Rpb24ocil7cmV0dXJuIGUuY2FsbCh0LHIpfTtjYXNlIDI6cmV0dXJuIGZ1bmN0aW9uKHIsbyl7cmV0dXJuIGUuY2FsbCh0LHIsbyl9O2Nhc2UgMzpyZXR1cm4gZnVuY3Rpb24ocixvLG4pe3JldHVybiBlLmNhbGwodCxyLG8sbil9fXJldHVybiBmdW5jdGlvbigpe3JldHVybiBlLmFwcGx5KHQsYXJndW1lbnRzKX19fSx7Ii4vX2EtZnVuY3Rpb24iOjI4fV0sMzc6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYodm9pZCAwPT1lKXRocm93IFR5cGVFcnJvcigiQ2FuJ3QgY2FsbCBtZXRob2Qgb24gICIrZSk7cmV0dXJuIGV9fSx7fV0sMzg6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9IWUoIi4vX2ZhaWxzIikoZnVuY3Rpb24oKXtyZXR1cm4gNyE9T2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCJhIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYX0pfSx7Ii4vX2ZhaWxzIjo0M31dLDM5OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9faXMtb2JqZWN0Iiksbj1lKCIuL19nbG9iYWwiKS5kb2N1bWVudCxpPW8obikmJm8obi5jcmVhdGVFbGVtZW50KTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGk/bi5jcmVhdGVFbGVtZW50KGUpOnt9fX0seyIuL19nbG9iYWwiOjQ1LCIuL19pcy1vYmplY3QiOjU0fV0sNDA6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ImNvbnN0cnVjdG9yLGhhc093blByb3BlcnR5LGlzUHJvdG90eXBlT2YscHJvcGVydHlJc0VudW1lcmFibGUsdG9Mb2NhbGVTdHJpbmcsdG9TdHJpbmcsdmFsdWVPZiIuc3BsaXQoIiwiKX0se31dLDQxOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fb2JqZWN0LWtleXMiKSxuPWUoIi4vX29iamVjdC1nb3BzIiksaT1lKCIuL19vYmplY3QtcGllIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0PW8oZSkscj1uLmY7aWYocilmb3IodmFyIHMsYz1yKGUpLGE9aS5mLHU9MDtjLmxlbmd0aD51OylhLmNhbGwoZSxzPWNbdSsrXSkmJnQucHVzaChzKTtyZXR1cm4gdH19LHsiLi9fb2JqZWN0LWdvcHMiOjcxLCIuL19vYmplY3Qta2V5cyI6NzQsIi4vX29iamVjdC1waWUiOjc1fV0sNDI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19nbG9iYWwiKSxuPWUoIi4vX2NvcmUiKSxpPWUoIi4vX2N0eCIpLHM9ZSgiLi9faGlkZSIpLGM9InByb3RvdHlwZSIsYT1mdW5jdGlvbihlLHQscil7dmFyIHUsbCxmLGQ9ZSZhLkYsXz1lJmEuRyxwPWUmYS5TLGI9ZSZhLlAsaD1lJmEuQix5PWUmYS5XLHY9Xz9uOm5bdF18fChuW3RdPXt9KSxqPXZbY10sbT1fP286cD9vW3RdOihvW3RdfHx7fSlbY107XyYmKHI9dCk7Zm9yKHUgaW4gcilsPSFkJiZtJiZ2b2lkIDAhPT1tW3VdLGwmJnUgaW4gdnx8KGY9bD9tW3VdOnJbdV0sdlt1XT1fJiYiZnVuY3Rpb24iIT10eXBlb2YgbVt1XT9yW3VdOmgmJmw/aShmLG8pOnkmJm1bdV09PWY/ZnVuY3Rpb24oZSl7dmFyIHQ9ZnVuY3Rpb24odCxyLG8pe2lmKHRoaXMgaW5zdGFuY2VvZiBlKXtzd2l0Y2goYXJndW1lbnRzLmxlbmd0aCl7Y2FzZSAwOnJldHVybiBuZXcgZTtjYXNlIDE6cmV0dXJuIG5ldyBlKHQpO2Nhc2UgMjpyZXR1cm4gbmV3IGUodCxyKX1yZXR1cm4gbmV3IGUodCxyLG8pfXJldHVybiBlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07cmV0dXJuIHRbY109ZVtjXSx0fShmKTpiJiYiZnVuY3Rpb24iPT10eXBlb2YgZj9pKEZ1bmN0aW9uLmNhbGwsZik6ZixiJiYoKHYudmlydHVhbHx8KHYudmlydHVhbD17fSkpW3VdPWYsZSZhLlImJmomJiFqW3VdJiZzKGosdSxmKSkpfTthLkY9MSxhLkc9MixhLlM9NCxhLlA9OCxhLkI9MTYsYS5XPTMyLGEuVT02NCxhLlI9MTI4LHQuZXhwb3J0cz1hfSx7Ii4vX2NvcmUiOjM1LCIuL19jdHgiOjM2LCIuL19nbG9iYWwiOjQ1LCIuL19oaWRlIjo0N31dLDQzOltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3RyeXtyZXR1cm4hIWUoKX1jYXRjaCh0KXtyZXR1cm4hMH19fSx7fV0sNDQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19jdHgiKSxuPWUoIi4vX2l0ZXItY2FsbCIpLGk9ZSgiLi9faXMtYXJyYXktaXRlciIpLHM9ZSgiLi9fYW4tb2JqZWN0IiksYz1lKCIuL190by1sZW5ndGgiKSxhPWUoIi4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kIiksdT17fSxsPXt9LHI9dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLGYsZCl7dmFyIF8scCxiLGgseT1kP2Z1bmN0aW9uKCl7cmV0dXJuIGV9OmEoZSksdj1vKHIsZix0PzI6MSksaj0wO2lmKCJmdW5jdGlvbiIhPXR5cGVvZiB5KXRocm93IFR5cGVFcnJvcihlKyIgaXMgbm90IGl0ZXJhYmxlISIpO2lmKGkoeSkpe2ZvcihfPWMoZS5sZW5ndGgpO18+ajtqKyspaWYoaD10P3YocyhwPWVbal0pWzBdLHBbMV0pOnYoZVtqXSksaD09PXV8fGg9PT1sKXJldHVybiBofWVsc2UgZm9yKGI9eS5jYWxsKGUpOyEocD1iLm5leHQoKSkuZG9uZTspaWYoaD1uKGIsdixwLnZhbHVlLHQpLGg9PT11fHxoPT09bClyZXR1cm4gaH07ci5CUkVBSz11LHIuUkVUVVJOPWx9LHsiLi9fYW4tb2JqZWN0IjozMSwiLi9fY3R4IjozNiwiLi9faXMtYXJyYXktaXRlciI6NTIsIi4vX2l0ZXItY2FsbCI6NTUsIi4vX3RvLWxlbmd0aCI6OTEsIi4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kIjo5OH1dLDQ1OltmdW5jdGlvbihlLHQscil7dmFyIG89dC5leHBvcnRzPSJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3cuTWF0aD09TWF0aD93aW5kb3c6InVuZGVmaW5lZCIhPXR5cGVvZiBzZWxmJiZzZWxmLk1hdGg9PU1hdGg/c2VsZjpGdW5jdGlvbigicmV0dXJuIHRoaXMiKSgpOyJudW1iZXIiPT10eXBlb2YgX19nJiYoX19nPW8pfSx7fV0sNDY6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz17fS5oYXNPd25Qcm9wZXJ0eTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gby5jYWxsKGUsdCl9fSx7fV0sNDc6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19vYmplY3QtZHAiKSxuPWUoIi4vX3Byb3BlcnR5LWRlc2MiKTt0LmV4cG9ydHM9ZSgiLi9fZGVzY3JpcHRvcnMiKT9mdW5jdGlvbihlLHQscil7cmV0dXJuIG8uZihlLHQsbigxLHIpKX06ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlW3RdPXIsZX19LHsiLi9fZGVzY3JpcHRvcnMiOjM4LCIuL19vYmplY3QtZHAiOjY2LCIuL19wcm9wZXJ0eS1kZXNjIjo3N31dLDQ4OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWUoIi4vX2dsb2JhbCIpLmRvY3VtZW50JiZkb2N1bWVudC5kb2N1bWVudEVsZW1lbnR9LHsiLi9fZ2xvYmFsIjo0NX1dLDQ5OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPSFlKCIuL19kZXNjcmlwdG9ycyIpJiYhZSgiLi9fZmFpbHMiKShmdW5jdGlvbigpe3JldHVybiA3IT1PYmplY3QuZGVmaW5lUHJvcGVydHkoZSgiLi9fZG9tLWNyZWF0ZSIpKCJkaXYiKSwiYSIse2dldDpmdW5jdGlvbigpe3JldHVybiA3fX0pLmF9KX0seyIuL19kZXNjcmlwdG9ycyI6MzgsIi4vX2RvbS1jcmVhdGUiOjM5LCIuL19mYWlscyI6NDN9XSw1MDpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7dmFyIG89dm9pZCAwPT09cjtzd2l0Y2godC5sZW5ndGgpe2Nhc2UgMDpyZXR1cm4gbz9lKCk6ZS5jYWxsKHIpO2Nhc2UgMTpyZXR1cm4gbz9lKHRbMF0pOmUuY2FsbChyLHRbMF0pO2Nhc2UgMjpyZXR1cm4gbz9lKHRbMF0sdFsxXSk6ZS5jYWxsKHIsdFswXSx0WzFdKTtjYXNlIDM6cmV0dXJuIG8/ZSh0WzBdLHRbMV0sdFsyXSk6ZS5jYWxsKHIsdFswXSx0WzFdLHRbMl0pO2Nhc2UgNDpyZXR1cm4gbz9lKHRbMF0sdFsxXSx0WzJdLHRbM10pOmUuY2FsbChyLHRbMF0sdFsxXSx0WzJdLHRbM10pfXJldHVybiBlLmFwcGx5KHIsdCl9fSx7fV0sNTE6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19jb2YiKTt0LmV4cG9ydHM9T2JqZWN0KCJ6IikucHJvcGVydHlJc0VudW1lcmFibGUoMCk/T2JqZWN0OmZ1bmN0aW9uKGUpe3JldHVybiJTdHJpbmciPT1vKGUpP2Uuc3BsaXQoIiIpOk9iamVjdChlKX19LHsiLi9fY29mIjozNH1dLDUyOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9faXRlcmF0b3JzIiksbj1lKCIuL193a3MiKSgiaXRlcmF0b3IiKSxpPUFycmF5LnByb3RvdHlwZTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMCE9PWUmJihvLkFycmF5PT09ZXx8aVtuXT09PWUpfX0seyIuL19pdGVyYXRvcnMiOjYwLCIuL193a3MiOjk3fV0sNTM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19jb2YiKTt0LmV4cG9ydHM9QXJyYXkuaXNBcnJheXx8ZnVuY3Rpb24oZSl7cmV0dXJuIkFycmF5Ij09byhlKX19LHsiLi9fY29mIjozNH1dLDU0OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiJvYmplY3QiPT10eXBlb2YgZT9udWxsIT09ZToiZnVuY3Rpb24iPT10eXBlb2YgZX19LHt9XSw1NTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2FuLW9iamVjdCIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscixuKXt0cnl7cmV0dXJuIG4/dChvKHIpWzBdLHJbMV0pOnQocil9Y2F0Y2goaSl7dmFyIHM9ZVsicmV0dXJuIl07dGhyb3cgdm9pZCAwIT09cyYmbyhzLmNhbGwoZSkpLGl9fX0seyIuL19hbi1vYmplY3QiOjMxfV0sNTY6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG89ZSgiLi9fb2JqZWN0LWNyZWF0ZSIpLG49ZSgiLi9fcHJvcGVydHktZGVzYyIpLGk9ZSgiLi9fc2V0LXRvLXN0cmluZy10YWciKSxzPXt9O2UoIi4vX2hpZGUiKShzLGUoIi4vX3drcyIpKCJpdGVyYXRvciIpLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSx0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2UucHJvdG90eXBlPW8ocyx7bmV4dDpuKDEscil9KSxpKGUsdCsiIEl0ZXJhdG9yIil9fSx7Ii4vX2hpZGUiOjQ3LCIuL19vYmplY3QtY3JlYXRlIjo2NSwiLi9fcHJvcGVydHktZGVzYyI6NzcsIi4vX3NldC10by1zdHJpbmctdGFnIjo4MiwiLi9fd2tzIjo5N31dLDU3OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBvPWUoIi4vX2xpYnJhcnkiKSxuPWUoIi4vX2V4cG9ydCIpLGk9ZSgiLi9fcmVkZWZpbmUiKSxzPWUoIi4vX2hpZGUiKSxjPWUoIi4vX2hhcyIpLGE9ZSgiLi9faXRlcmF0b3JzIiksdT1lKCIuL19pdGVyLWNyZWF0ZSIpLGw9ZSgiLi9fc2V0LXRvLXN0cmluZy10YWciKSxmPWUoIi4vX29iamVjdC1ncG8iKSxkPWUoIi4vX3drcyIpKCJpdGVyYXRvciIpLF89IShbXS5rZXlzJiYibmV4dCJpbltdLmtleXMoKSkscD0iQEBpdGVyYXRvciIsYj0ia2V5cyIsaD0idmFsdWVzIix5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9O3QuZXhwb3J0cz1mdW5jdGlvbihlLHQscix2LGosbSxnKXt1KHIsdCx2KTt2YXIgdyxPLGsseD1mdW5jdGlvbihlKXtpZighXyYmZSBpbiBSKXJldHVybiBSW2VdO3N3aXRjaChlKXtjYXNlIGI6cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyByKHRoaXMsZSl9O2Nhc2UgaDpyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcyxlKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyByKHRoaXMsZSl9fSxDPXQrIiBJdGVyYXRvciIsRT1qPT1oLFM9ITEsUj1lLnByb3RvdHlwZSxUPVJbZF18fFJbcF18fGomJlJbal0sTT1UfHx4KGopLFA9aj9FP3goImVudHJpZXMiKTpNOnZvaWQgMCxBPSJBcnJheSI9PXQ/Ui5lbnRyaWVzfHxUOlQ7aWYoQSYmKGs9ZihBLmNhbGwobmV3IGUpKSxrIT09T2JqZWN0LnByb3RvdHlwZSYmKGwoayxDLCEwKSxvfHxjKGssZCl8fHMoayxkLHkpKSksRSYmVCYmVC5uYW1lIT09aCYmKFM9ITAsTT1mdW5jdGlvbigpe3JldHVybiBULmNhbGwodGhpcyl9KSxvJiYhZ3x8IV8mJiFTJiZSW2RdfHxzKFIsZCxNKSxhW3RdPU0sYVtDXT15LGopaWYodz17dmFsdWVzOkU/TTp4KGgpLGtleXM6bT9NOngoYiksZW50cmllczpQfSxnKWZvcihPIGluIHcpTyBpbiBSfHxpKFIsTyx3W09dKTtlbHNlIG4obi5QK24uRiooX3x8UyksdCx3KTtyZXR1cm4gd319LHsiLi9fZXhwb3J0Ijo0MiwiLi9faGFzIjo0NiwiLi9faGlkZSI6NDcsIi4vX2l0ZXItY3JlYXRlIjo1NiwiLi9faXRlcmF0b3JzIjo2MCwiLi9fbGlicmFyeSI6NjIsIi4vX29iamVjdC1ncG8iOjcyLCIuL19yZWRlZmluZSI6NzksIi4vX3NldC10by1zdHJpbmctdGFnIjo4MiwiLi9fd2tzIjo5N31dLDU4OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fd2tzIikoIml0ZXJhdG9yIiksbj0hMTt0cnl7dmFyIGk9WzddW29dKCk7aVsicmV0dXJuIl09ZnVuY3Rpb24oKXtuPSEwfSxBcnJheS5mcm9tKGksZnVuY3Rpb24oKXt0aHJvdyAyfSl9Y2F0Y2gocyl7fXQuZXhwb3J0cz1mdW5jdGlvbihlLHQpe2lmKCF0JiYhbilyZXR1cm4hMTt2YXIgcj0hMTt0cnl7dmFyIGk9WzddLHM9aVtvXSgpO3MubmV4dD1mdW5jdGlvbigpe3JldHVybntkb25lOnI9ITB9fSxpW29dPWZ1bmN0aW9uKCl7cmV0dXJuIHN9LGUoaSl9Y2F0Y2goYyl7fXJldHVybiByfX0seyIuL193a3MiOjk3fV0sNTk6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm57dmFsdWU6dCxkb25lOiEhZX19fSx7fV0sNjA6W2Z1bmN0aW9uKGUsdCxyKXt0LmV4cG9ydHM9e319LHt9XSw2MTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX29iamVjdC1rZXlzIiksbj1lKCIuL190by1pb2JqZWN0Iik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByLGk9bihlKSxzPW8oaSksYz1zLmxlbmd0aCxhPTA7Yz5hOylpZihpW3I9c1thKytdXT09PXQpcmV0dXJuIHJ9fSx7Ii4vX29iamVjdC1rZXlzIjo3NCwiLi9fdG8taW9iamVjdCI6OTB9XSw2MjpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz0hMH0se31dLDYzOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fdWlkIikoIm1ldGEiKSxuPWUoIi4vX2lzLW9iamVjdCIpLGk9ZSgiLi9faGFzIikscz1lKCIuL19vYmplY3QtZHAiKS5mLGM9MCxhPU9iamVjdC5pc0V4dGVuc2libGV8fGZ1bmN0aW9uKCl7cmV0dXJuITB9LHU9IWUoIi4vX2ZhaWxzIikoZnVuY3Rpb24oKXtyZXR1cm4gYShPYmplY3QucHJldmVudEV4dGVuc2lvbnMoe30pKX0pLGw9ZnVuY3Rpb24oZSl7cyhlLG8se3ZhbHVlOntpOiJPIisgKytjLHc6e319fSl9LGY9ZnVuY3Rpb24oZSx0KXtpZighbihlKSlyZXR1cm4ic3ltYm9sIj09dHlwZW9mIGU/ZTooInN0cmluZyI9PXR5cGVvZiBlPyJTIjoiUCIpK2U7aWYoIWkoZSxvKSl7aWYoIWEoZSkpcmV0dXJuIkYiO2lmKCF0KXJldHVybiJFIjtsKGUpfXJldHVybiBlW29dLml9LGQ9ZnVuY3Rpb24oZSx0KXtpZighaShlLG8pKXtpZighYShlKSlyZXR1cm4hMDtpZighdClyZXR1cm4hMTtsKGUpfXJldHVybiBlW29dLnd9LF89ZnVuY3Rpb24oZSl7cmV0dXJuIHUmJnAuTkVFRCYmYShlKSYmIWkoZSxvKSYmbChlKSxlfSxwPXQuZXhwb3J0cz17S0VZOm8sTkVFRDohMSxmYXN0S2V5OmYsZ2V0V2VhazpkLG9uRnJlZXplOl99fSx7Ii4vX2ZhaWxzIjo0MywiLi9faGFzIjo0NiwiLi9faXMtb2JqZWN0Ijo1NCwiLi9fb2JqZWN0LWRwIjo2NiwiLi9fdWlkIjo5NH1dLDY0OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fZ2xvYmFsIiksbj1lKCIuL190YXNrIikuc2V0LGk9by5NdXRhdGlvbk9ic2VydmVyfHxvLldlYktpdE11dGF0aW9uT2JzZXJ2ZXIscz1vLnByb2Nlc3MsYz1vLlByb21pc2UsYT0icHJvY2VzcyI9PWUoIi4vX2NvZiIpKHMpO3QuZXhwb3J0cz1mdW5jdGlvbigpe3ZhciBlLHQscix1PWZ1bmN0aW9uKCl7dmFyIG8sbjtmb3IoYSYmKG89cy5kb21haW4pJiZvLmV4aXQoKTtlOyl7bj1lLmZuLGU9ZS5uZXh0O3RyeXtuKCl9Y2F0Y2goaSl7dGhyb3cgZT9yKCk6dD12b2lkIDAsaX19dD12b2lkIDAsbyYmby5lbnRlcigpfTtpZihhKXI9ZnVuY3Rpb24oKXtzLm5leHRUaWNrKHUpfTtlbHNlIGlmKGkpe3ZhciBsPSEwLGY9ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIiIpO25ldyBpKHUpLm9ic2VydmUoZix7Y2hhcmFjdGVyRGF0YTohMH0pLHI9ZnVuY3Rpb24oKXtmLmRhdGE9bD0hbH19ZWxzZSBpZihjJiZjLnJlc29sdmUpe3ZhciBkPWMucmVzb2x2ZSgpO3I9ZnVuY3Rpb24oKXtkLnRoZW4odSl9fWVsc2Ugcj1mdW5jdGlvbigpe24uY2FsbChvLHUpfTtyZXR1cm4gZnVuY3Rpb24obyl7dmFyIG49e2ZuOm8sbmV4dDp2b2lkIDB9O3QmJih0Lm5leHQ9biksZXx8KGU9bixyKCkpLHQ9bn19fSx7Ii4vX2NvZiI6MzQsIi4vX2dsb2JhbCI6NDUsIi4vX3Rhc2siOjg3fV0sNjU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19hbi1vYmplY3QiKSxuPWUoIi4vX29iamVjdC1kcHMiKSxpPWUoIi4vX2VudW0tYnVnLWtleXMiKSxzPWUoIi4vX3NoYXJlZC1rZXkiKSgiSUVfUFJPVE8iKSxjPWZ1bmN0aW9uKCl7fSxhPSJwcm90b3R5cGUiLHU9ZnVuY3Rpb24oKXt2YXIgdCxyPWUoIi4vX2RvbS1jcmVhdGUiKSgiaWZyYW1lIiksbz1pLmxlbmd0aCxuPSI+Ijtmb3Ioci5zdHlsZS5kaXNwbGF5PSJub25lIixlKCIuL19odG1sIikuYXBwZW5kQ2hpbGQociksci5zcmM9ImphdmFzY3JpcHQ6Iix0PXIuY29udGVudFdpbmRvdy5kb2N1bWVudCx0Lm9wZW4oKSx0LndyaXRlKCI8c2NyaXB0PmRvY3VtZW50LkY9T2JqZWN0PC9zY3JpcHQiK24pLHQuY2xvc2UoKSx1PXQuRjtvLS07KWRlbGV0ZSB1W2FdW2lbb11dO3JldHVybiB1KCl9O3QuZXhwb3J0cz1PYmplY3QuY3JlYXRlfHxmdW5jdGlvbihlLHQpe3ZhciByO3JldHVybiBudWxsIT09ZT8oY1thXT1vKGUpLHI9bmV3IGMsY1thXT1udWxsLHJbc109ZSk6cj11KCksdm9pZCAwPT09dD9yOm4ocix0KX19LHsiLi9fYW4tb2JqZWN0IjozMSwiLi9fZG9tLWNyZWF0ZSI6MzksIi4vX2VudW0tYnVnLWtleXMiOjQwLCIuL19odG1sIjo0OCwiLi9fb2JqZWN0LWRwcyI6NjcsIi4vX3NoYXJlZC1rZXkiOjgzfV0sNjY6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19hbi1vYmplY3QiKSxuPWUoIi4vX2llOC1kb20tZGVmaW5lIiksaT1lKCIuL190by1wcmltaXRpdmUiKSxzPU9iamVjdC5kZWZpbmVQcm9wZXJ0eTtyLmY9ZSgiLi9fZGVzY3JpcHRvcnMiKT9PYmplY3QuZGVmaW5lUHJvcGVydHk6ZnVuY3Rpb24oZSx0LHIpe2lmKG8oZSksdD1pKHQsITApLG8ociksbil0cnl7cmV0dXJuIHMoZSx0LHIpfWNhdGNoKGMpe31pZigiZ2V0ImluIHJ8fCJzZXQiaW4gcil0aHJvdyBUeXBlRXJyb3IoIkFjY2Vzc29ycyBub3Qgc3VwcG9ydGVkISIpO3JldHVybiJ2YWx1ZSJpbiByJiYoZVt0XT1yLnZhbHVlKSxlfX0seyIuL19hbi1vYmplY3QiOjMxLCIuL19kZXNjcmlwdG9ycyI6MzgsIi4vX2llOC1kb20tZGVmaW5lIjo0OSwiLi9fdG8tcHJpbWl0aXZlIjo5M31dLDY3OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fb2JqZWN0LWRwIiksbj1lKCIuL19hbi1vYmplY3QiKSxpPWUoIi4vX29iamVjdC1rZXlzIik7dC5leHBvcnRzPWUoIi4vX2Rlc2NyaXB0b3JzIik/T2JqZWN0LmRlZmluZVByb3BlcnRpZXM6ZnVuY3Rpb24oZSx0KXtuKGUpO2Zvcih2YXIgcixzPWkodCksYz1zLmxlbmd0aCxhPTA7Yz5hOylvLmYoZSxyPXNbYSsrXSx0W3JdKTtyZXR1cm4gZX19LHsiLi9fYW4tb2JqZWN0IjozMSwiLi9fZGVzY3JpcHRvcnMiOjM4LCIuL19vYmplY3QtZHAiOjY2LCIuL19vYmplY3Qta2V5cyI6NzR9XSw2ODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX29iamVjdC1waWUiKSxuPWUoIi4vX3Byb3BlcnR5LWRlc2MiKSxpPWUoIi4vX3RvLWlvYmplY3QiKSxzPWUoIi4vX3RvLXByaW1pdGl2ZSIpLGM9ZSgiLi9faGFzIiksYT1lKCIuL19pZTgtZG9tLWRlZmluZSIpLHU9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtyLmY9ZSgiLi9fZGVzY3JpcHRvcnMiKT91OmZ1bmN0aW9uKGUsdCl7aWYoZT1pKGUpLHQ9cyh0LCEwKSxhKXRyeXtyZXR1cm4gdShlLHQpfWNhdGNoKHIpe31pZihjKGUsdCkpcmV0dXJuIG4oIW8uZi5jYWxsKGUsdCksZVt0XSl9fSx7Ii4vX2Rlc2NyaXB0b3JzIjozOCwiLi9faGFzIjo0NiwiLi9faWU4LWRvbS1kZWZpbmUiOjQ5LCIuL19vYmplY3QtcGllIjo3NSwiLi9fcHJvcGVydHktZGVzYyI6NzcsIi4vX3RvLWlvYmplY3QiOjkwLCIuL190by1wcmltaXRpdmUiOjkzfV0sNjk6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL190by1pb2JqZWN0Iiksbj1lKCIuL19vYmplY3QtZ29wbiIpLmYsaT17fS50b1N0cmluZyxzPSJvYmplY3QiPT10eXBlb2Ygd2luZG93JiZ3aW5kb3cmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzP09iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHdpbmRvdyk6W10sYz1mdW5jdGlvbihlKXt0cnl7cmV0dXJuIG4oZSl9Y2F0Y2godCl7cmV0dXJuIHMuc2xpY2UoKX19O3QuZXhwb3J0cy5mPWZ1bmN0aW9uKGUpe3JldHVybiBzJiYiW29iamVjdCBXaW5kb3ddIj09aS5jYWxsKGUpP2MoZSk6bihvKGUpKX19LHsiLi9fb2JqZWN0LWdvcG4iOjcwLCIuL190by1pb2JqZWN0Ijo5MH1dLDcwOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwiKSxuPWUoIi4vX2VudW0tYnVnLWtleXMiKS5jb25jYXQoImxlbmd0aCIsInByb3RvdHlwZSIpO3IuZj1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lc3x8ZnVuY3Rpb24oZSl7cmV0dXJuIG8oZSxuKX19LHsiLi9fZW51bS1idWcta2V5cyI6NDAsIi4vX29iamVjdC1rZXlzLWludGVybmFsIjo3M31dLDcxOltmdW5jdGlvbihlLHQscil7ci5mPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHN9LHt9XSw3MjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2hhcyIpLG49ZSgiLi9fdG8tb2JqZWN0IiksaT1lKCIuL19zaGFyZWQta2V5IikoIklFX1BST1RPIikscz1PYmplY3QucHJvdG90eXBlO3QuZXhwb3J0cz1PYmplY3QuZ2V0UHJvdG90eXBlT2Z8fGZ1bmN0aW9uKGUpe3JldHVybiBlPW4oZSksbyhlLGkpP2VbaV06ImZ1bmN0aW9uIj09dHlwZW9mIGUuY29uc3RydWN0b3ImJmUgaW5zdGFuY2VvZiBlLmNvbnN0cnVjdG9yP2UuY29uc3RydWN0b3IucHJvdG90eXBlOmUgaW5zdGFuY2VvZiBPYmplY3Q/czpudWxsfX0seyIuL19oYXMiOjQ2LCIuL19zaGFyZWQta2V5Ijo4MywiLi9fdG8tb2JqZWN0Ijo5Mn1dLDczOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9faGFzIiksbj1lKCIuL190by1pb2JqZWN0IiksaT1lKCIuL19hcnJheS1pbmNsdWRlcyIpKCExKSxzPWUoIi4vX3NoYXJlZC1rZXkiKSgiSUVfUFJPVE8iKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcixjPW4oZSksYT0wLHU9W107Zm9yKHIgaW4gYylyIT1zJiZvKGMscikmJnUucHVzaChyKTtmb3IoO3QubGVuZ3RoPmE7KW8oYyxyPXRbYSsrXSkmJih+aSh1LHIpfHx1LnB1c2gocikpO3JldHVybiB1fX0seyIuL19hcnJheS1pbmNsdWRlcyI6MzIsIi4vX2hhcyI6NDYsIi4vX3NoYXJlZC1rZXkiOjgzLCIuL190by1pb2JqZWN0Ijo5MH1dLDc0OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwiKSxuPWUoIi4vX2VudW0tYnVnLWtleXMiKTt0LmV4cG9ydHM9T2JqZWN0LmtleXN8fGZ1bmN0aW9uKGUpe3JldHVybiBvKGUsbil9fSx7Ii4vX2VudW0tYnVnLWtleXMiOjQwLCIuL19vYmplY3Qta2V5cy1pbnRlcm5hbCI6NzN9XSw3NTpbZnVuY3Rpb24oZSx0LHIpe3IuZj17fS5wcm9wZXJ0eUlzRW51bWVyYWJsZX0se31dLDc2OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fZXhwb3J0Iiksbj1lKCIuL19jb3JlIiksaT1lKCIuL19mYWlscyIpO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3ZhciByPShuLk9iamVjdHx8e30pW2VdfHxPYmplY3RbZV0scz17fTtzW2VdPXQociksbyhvLlMrby5GKmkoZnVuY3Rpb24oKXtyKDEpfSksIk9iamVjdCIscyl9fSx7Ii4vX2NvcmUiOjM1LCIuL19leHBvcnQiOjQyLCIuL19mYWlscyI6NDN9XSw3NzpbZnVuY3Rpb24oZSx0LHIpe3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybntlbnVtZXJhYmxlOiEoMSZlKSxjb25maWd1cmFibGU6ISgyJmUpLHdyaXRhYmxlOiEoNCZlKSx2YWx1ZTp0fX19LHt9XSw3ODpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2hpZGUiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgbiBpbiB0KXImJmVbbl0/ZVtuXT10W25dOm8oZSxuLHRbbl0pO3JldHVybiBlfX0seyIuL19oaWRlIjo0N31dLDc5OltmdW5jdGlvbihlLHQscil7dC5leHBvcnRzPWUoIi4vX2hpZGUiKX0seyIuL19oaWRlIjo0N31dLDgwOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9faXMtb2JqZWN0Iiksbj1lKCIuL19hbi1vYmplY3QiKSxpPWZ1bmN0aW9uKGUsdCl7aWYobihlKSwhbyh0KSYmbnVsbCE9PXQpdGhyb3cgVHlwZUVycm9yKHQrIjogY2FuJ3Qgc2V0IGFzIHByb3RvdHlwZSEiKX07dC5leHBvcnRzPXtzZXQ6T2JqZWN0LnNldFByb3RvdHlwZU9mfHwoIl9fcHJvdG9fXyJpbnt9P2Z1bmN0aW9uKHQscixvKXt0cnl7bz1lKCIuL19jdHgiKShGdW5jdGlvbi5jYWxsLGUoIi4vX29iamVjdC1nb3BkIikuZihPYmplY3QucHJvdG90eXBlLCJfX3Byb3RvX18iKS5zZXQsMiksbyh0LFtdKSxyPSEodCBpbnN0YW5jZW9mIEFycmF5KX1jYXRjaChuKXtyPSEwfXJldHVybiBmdW5jdGlvbihlLHQpe3JldHVybiBpKGUsdCkscj9lLl9fcHJvdG9fXz10Om8oZSx0KSxlfX0oe30sITEpOnZvaWQgMCksY2hlY2s6aX19LHsiLi9fYW4tb2JqZWN0IjozMSwiLi9fY3R4IjozNiwiLi9faXMtb2JqZWN0Ijo1NCwiLi9fb2JqZWN0LWdvcGQiOjY4fV0sODE6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG89ZSgiLi9fZ2xvYmFsIiksbj1lKCIuL19jb3JlIiksaT1lKCIuL19vYmplY3QtZHAiKSxzPWUoIi4vX2Rlc2NyaXB0b3JzIiksYz1lKCIuL193a3MiKSgic3BlY2llcyIpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD0iZnVuY3Rpb24iPT10eXBlb2YgbltlXT9uW2VdOm9bZV07cyYmdCYmIXRbY10mJmkuZih0LGMse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc319KX19LHsiLi9fY29yZSI6MzUsIi4vX2Rlc2NyaXB0b3JzIjozOCwiLi9fZ2xvYmFsIjo0NSwiLi9fb2JqZWN0LWRwIjo2NiwiLi9fd2tzIjo5N31dLDgyOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fb2JqZWN0LWRwIikuZixuPWUoIi4vX2hhcyIpLGk9ZSgiLi9fd2tzIikoInRvU3RyaW5nVGFnIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtlJiYhbihlPXI/ZTplLnByb3RvdHlwZSxpKSYmbyhlLGkse2NvbmZpZ3VyYWJsZTohMCx2YWx1ZTp0fSl9fSx7Ii4vX2hhcyI6NDYsIi4vX29iamVjdC1kcCI6NjYsIi4vX3drcyI6OTd9XSw4MzpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX3NoYXJlZCIpKCJrZXlzIiksbj1lKCIuL191aWQiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG9bZV18fChvW2VdPW4oZSkpfX0seyIuL19zaGFyZWQiOjg0LCIuL191aWQiOjk0fV0sODQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19nbG9iYWwiKSxuPSJfX2NvcmUtanNfc2hhcmVkX18iLGk9b1tuXXx8KG9bbl09e30pO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gaVtlXXx8KGlbZV09e30pfX0seyIuL19nbG9iYWwiOjQ1fV0sODU6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19hbi1vYmplY3QiKSxuPWUoIi4vX2EtZnVuY3Rpb24iKSxpPWUoIi4vX3drcyIpKCJzcGVjaWVzIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHIscz1vKGUpLmNvbnN0cnVjdG9yO3JldHVybiB2b2lkIDA9PT1zfHx2b2lkIDA9PShyPW8ocylbaV0pP3Q6bihyKX19LHsiLi9fYS1mdW5jdGlvbiI6MjgsIi4vX2FuLW9iamVjdCI6MzEsIi4vX3drcyI6OTd9XSw4NjpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX3RvLWludGVnZXIiKSxuPWUoIi4vX2RlZmluZWQiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQscil7dmFyIGkscyxjPVN0cmluZyhuKHQpKSxhPW8ociksdT1jLmxlbmd0aDtyZXR1cm4gYTwwfHxhPj11P2U/IiI6dm9pZCAwOihpPWMuY2hhckNvZGVBdChhKSxpPDU1Mjk2fHxpPjU2MzE5fHxhKzE9PT11fHwocz1jLmNoYXJDb2RlQXQoYSsxKSk8NTYzMjB8fHM+NTczNDM/ZT9jLmNoYXJBdChhKTppOmU/Yy5zbGljZShhLGErMik6KGktNTUyOTY8PDEwKSsocy01NjMyMCkrNjU1MzYpfX19LHsiLi9fZGVmaW5lZCI6MzcsIi4vX3RvLWludGVnZXIiOjg5fV0sODc6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbyxuLGkscz1lKCIuL19jdHgiKSxjPWUoIi4vX2ludm9rZSIpLGE9ZSgiLi9faHRtbCIpLHU9ZSgiLi9fZG9tLWNyZWF0ZSIpLGw9ZSgiLi9fZ2xvYmFsIiksZj1sLnByb2Nlc3MsZD1sLnNldEltbWVkaWF0ZSxfPWwuY2xlYXJJbW1lZGlhdGUscD1sLk1lc3NhZ2VDaGFubmVsLGI9MCxoPXt9LHk9Im9ucmVhZHlzdGF0ZWNoYW5nZSIsdj1mdW5jdGlvbigpe3ZhciBlPSt0aGlzO2lmKGguaGFzT3duUHJvcGVydHkoZSkpe3ZhciB0PWhbZV07ZGVsZXRlIGhbZV0sdCgpfX0saj1mdW5jdGlvbihlKXt2LmNhbGwoZS5kYXRhKX07ZCYmX3x8KGQ9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVtdLHI9MTthcmd1bWVudHMubGVuZ3RoPnI7KXQucHVzaChhcmd1bWVudHNbcisrXSk7cmV0dXJuIGhbKytiXT1mdW5jdGlvbigpe2MoImZ1bmN0aW9uIj09dHlwZW9mIGU/ZTpGdW5jdGlvbihlKSx0KX0sbyhiKSxifSxfPWZ1bmN0aW9uKGUpe2RlbGV0ZSBoW2VdfSwicHJvY2VzcyI9PWUoIi4vX2NvZiIpKGYpP289ZnVuY3Rpb24oZSl7Zi5uZXh0VGljayhzKHYsZSwxKSl9OnA/KG49bmV3IHAsaT1uLnBvcnQyLG4ucG9ydDEub25tZXNzYWdlPWosbz1zKGkucG9zdE1lc3NhZ2UsaSwxKSk6bC5hZGRFdmVudExpc3RlbmVyJiYiZnVuY3Rpb24iPT10eXBlb2YgcG9zdE1lc3NhZ2UmJiFsLmltcG9ydFNjcmlwdHM/KG89ZnVuY3Rpb24oZSl7bC5wb3N0TWVzc2FnZShlKyIiLCIqIil9LGwuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsaiwhMSkpOm89eSBpbiB1KCJzY3JpcHQiKT9mdW5jdGlvbihlKXthLmFwcGVuZENoaWxkKHUoInNjcmlwdCIpKVt5XT1mdW5jdGlvbigpe2EucmVtb3ZlQ2hpbGQodGhpcyksdi5jYWxsKGUpfX06ZnVuY3Rpb24oZSl7c2V0VGltZW91dChzKHYsZSwxKSwwKX0pLHQuZXhwb3J0cz17c2V0OmQsY2xlYXI6X319LHsiLi9fY29mIjozNCwiLi9fY3R4IjozNiwiLi9fZG9tLWNyZWF0ZSI6MzksIi4vX2dsb2JhbCI6NDUsIi4vX2h0bWwiOjQ4LCIuL19pbnZva2UiOjUwfV0sODg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL190by1pbnRlZ2VyIiksbj1NYXRoLm1heCxpPU1hdGgubWluO3QuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybiBlPW8oZSksZTwwP24oZSt0LDApOmkoZSx0KX19LHsiLi9fdG8taW50ZWdlciI6ODl9XSw4OTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPU1hdGguY2VpbCxuPU1hdGguZmxvb3I7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBpc05hTihlPStlKT8wOihlPjA/bjpvKShlKX19LHt9XSw5MDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2lvYmplY3QiKSxuPWUoIi4vX2RlZmluZWQiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG8obihlKSl9fSx7Ii4vX2RlZmluZWQiOjM3LCIuL19pb2JqZWN0Ijo1MX1dLDkxOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fdG8taW50ZWdlciIpLG49TWF0aC5taW47dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBlPjA/bihvKGUpLDkwMDcxOTkyNTQ3NDA5OTEpOjB9fSx7Ii4vX3RvLWludGVnZXIiOjg5fV0sOTI6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19kZWZpbmVkIik7dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QobyhlKSl9fSx7Ii4vX2RlZmluZWQiOjM3fV0sOTM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19pcy1vYmplY3QiKTt0LmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtpZighbyhlKSlyZXR1cm4gZTt2YXIgcixuO2lmKHQmJiJmdW5jdGlvbiI9PXR5cGVvZihyPWUudG9TdHJpbmcpJiYhbyhuPXIuY2FsbChlKSkpcmV0dXJuIG47aWYoImZ1bmN0aW9uIj09dHlwZW9mKHI9ZS52YWx1ZU9mKSYmIW8obj1yLmNhbGwoZSkpKXJldHVybiBuO2lmKCF0JiYiZnVuY3Rpb24iPT10eXBlb2Yocj1lLnRvU3RyaW5nKSYmIW8obj1yLmNhbGwoZSkpKXJldHVybiBuO3Rocm93IFR5cGVFcnJvcigiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlIil9fSx7Ii4vX2lzLW9iamVjdCI6NTR9XSw5NDpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPTAsbj1NYXRoLnJhbmRvbSgpO3QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4iU3ltYm9sKCIuY29uY2F0KHZvaWQgMD09PWU/IiI6ZSwiKV8iLCgrK28rbikudG9TdHJpbmcoMzYpKX19LHt9XSw5NTpbZnVuY3Rpb24oZSx0LHIpe3ZhciBvPWUoIi4vX2dsb2JhbCIpLG49ZSgiLi9fY29yZSIpLGk9ZSgiLi9fbGlicmFyeSIpLHM9ZSgiLi9fd2tzLWV4dCIpLGM9ZSgiLi9fb2JqZWN0LWRwIikuZjt0LmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9bi5TeW1ib2x8fChuLlN5bWJvbD1pP3t9Om8uU3ltYm9sfHx7fSk7Il8iPT1lLmNoYXJBdCgwKXx8ZSBpbiB0fHxjKHQsZSx7dmFsdWU6cy5mKGUpfSl9fSx7Ii4vX2NvcmUiOjM1LCIuL19nbG9iYWwiOjQ1LCIuL19saWJyYXJ5Ijo2MiwiLi9fb2JqZWN0LWRwIjo2NiwiLi9fd2tzLWV4dCI6OTZ9XSw5NjpbZnVuY3Rpb24oZSx0LHIpe3IuZj1lKCIuL193a3MiKX0seyIuL193a3MiOjk3fV0sOTc6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19zaGFyZWQiKSgid2tzIiksbj1lKCIuL191aWQiKSxpPWUoIi4vX2dsb2JhbCIpLlN5bWJvbCxzPSJmdW5jdGlvbiI9PXR5cGVvZiBpLGM9dC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBvW2VdfHwob1tlXT1zJiZpW2VdfHwocz9pOm4pKCJTeW1ib2wuIitlKSl9O2Muc3RvcmU9b30seyIuL19nbG9iYWwiOjQ1LCIuL19zaGFyZWQiOjg0LCIuL191aWQiOjk0fV0sOTg6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19jbGFzc29mIiksbj1lKCIuL193a3MiKSgiaXRlcmF0b3IiKSxpPWUoIi4vX2l0ZXJhdG9ycyIpO3QuZXhwb3J0cz1lKCIuL19jb3JlIikuZ2V0SXRlcmF0b3JNZXRob2Q9ZnVuY3Rpb24oZSl7aWYodm9pZCAwIT1lKXJldHVybiBlW25dfHxlWyJAQGl0ZXJhdG9yIl18fGlbbyhlKV19fSx7Ii4vX2NsYXNzb2YiOjMzLCIuL19jb3JlIjozNSwiLi9faXRlcmF0b3JzIjo2MCwiLi9fd2tzIjo5N31dLDk5OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBvPWUoIi4vX2FkZC10by11bnNjb3BhYmxlcyIpLG49ZSgiLi9faXRlci1zdGVwIiksaT1lKCIuL19pdGVyYXRvcnMiKSxzPWUoIi4vX3RvLWlvYmplY3QiKTt0LmV4cG9ydHM9ZSgiLi9faXRlci1kZWZpbmUiKShBcnJheSwiQXJyYXkiLGZ1bmN0aW9uKGUsdCl7dGhpcy5fdD1zKGUpLHRoaXMuX2k9MCx0aGlzLl9rPXR9LGZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fdCx0PXRoaXMuX2sscj10aGlzLl9pKys7cmV0dXJuIWV8fHI+PWUubGVuZ3RoPyh0aGlzLl90PXZvaWQgMCxuKDEpKToia2V5cyI9PXQ/bigwLHIpOiJ2YWx1ZXMiPT10P24oMCxlW3JdKTpuKDAsW3IsZVtyXV0pfSwidmFsdWVzIiksaS5Bcmd1bWVudHM9aS5BcnJheSxvKCJrZXlzIiksbygidmFsdWVzIiksbygiZW50cmllcyIpfSx7Ii4vX2FkZC10by11bnNjb3BhYmxlcyI6MjksIi4vX2l0ZXItZGVmaW5lIjo1NywiLi9faXRlci1zdGVwIjo1OSwiLi9faXRlcmF0b3JzIjo2MCwiLi9fdG8taW9iamVjdCI6OTB9XSwxMDA6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL19leHBvcnQiKTtvKG8uUywiT2JqZWN0Iix7Y3JlYXRlOmUoIi4vX29iamVjdC1jcmVhdGUiKX0pfSx7Ii4vX2V4cG9ydCI6NDIsIi4vX29iamVjdC1jcmVhdGUiOjY1fV0sMTAxOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fZXhwb3J0Iik7byhvLlMrby5GKiFlKCIuL19kZXNjcmlwdG9ycyIpLCJPYmplY3QiLHtkZWZpbmVQcm9wZXJ0eTplKCIuL19vYmplY3QtZHAiKS5mfSl9LHsiLi9fZGVzY3JpcHRvcnMiOjM4LCIuL19leHBvcnQiOjQyLCIuL19vYmplY3QtZHAiOjY2fV0sMTAyOltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fdG8taW9iamVjdCIpLG49ZSgiLi9fb2JqZWN0LWdvcGQiKS5mO2UoIi4vX29iamVjdC1zYXAiKSgiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIixmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlLHQpe3JldHVybiBuKG8oZSksdCl9fSl9LHsiLi9fb2JqZWN0LWdvcGQiOjY4LCIuL19vYmplY3Qtc2FwIjo3NiwiLi9fdG8taW9iamVjdCI6OTB9XSwxMDM6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL190by1vYmplY3QiKSxuPWUoIi4vX29iamVjdC1ncG8iKTtlKCIuL19vYmplY3Qtc2FwIikoImdldFByb3RvdHlwZU9mIixmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gbihvKGUpKX19KX0seyIuL19vYmplY3QtZ3BvIjo3MiwiLi9fb2JqZWN0LXNhcCI6NzYsIi4vX3RvLW9iamVjdCI6OTJ9XSwxMDQ6W2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1lKCIuL190by1vYmplY3QiKSxuPWUoIi4vX29iamVjdC1rZXlzIik7ZSgiLi9fb2JqZWN0LXNhcCIpKCJrZXlzIixmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gbihvKGUpKX19KX0seyIuL19vYmplY3Qta2V5cyI6NzQsIi4vX29iamVjdC1zYXAiOjc2LCIuL190by1vYmplY3QiOjkyfV0sMTA1OltmdW5jdGlvbihlLHQscil7dmFyIG89ZSgiLi9fZXhwb3J0Iik7byhvLlMsIk9iamVjdCIse3NldFByb3RvdHlwZU9mOmUoIi4vX3NldC1wcm90byIpLnNldH0pfSx7Ii4vX2V4cG9ydCI6NDIsIi4vX3NldC1wcm90byI6ODB9XSwxMDY6W2Z1bmN0aW9uKGUsdCxyKXt9LHt9XSwxMDc6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG8sbixpLHM9ZSgiLi9fbGlicmFyeSIpLGM9ZSgiLi9fZ2xvYmFsIiksYT1lKCIuL19jdHgiKSx1PWUoIi4vX2NsYXNzb2YiKSxsPWUoIi4vX2V4cG9ydCIpLGY9ZSgiLi9faXMtb2JqZWN0IiksZD0oZSgiLi9fYW4tb2JqZWN0IiksZSgiLi9fYS1mdW5jdGlvbiIpKSxfPWUoIi4vX2FuLWluc3RhbmNlIikscD1lKCIuL19mb3Itb2YiKSxiPShlKCIuL19zZXQtcHJvdG8iKS5zZXQsZSgiLi9fc3BlY2llcy1jb25zdHJ1Y3RvciIpKSxoPWUoIi4vX3Rhc2siKS5zZXQseT1lKCIuL19taWNyb3Rhc2siKSgpLHY9IlByb21pc2UiLGo9Yy5UeXBlRXJyb3IsbT1jLnByb2Nlc3MsZz1jW3ZdLG09Yy5wcm9jZXNzLHc9InByb2Nlc3MiPT11KG0pLE89ZnVuY3Rpb24oKXt9LGs9ISFmdW5jdGlvbigpe3RyeXt2YXIgdD1nLnJlc29sdmUoMSkscj0odC5jb25zdHJ1Y3Rvcj17fSlbZSgiLi9fd2tzIikoInNwZWNpZXMiKV09ZnVuY3Rpb24oZSl7ZShPLE8pfTtyZXR1cm4od3x8ImZ1bmN0aW9uIj09dHlwZW9mIFByb21pc2VSZWplY3Rpb25FdmVudCkmJnQudGhlbihPKWluc3RhbmNlb2Ygcn1jYXRjaChvKXt9fSgpLHg9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT09PXR8fGU9PT1nJiZ0PT09aX0sQz1mdW5jdGlvbihlKXt2YXIgdDtyZXR1cm4hKCFmKGUpfHwiZnVuY3Rpb24iIT10eXBlb2YodD1lLnRoZW4pKSYmdH0sRT1mdW5jdGlvbihlKXtyZXR1cm4geChnLGUpP25ldyBTKGUpOm5ldyBuKGUpfSxTPW49ZnVuY3Rpb24oZSl7dmFyIHQscjt0aGlzLnByb21pc2U9bmV3IGUoZnVuY3Rpb24oZSxvKXtpZih2b2lkIDAhPT10fHx2b2lkIDAhPT1yKXRocm93IGooIkJhZCBQcm9taXNlIGNvbnN0cnVjdG9yIik7dD1lLHI9b30pLHRoaXMucmVzb2x2ZT1kKHQpLHRoaXMucmVqZWN0PWQocil9LFI9ZnVuY3Rpb24oZSl7dHJ5e2UoKX1jYXRjaCh0KXtyZXR1cm57ZXJyb3I6dH19fSxUPWZ1bmN0aW9uKGUsdCl7aWYoIWUuX24pe2UuX249ITA7dmFyIHI9ZS5fYzt5KGZ1bmN0aW9uKCl7Zm9yKHZhciBvPWUuX3Ysbj0xPT1lLl9zLGk9MCxzPWZ1bmN0aW9uKHQpe3ZhciByLGkscz1uP3Qub2s6dC5mYWlsLGM9dC5yZXNvbHZlLGE9dC5yZWplY3QsdT10LmRvbWFpbjt0cnl7cz8obnx8KDI9PWUuX2gmJkEoZSksZS5faD0xKSxzPT09ITA/cj1vOih1JiZ1LmVudGVyKCkscj1zKG8pLHUmJnUuZXhpdCgpKSxyPT09dC5wcm9taXNlP2EoaigiUHJvbWlzZS1jaGFpbiBjeWNsZSIpKTooaT1DKHIpKT9pLmNhbGwocixjLGEpOmMocikpOmEobyl9Y2F0Y2gobCl7YShsKX19O3IubGVuZ3RoPmk7KXMocltpKytdKTtlLl9jPVtdLGUuX249ITEsdCYmIWUuX2gmJk0oZSl9KX19LE09ZnVuY3Rpb24oZSl7aC5jYWxsKGMsZnVuY3Rpb24oKXt2YXIgdCxyLG8sbj1lLl92O2lmKFAoZSkmJih0PVIoZnVuY3Rpb24oKXt3P20uZW1pdCgidW5oYW5kbGVkUmVqZWN0aW9uIixuLGUpOihyPWMub251bmhhbmRsZWRyZWplY3Rpb24pP3Ioe3Byb21pc2U6ZSxyZWFzb246bn0pOihvPWMuY29uc29sZSkmJm8uZXJyb3ImJm8uZXJyb3IoIlVuaGFuZGxlZCBwcm9taXNlIHJlamVjdGlvbiIsbil9KSxlLl9oPXd8fFAoZSk/MjoxKSxlLl9hPXZvaWQgMCx0KXRocm93IHQuZXJyb3J9KX0sUD1mdW5jdGlvbihlKXtpZigxPT1lLl9oKXJldHVybiExO2Zvcih2YXIgdCxyPWUuX2F8fGUuX2Msbz0wO3IubGVuZ3RoPm87KWlmKHQ9cltvKytdLHQuZmFpbHx8IVAodC5wcm9taXNlKSlyZXR1cm4hMTtyZXR1cm4hMH0sQT1mdW5jdGlvbihlKXtoLmNhbGwoYyxmdW5jdGlvbigpe3ZhciB0O3c/bS5lbWl0KCJyZWplY3Rpb25IYW5kbGVkIixlKToodD1jLm9ucmVqZWN0aW9uaGFuZGxlZCkmJnQoe3Byb21pc2U6ZSxyZWFzb246ZS5fdn0pfSl9LEQ9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0Ll9kfHwodC5fZD0hMCx0PXQuX3d8fHQsdC5fdj1lLHQuX3M9Mix0Ll9hfHwodC5fYT10Ll9jLnNsaWNlKCkpLFQodCwhMCkpfSxOPWZ1bmN0aW9uKGUpe3ZhciB0LHI9dGhpcztpZighci5fZCl7ci5fZD0hMCxyPXIuX3d8fHI7dHJ5e2lmKHI9PT1lKXRocm93IGooIlByb21pc2UgY2FuJ3QgYmUgcmVzb2x2ZWQgaXRzZWxmIik7KHQ9QyhlKSk/eShmdW5jdGlvbigpe3ZhciBvPXtfdzpyLF9kOiExfTt0cnl7dC5jYWxsKGUsYShOLG8sMSksYShELG8sMSkpfWNhdGNoKG4pe0QuY2FsbChvLG4pfX0pOihyLl92PWUsci5fcz0xLFQociwhMSkpfWNhdGNoKG8pe0QuY2FsbCh7X3c6cixfZDohMX0sbyl9fX07a3x8KGc9ZnVuY3Rpb24oZSl7Xyh0aGlzLGcsdiwiX2giKSxkKGUpLG8uY2FsbCh0aGlzKTt0cnl7ZShhKE4sdGhpcywxKSxhKEQsdGhpcywxKSl9Y2F0Y2godCl7RC5jYWxsKHRoaXMsdCl9fSxvPWZ1bmN0aW9uKGUpe3RoaXMuX2M9W10sdGhpcy5fYT12b2lkIDAsdGhpcy5fcz0wLHRoaXMuX2Q9ITEsdGhpcy5fdj12b2lkIDAsdGhpcy5faD0wLHRoaXMuX249ITF9LG8ucHJvdG90eXBlPWUoIi4vX3JlZGVmaW5lLWFsbCIpKGcucHJvdG90eXBlLHt0aGVuOmZ1bmN0aW9uKGUsdCl7dmFyIHI9RShiKHRoaXMsZykpO3JldHVybiByLm9rPSJmdW5jdGlvbiIhPXR5cGVvZiBlfHxlLHIuZmFpbD0iZnVuY3Rpb24iPT10eXBlb2YgdCYmdCxyLmRvbWFpbj13P20uZG9tYWluOnZvaWQgMCx0aGlzLl9jLnB1c2gociksdGhpcy5fYSYmdGhpcy5fYS5wdXNoKHIpLHRoaXMuX3MmJlQodGhpcywhMSksci5wcm9taXNlfSwiY2F0Y2giOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnRoZW4odm9pZCAwLGUpfX0pLFM9ZnVuY3Rpb24oKXt2YXIgZT1uZXcgbzt0aGlzLnByb21pc2U9ZSx0aGlzLnJlc29sdmU9YShOLGUsMSksdGhpcy5yZWplY3Q9YShELGUsMSl9KSxsKGwuRytsLlcrbC5GKiFrLHtQcm9taXNlOmd9KSxlKCIuL19zZXQtdG8tc3RyaW5nLXRhZyIpKGcsdiksZSgiLi9fc2V0LXNwZWNpZXMiKSh2KSxpPWUoIi4vX2NvcmUiKVt2XSxsKGwuUytsLkYqIWssdix7cmVqZWN0OmZ1bmN0aW9uKGUpe3ZhciB0PUUodGhpcykscj10LnJlamVjdDtyZXR1cm4gcihlKSwKdC5wcm9taXNlfX0pLGwobC5TK2wuRiooc3x8IWspLHYse3Jlc29sdmU6ZnVuY3Rpb24oZSl7aWYoZSBpbnN0YW5jZW9mIGcmJngoZS5jb25zdHJ1Y3Rvcix0aGlzKSlyZXR1cm4gZTt2YXIgdD1FKHRoaXMpLHI9dC5yZXNvbHZlO3JldHVybiByKGUpLHQucHJvbWlzZX19KSxsKGwuUytsLkYqIShrJiZlKCIuL19pdGVyLWRldGVjdCIpKGZ1bmN0aW9uKGUpe2cuYWxsKGUpWyJjYXRjaCJdKE8pfSkpLHYse2FsbDpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9RSh0KSxvPXIucmVzb2x2ZSxuPXIucmVqZWN0LGk9UihmdW5jdGlvbigpe3ZhciByPVtdLGk9MCxzPTE7cChlLCExLGZ1bmN0aW9uKGUpe3ZhciBjPWkrKyxhPSExO3IucHVzaCh2b2lkIDApLHMrKyx0LnJlc29sdmUoZSkudGhlbihmdW5jdGlvbihlKXthfHwoYT0hMCxyW2NdPWUsLS1zfHxvKHIpKX0sbil9KSwtLXN8fG8ocil9KTtyZXR1cm4gaSYmbihpLmVycm9yKSxyLnByb21pc2V9LHJhY2U6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPUUodCksbz1yLnJlamVjdCxuPVIoZnVuY3Rpb24oKXtwKGUsITEsZnVuY3Rpb24oZSl7dC5yZXNvbHZlKGUpLnRoZW4oci5yZXNvbHZlLG8pfSl9KTtyZXR1cm4gbiYmbyhuLmVycm9yKSxyLnByb21pc2V9fSl9LHsiLi9fYS1mdW5jdGlvbiI6MjgsIi4vX2FuLWluc3RhbmNlIjozMCwiLi9fYW4tb2JqZWN0IjozMSwiLi9fY2xhc3NvZiI6MzMsIi4vX2NvcmUiOjM1LCIuL19jdHgiOjM2LCIuL19leHBvcnQiOjQyLCIuL19mb3Itb2YiOjQ0LCIuL19nbG9iYWwiOjQ1LCIuL19pcy1vYmplY3QiOjU0LCIuL19pdGVyLWRldGVjdCI6NTgsIi4vX2xpYnJhcnkiOjYyLCIuL19taWNyb3Rhc2siOjY0LCIuL19yZWRlZmluZS1hbGwiOjc4LCIuL19zZXQtcHJvdG8iOjgwLCIuL19zZXQtc3BlY2llcyI6ODEsIi4vX3NldC10by1zdHJpbmctdGFnIjo4MiwiLi9fc3BlY2llcy1jb25zdHJ1Y3RvciI6ODUsIi4vX3Rhc2siOjg3LCIuL193a3MiOjk3fV0sMTA4OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBvPWUoIi4vX3N0cmluZy1hdCIpKCEwKTtlKCIuL19pdGVyLWRlZmluZSIpKFN0cmluZywiU3RyaW5nIixmdW5jdGlvbihlKXt0aGlzLl90PVN0cmluZyhlKSx0aGlzLl9pPTB9LGZ1bmN0aW9uKCl7dmFyIGUsdD10aGlzLl90LHI9dGhpcy5faTtyZXR1cm4gcj49dC5sZW5ndGg/e3ZhbHVlOnZvaWQgMCxkb25lOiEwfTooZT1vKHQsciksdGhpcy5faSs9ZS5sZW5ndGgse3ZhbHVlOmUsZG9uZTohMX0pfSl9LHsiLi9faXRlci1kZWZpbmUiOjU3LCIuL19zdHJpbmctYXQiOjg2fV0sMTA5OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBvPWUoIi4vX2dsb2JhbCIpLG49ZSgiLi9faGFzIiksaT1lKCIuL19kZXNjcmlwdG9ycyIpLHM9ZSgiLi9fZXhwb3J0IiksYz1lKCIuL19yZWRlZmluZSIpLGE9ZSgiLi9fbWV0YSIpLktFWSx1PWUoIi4vX2ZhaWxzIiksbD1lKCIuL19zaGFyZWQiKSxmPWUoIi4vX3NldC10by1zdHJpbmctdGFnIiksZD1lKCIuL191aWQiKSxfPWUoIi4vX3drcyIpLHA9ZSgiLi9fd2tzLWV4dCIpLGI9ZSgiLi9fd2tzLWRlZmluZSIpLGg9ZSgiLi9fa2V5b2YiKSx5PWUoIi4vX2VudW0ta2V5cyIpLHY9ZSgiLi9faXMtYXJyYXkiKSxqPWUoIi4vX2FuLW9iamVjdCIpLG09ZSgiLi9fdG8taW9iamVjdCIpLGc9ZSgiLi9fdG8tcHJpbWl0aXZlIiksdz1lKCIuL19wcm9wZXJ0eS1kZXNjIiksTz1lKCIuL19vYmplY3QtY3JlYXRlIiksaz1lKCIuL19vYmplY3QtZ29wbi1leHQiKSx4PWUoIi4vX29iamVjdC1nb3BkIiksQz1lKCIuL19vYmplY3QtZHAiKSxFPWUoIi4vX29iamVjdC1rZXlzIiksUz14LmYsUj1DLmYsVD1rLmYsTT1vLlN5bWJvbCxQPW8uSlNPTixBPVAmJlAuc3RyaW5naWZ5LEQ9InByb3RvdHlwZSIsTj1fKCJfaGlkZGVuIiksTD1fKCJ0b1ByaW1pdGl2ZSIpLEY9e30ucHJvcGVydHlJc0VudW1lcmFibGUsST1sKCJzeW1ib2wtcmVnaXN0cnkiKSxVPWwoInN5bWJvbHMiKSx6PWwoIm9wLXN5bWJvbHMiKSxIPU9iamVjdFtEXSxWPSJmdW5jdGlvbiI9PXR5cGVvZiBNLEI9by5RT2JqZWN0LEo9IUJ8fCFCW0RdfHwhQltEXS5maW5kQ2hpbGQsVz1pJiZ1KGZ1bmN0aW9uKCl7cmV0dXJuIDchPU8oUih7fSwiYSIse2dldDpmdW5jdGlvbigpe3JldHVybiBSKHRoaXMsImEiLHt2YWx1ZTo3fSkuYX19KSkuYX0pP2Z1bmN0aW9uKGUsdCxyKXt2YXIgbz1TKEgsdCk7byYmZGVsZXRlIEhbdF0sUihlLHQsciksbyYmZSE9PUgmJlIoSCx0LG8pfTpSLFk9ZnVuY3Rpb24oZSl7dmFyIHQ9VVtlXT1PKE1bRF0pO3JldHVybiB0Ll9rPWUsdH0scT1WJiYic3ltYm9sIj09dHlwZW9mIE0uaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuInN5bWJvbCI9PXR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIE19LEs9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlPT09SCYmSyh6LHQsciksaihlKSx0PWcodCwhMCksaihyKSxuKFUsdCk/KHIuZW51bWVyYWJsZT8obihlLE4pJiZlW05dW3RdJiYoZVtOXVt0XT0hMSkscj1PKHIse2VudW1lcmFibGU6dygwLCExKX0pKToobihlLE4pfHxSKGUsTix3KDEse30pKSxlW05dW3RdPSEwKSxXKGUsdCxyKSk6UihlLHQscil9LEc9ZnVuY3Rpb24oZSx0KXtqKGUpO2Zvcih2YXIgcixvPXkodD1tKHQpKSxuPTAsaT1vLmxlbmd0aDtpPm47KUsoZSxyPW9bbisrXSx0W3JdKTtyZXR1cm4gZX0sWj1mdW5jdGlvbihlLHQpe3JldHVybiB2b2lkIDA9PT10P08oZSk6RyhPKGUpLHQpfSxYPWZ1bmN0aW9uKGUpe3ZhciB0PUYuY2FsbCh0aGlzLGU9ZyhlLCEwKSk7cmV0dXJuISh0aGlzPT09SCYmbihVLGUpJiYhbih6LGUpKSYmKCEodHx8IW4odGhpcyxlKXx8IW4oVSxlKXx8bih0aGlzLE4pJiZ0aGlzW05dW2VdKXx8dCl9LCQ9ZnVuY3Rpb24oZSx0KXtpZihlPW0oZSksdD1nKHQsITApLGUhPT1IfHwhbihVLHQpfHxuKHosdCkpe3ZhciByPVMoZSx0KTtyZXR1cm4hcnx8IW4oVSx0KXx8bihlLE4pJiZlW05dW3RdfHwoci5lbnVtZXJhYmxlPSEwKSxyfX0sUT1mdW5jdGlvbihlKXtmb3IodmFyIHQscj1UKG0oZSkpLG89W10saT0wO3IubGVuZ3RoPmk7KW4oVSx0PXJbaSsrXSl8fHQ9PU58fHQ9PWF8fG8ucHVzaCh0KTtyZXR1cm4gb30sZWU9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHI9ZT09PUgsbz1UKHI/ejptKGUpKSxpPVtdLHM9MDtvLmxlbmd0aD5zOykhbihVLHQ9b1tzKytdKXx8ciYmIW4oSCx0KXx8aS5wdXNoKFVbdF0pO3JldHVybiBpfTtWfHwoTT1mdW5jdGlvbigpe2lmKHRoaXMgaW5zdGFuY2VvZiBNKXRocm93IFR5cGVFcnJvcigiU3ltYm9sIGlzIG5vdCBhIGNvbnN0cnVjdG9yISIpO3ZhciBlPWQoYXJndW1lbnRzLmxlbmd0aD4wP2FyZ3VtZW50c1swXTp2b2lkIDApLHQ9ZnVuY3Rpb24ocil7dGhpcz09PUgmJnQuY2FsbCh6LHIpLG4odGhpcyxOKSYmbih0aGlzW05dLGUpJiYodGhpc1tOXVtlXT0hMSksVyh0aGlzLGUsdygxLHIpKX07cmV0dXJuIGkmJkomJlcoSCxlLHtjb25maWd1cmFibGU6ITAsc2V0OnR9KSxZKGUpfSxjKE1bRF0sInRvU3RyaW5nIixmdW5jdGlvbigpe3JldHVybiB0aGlzLl9rfSkseC5mPSQsQy5mPUssZSgiLi9fb2JqZWN0LWdvcG4iKS5mPWsuZj1RLGUoIi4vX29iamVjdC1waWUiKS5mPVgsZSgiLi9fb2JqZWN0LWdvcHMiKS5mPWVlLGkmJiFlKCIuL19saWJyYXJ5IikmJmMoSCwicHJvcGVydHlJc0VudW1lcmFibGUiLFgsITApLHAuZj1mdW5jdGlvbihlKXtyZXR1cm4gWShfKGUpKX0pLHMocy5HK3MuVytzLkYqIVYse1N5bWJvbDpNfSk7Zm9yKHZhciB0ZT0iaGFzSW5zdGFuY2UsaXNDb25jYXRTcHJlYWRhYmxlLGl0ZXJhdG9yLG1hdGNoLHJlcGxhY2Usc2VhcmNoLHNwZWNpZXMsc3BsaXQsdG9QcmltaXRpdmUsdG9TdHJpbmdUYWcsdW5zY29wYWJsZXMiLnNwbGl0KCIsIikscmU9MDt0ZS5sZW5ndGg+cmU7KV8odGVbcmUrK10pO2Zvcih2YXIgdGU9RShfLnN0b3JlKSxyZT0wO3RlLmxlbmd0aD5yZTspYih0ZVtyZSsrXSk7cyhzLlMrcy5GKiFWLCJTeW1ib2wiLHsiZm9yIjpmdW5jdGlvbihlKXtyZXR1cm4gbihJLGUrPSIiKT9JW2VdOklbZV09TShlKX0sa2V5Rm9yOmZ1bmN0aW9uKGUpe2lmKHEoZSkpcmV0dXJuIGgoSSxlKTt0aHJvdyBUeXBlRXJyb3IoZSsiIGlzIG5vdCBhIHN5bWJvbCEiKX0sdXNlU2V0dGVyOmZ1bmN0aW9uKCl7Sj0hMH0sdXNlU2ltcGxlOmZ1bmN0aW9uKCl7Sj0hMX19KSxzKHMuUytzLkYqIVYsIk9iamVjdCIse2NyZWF0ZTpaLGRlZmluZVByb3BlcnR5OkssZGVmaW5lUHJvcGVydGllczpHLGdldE93blByb3BlcnR5RGVzY3JpcHRvcjokLGdldE93blByb3BlcnR5TmFtZXM6USxnZXRPd25Qcm9wZXJ0eVN5bWJvbHM6ZWV9KSxQJiZzKHMuUytzLkYqKCFWfHx1KGZ1bmN0aW9uKCl7dmFyIGU9TSgpO3JldHVybiJbbnVsbF0iIT1BKFtlXSl8fCJ7fSIhPUEoe2E6ZX0pfHwie30iIT1BKE9iamVjdChlKSl9KSksIkpTT04iLHtzdHJpbmdpZnk6ZnVuY3Rpb24oZSl7aWYodm9pZCAwIT09ZSYmIXEoZSkpe2Zvcih2YXIgdCxyLG89W2VdLG49MTthcmd1bWVudHMubGVuZ3RoPm47KW8ucHVzaChhcmd1bWVudHNbbisrXSk7cmV0dXJuIHQ9b1sxXSwiZnVuY3Rpb24iPT10eXBlb2YgdCYmKHI9dCksIXImJnYodCl8fCh0PWZ1bmN0aW9uKGUsdCl7aWYociYmKHQ9ci5jYWxsKHRoaXMsZSx0KSksIXEodCkpcmV0dXJuIHR9KSxvWzFdPXQsQS5hcHBseShQLG8pfX19KSxNW0RdW0xdfHxlKCIuL19oaWRlIikoTVtEXSxMLE1bRF0udmFsdWVPZiksZihNLCJTeW1ib2wiKSxmKE1hdGgsIk1hdGgiLCEwKSxmKG8uSlNPTiwiSlNPTiIsITApfSx7Ii4vX2FuLW9iamVjdCI6MzEsIi4vX2Rlc2NyaXB0b3JzIjozOCwiLi9fZW51bS1rZXlzIjo0MSwiLi9fZXhwb3J0Ijo0MiwiLi9fZmFpbHMiOjQzLCIuL19nbG9iYWwiOjQ1LCIuL19oYXMiOjQ2LCIuL19oaWRlIjo0NywiLi9faXMtYXJyYXkiOjUzLCIuL19rZXlvZiI6NjEsIi4vX2xpYnJhcnkiOjYyLCIuL19tZXRhIjo2MywiLi9fb2JqZWN0LWNyZWF0ZSI6NjUsIi4vX29iamVjdC1kcCI6NjYsIi4vX29iamVjdC1nb3BkIjo2OCwiLi9fb2JqZWN0LWdvcG4iOjcwLCIuL19vYmplY3QtZ29wbi1leHQiOjY5LCIuL19vYmplY3QtZ29wcyI6NzEsIi4vX29iamVjdC1rZXlzIjo3NCwiLi9fb2JqZWN0LXBpZSI6NzUsIi4vX3Byb3BlcnR5LWRlc2MiOjc3LCIuL19yZWRlZmluZSI6NzksIi4vX3NldC10by1zdHJpbmctdGFnIjo4MiwiLi9fc2hhcmVkIjo4NCwiLi9fdG8taW9iamVjdCI6OTAsIi4vX3RvLXByaW1pdGl2ZSI6OTMsIi4vX3VpZCI6OTQsIi4vX3drcyI6OTcsIi4vX3drcy1kZWZpbmUiOjk1LCIuL193a3MtZXh0Ijo5Nn1dLDExMDpbZnVuY3Rpb24oZSx0LHIpe2UoIi4vX3drcy1kZWZpbmUiKSgiYXN5bmNJdGVyYXRvciIpfSx7Ii4vX3drcy1kZWZpbmUiOjk1fV0sMTExOltmdW5jdGlvbihlLHQscil7ZSgiLi9fd2tzLWRlZmluZSIpKCJvYnNlcnZhYmxlIil9LHsiLi9fd2tzLWRlZmluZSI6OTV9XSwxMTI6W2Z1bmN0aW9uKGUsdCxyKXtlKCIuL2VzNi5hcnJheS5pdGVyYXRvciIpO2Zvcih2YXIgbz1lKCIuL19nbG9iYWwiKSxuPWUoIi4vX2hpZGUiKSxpPWUoIi4vX2l0ZXJhdG9ycyIpLHM9ZSgiLi9fd2tzIikoInRvU3RyaW5nVGFnIiksYz1bIk5vZGVMaXN0IiwiRE9NVG9rZW5MaXN0IiwiTWVkaWFMaXN0IiwiU3R5bGVTaGVldExpc3QiLCJDU1NSdWxlTGlzdCJdLGE9MDthPDU7YSsrKXt2YXIgdT1jW2FdLGw9b1t1XSxmPWwmJmwucHJvdG90eXBlO2YmJiFmW3NdJiZuKGYscyx1KSxpW3VdPWkuQXJyYXl9fSx7Ii4vX2dsb2JhbCI6NDUsIi4vX2hpZGUiOjQ3LCIuL19pdGVyYXRvcnMiOjYwLCIuL193a3MiOjk3LCIuL2VzNi5hcnJheS5pdGVyYXRvciI6OTl9XSwxMTM6W2Z1bmN0aW9uKGUsdCxyKXtPYmplY3Qub2JzZXJ2ZXx8ZnVuY3Rpb24oZSx0LHIsbyl7InVzZSBzdHJpY3QiO3ZhciBuLGkscz1bImFkZCIsInVwZGF0ZSIsImRlbGV0ZSIsInJlY29uZmlndXJlIiwic2V0UHJvdG90eXBlIiwicHJldmVudEV4dGVuc2lvbnMiXSxjPXQuaXNBcnJheXx8ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiJbb2JqZWN0IEFycmF5XSI9PT1lLmNhbGwodCl9fShlLnByb3RvdHlwZS50b1N0cmluZyksYT10LnByb3RvdHlwZS5pbmRleE9mP3QuaW5kZXhPZnx8ZnVuY3Rpb24oZSxyLG8pe3JldHVybiB0LnByb3RvdHlwZS5pbmRleE9mLmNhbGwoZSxyLG8pfTpmdW5jdGlvbihlLHQscil7Zm9yKHZhciBvPXJ8fDA7bzxlLmxlbmd0aDtvKyspaWYoZVtvXT09PXQpcmV0dXJuIG87cmV0dXJuLTF9LHU9ci5NYXAhPT1vJiZNYXAucHJvdG90eXBlLmZvckVhY2g/ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IE1hcH06ZnVuY3Rpb24oKXt2YXIgZT1bXSx0PVtdO3JldHVybntzaXplOjAsaGFzOmZ1bmN0aW9uKHQpe3JldHVybiBhKGUsdCk+LTF9LGdldDpmdW5jdGlvbihyKXtyZXR1cm4gdFthKGUscildfSxzZXQ6ZnVuY3Rpb24ocixvKXt2YXIgbj1hKGUscik7bj09PS0xPyhlLnB1c2gociksdC5wdXNoKG8pLHRoaXMuc2l6ZSsrKTp0W25dPW99LCJkZWxldGUiOmZ1bmN0aW9uKHIpe3ZhciBvPWEoZSxyKTtvPi0xJiYoZS5zcGxpY2UobywxKSx0LnNwbGljZShvLDEpLHRoaXMuc2l6ZS0tKX0sZm9yRWFjaDpmdW5jdGlvbihyKXtmb3IodmFyIG89MDtvPGUubGVuZ3RoO28rKylyLmNhbGwoYXJndW1lbnRzWzFdLHRbb10sZVtvXSx0aGlzKX19fSxsPWUuZ2V0T3duUHJvcGVydHlOYW1lcz9mdW5jdGlvbigpe3ZhciB0PWUuZ2V0T3duUHJvcGVydHlOYW1lczt0cnl7YXJndW1lbnRzLmNhbGxlZX1jYXRjaChyKXt2YXIgbz0odChhKS5qb2luKCIgIikrIiAiKS5yZXBsYWNlKC9wcm90b3R5cGUgfGxlbmd0aCB8bmFtZSAvZywiIikuc2xpY2UoMCwtMSkuc3BsaXQoIiAiKTtvLmxlbmd0aCYmKHQ9ZnVuY3Rpb24odCl7dmFyIHI9ZS5nZXRPd25Qcm9wZXJ0eU5hbWVzKHQpO2lmKCJmdW5jdGlvbiI9PXR5cGVvZiB0KWZvcih2YXIgbixpPTA7aTxvLmxlbmd0aDspKG49YShyLG9baSsrXSkpPi0xJiZyLnNwbGljZShuLDEpO3JldHVybiByfSl9cmV0dXJuIHR9KCk6ZnVuY3Rpb24odCl7dmFyIHIsbyxuPVtdO2lmKCJoYXNPd25Qcm9wZXJ0eSJpbiB0KWZvcihyIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShyKSYmbi5wdXNoKHIpO2Vsc2V7bz1lLmhhc093blByb3BlcnR5O2ZvcihyIGluIHQpby5jYWxsKHQscikmJm4ucHVzaChyKX1yZXR1cm4gYyh0KSYmbi5wdXNoKCJsZW5ndGgiKSxufSxmPWUuZ2V0UHJvdG90eXBlT2YsZD1lLmRlZmluZVByb3BlcnRpZXMmJmUuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yLF89ci5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHIud2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lfHxmdW5jdGlvbigpe3ZhciBlPStuZXcgRGF0ZSx0PWU7cmV0dXJuIGZ1bmN0aW9uKHIpe3JldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cigodD0rbmV3IERhdGUpLWUpfSwxNyl9fSgpLHA9ZnVuY3Rpb24oZSx0LHIpe3ZhciBvPW4uZ2V0KGUpO28/KGgobyxlKSxtKGUsbyx0LHIpKToobz1iKGUpLG0oZSxvLHQsciksMT09PW4uc2l6ZSYmXyh5KSl9LGI9ZnVuY3Rpb24odCxyKXt2YXIgbyxpPWwodCkscz1bXSxjPTAscj17aGFuZGxlcnM6dSgpLGZyb3plbjohIWUuaXNGcm96ZW4mJmUuaXNGcm96ZW4odCksZXh0ZW5zaWJsZTohZS5pc0V4dGVuc2libGV8fGUuaXNFeHRlbnNpYmxlKHQpLHByb3RvOmYmJmYodCkscHJvcGVydGllczppLHZhbHVlczpzLG5vdGlmaWVyOmoodCxyKX07aWYoZClmb3Iobz1yLmRlc2NyaXB0b3JzPVtdO2M8aS5sZW5ndGg7KW9bY109ZCh0LGlbY10pLHNbY109dFtpW2MrK11dO2Vsc2UgZm9yKDtjPGkubGVuZ3RoOylzW2NdPXRbaVtjKytdXTtyZXR1cm4gbi5zZXQodCxyKSxyfSxoPWZ1bmN0aW9uKCl7dmFyIHQ9ZD9mdW5jdGlvbihlLHQscixvLG4pe3ZhciBpPXQucHJvcGVydGllc1tyXSxzPWVbaV0sYz10LnZhbHVlc1tyXSxhPXQuZGVzY3JpcHRvcnNbcl07InZhbHVlImluIG4mJihjPT09cz8wPT09YyYmMS9jIT09MS9zOmM9PT1jfHxzPT09cykmJihnKGUsdCx7bmFtZTppLHR5cGU6InVwZGF0ZSIsb2JqZWN0OmUsb2xkVmFsdWU6Y30sbyksdC52YWx1ZXNbcl09cyksIWEuY29uZmlndXJhYmxlfHxuLmNvbmZpZ3VyYWJsZSYmbi53cml0YWJsZT09PWEud3JpdGFibGUmJm4uZW51bWVyYWJsZT09PWEuZW51bWVyYWJsZSYmbi5nZXQ9PT1hLmdldCYmbi5zZXQ9PT1hLnNldHx8KGcoZSx0LHtuYW1lOmksdHlwZToicmVjb25maWd1cmUiLG9iamVjdDplLG9sZFZhbHVlOmN9LG8pLHQuZGVzY3JpcHRvcnNbcl09bil9OmZ1bmN0aW9uKGUsdCxyLG8pe3ZhciBuPXQucHJvcGVydGllc1tyXSxpPWVbbl0scz10LnZhbHVlc1tyXTsocz09PWk/MD09PXMmJjEvcyE9PTEvaTpzPT09c3x8aT09PWkpJiYoZyhlLHQse25hbWU6bix0eXBlOiJ1cGRhdGUiLG9iamVjdDplLG9sZFZhbHVlOnN9LG8pLHQudmFsdWVzW3JdPWkpfSxyPWQ/ZnVuY3Rpb24oZSxyLG8sbixpKXtmb3IodmFyIHMsYz1yLmxlbmd0aDtvJiZjLS07KW51bGwhPT1yW2NdJiYocz1kKGUscltjXSksby0tLHM/dChlLG4sYyxpLHMpOihnKGUsbix7bmFtZTpyW2NdLHR5cGU6ImRlbGV0ZSIsb2JqZWN0OmUsb2xkVmFsdWU6bi52YWx1ZXNbY119LGkpLG4ucHJvcGVydGllcy5zcGxpY2UoYywxKSxuLnZhbHVlcy5zcGxpY2UoYywxKSxuLmRlc2NyaXB0b3JzLnNwbGljZShjLDEpKSl9OmZ1bmN0aW9uKGUsdCxyLG8sbil7Zm9yKHZhciBpPXQubGVuZ3RoO3ImJmktLTspbnVsbCE9PXRbaV0mJihnKGUsbyx7bmFtZTp0W2ldLHR5cGU6ImRlbGV0ZSIsb2JqZWN0OmUsb2xkVmFsdWU6by52YWx1ZXNbaV19LG4pLG8ucHJvcGVydGllcy5zcGxpY2UoaSwxKSxvLnZhbHVlcy5zcGxpY2UoaSwxKSxyLS0pfTtyZXR1cm4gZnVuY3Rpb24obyxuLGkpe2lmKG8uaGFuZGxlcnMuc2l6ZSYmIW8uZnJvemVuKXt2YXIgcyxjLHUsXyxwLGIsaCx5LHY9by52YWx1ZXMsaj1vLmRlc2NyaXB0b3JzLG09MDtpZihvLmV4dGVuc2libGUpaWYocz1vLnByb3BlcnRpZXMuc2xpY2UoKSxjPXMubGVuZ3RoLHU9bChuKSxqKXtmb3IoO208dS5sZW5ndGg7KXA9dVttKytdLF89YShzLHApLHk9ZChuLHApLF89PT0tMT8oZyhuLG8se25hbWU6cCx0eXBlOiJhZGQiLG9iamVjdDpufSxpKSxvLnByb3BlcnRpZXMucHVzaChwKSx2LnB1c2gobltwXSksai5wdXNoKHkpKTooc1tfXT1udWxsLGMtLSx0KG4sbyxfLGkseSkpO3IobixzLGMsbyxpKSxlLmlzRXh0ZW5zaWJsZShuKXx8KG8uZXh0ZW5zaWJsZT0hMSxnKG4sbyx7dHlwZToicHJldmVudEV4dGVuc2lvbnMiLG9iamVjdDpufSxpKSxvLmZyb3plbj1lLmlzRnJvemVuKG4pKX1lbHNle2Zvcig7bTx1Lmxlbmd0aDspcD11W20rK10sXz1hKHMscCksYj1uW3BdLF89PT0tMT8oZyhuLG8se25hbWU6cCx0eXBlOiJhZGQiLG9iamVjdDpufSxpKSxvLnByb3BlcnRpZXMucHVzaChwKSx2LnB1c2goYikpOihzW19dPW51bGwsYy0tLHQobixvLF8saSkpO3IobixzLGMsbyxpKX1lbHNlIGlmKCFvLmZyb3plbil7Zm9yKDttPHMubGVuZ3RoO20rKylwPXNbbV0sdChuLG8sbSxpLGQobixwKSk7ZS5pc0Zyb3plbihuKSYmKG8uZnJvemVuPSEwKX1mJiYoaD1mKG4pLGghPT1vLnByb3RvJiYoZyhuLG8se3R5cGU6InNldFByb3RvdHlwZSIsbmFtZToiX19wcm90b19fIixvYmplY3Q6bixvbGRWYWx1ZTpvLnByb3RvfSksby5wcm90bz1oKSl9fX0oKSx5PWZ1bmN0aW9uKCl7bi5zaXplJiYobi5mb3JFYWNoKGgpLGkuZm9yRWFjaCh2KSxfKHkpKX0sdj1mdW5jdGlvbihlLHQpe3ZhciByPWUuY2hhbmdlUmVjb3JkcztyLmxlbmd0aCYmKGUuY2hhbmdlUmVjb3Jkcz1bXSx0KHIpKX0saj1mdW5jdGlvbihlLHQpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPDImJih0PW4uZ2V0KGUpKSx0JiZ0Lm5vdGlmaWVyfHx7bm90aWZ5OmZ1bmN0aW9uKHQpe3QudHlwZTt2YXIgcj1uLmdldChlKTtpZihyKXt2YXIgbyxpPXtvYmplY3Q6ZX07Zm9yKG8gaW4gdCkib2JqZWN0IiE9PW8mJihpW29dPXRbb10pO2coZSxyLGkpfX0scGVyZm9ybUNoYW5nZTpmdW5jdGlvbih0LHIpe2lmKCJzdHJpbmciIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIG5vbi1zdHJpbmcgY2hhbmdlVHlwZSIpO2lmKCJmdW5jdGlvbiIhPXR5cGVvZiByKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBwZXJmb3JtIG5vbi1mdW5jdGlvbiIpO3ZhciBpLHMsYz1uLmdldChlKSxhPWFyZ3VtZW50c1syXSx1PWE9PT1vP3IoKTpyLmNhbGwoYSk7aWYoYyYmaChjLGUsdCksYyYmdSYmIm9iamVjdCI9PXR5cGVvZiB1KXtzPXtvYmplY3Q6ZSx0eXBlOnR9O2ZvcihpIGluIHUpIm9iamVjdCIhPT1pJiYidHlwZSIhPT1pJiYoc1tpXT11W2ldKTtnKGUsYyxzKX19fX0sbT1mdW5jdGlvbihlLHQscixvKXt2YXIgbj1pLmdldChyKTtufHxpLnNldChyLG49e29ic2VydmVkOnUoKSxjaGFuZ2VSZWNvcmRzOltdfSksbi5vYnNlcnZlZC5zZXQoZSx7YWNjZXB0TGlzdDpvLnNsaWNlKCksZGF0YTp0fSksdC5oYW5kbGVycy5zZXQocixuKX0sZz1mdW5jdGlvbihlLHQscixvKXt0LmhhbmRsZXJzLmZvckVhY2goZnVuY3Rpb24odCl7dmFyIG49dC5vYnNlcnZlZC5nZXQoZSkuYWNjZXB0TGlzdDsoInN0cmluZyIhPXR5cGVvZiBvfHxhKG4sbyk9PT0tMSkmJmEobixyLnR5cGUpPi0xJiZ0LmNoYW5nZVJlY29yZHMucHVzaChyKX0pfTtuPXUoKSxpPXUoKSxlLm9ic2VydmU9ZnVuY3Rpb24odCxyLG4pe2lmKCF0fHwib2JqZWN0IiE9dHlwZW9mIHQmJiJmdW5jdGlvbiIhPXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoIk9iamVjdC5vYnNlcnZlIGNhbm5vdCBvYnNlcnZlIG5vbi1vYmplY3QiKTtpZigiZnVuY3Rpb24iIT10eXBlb2Ygcil0aHJvdyBuZXcgVHlwZUVycm9yKCJPYmplY3Qub2JzZXJ2ZSBjYW5ub3QgZGVsaXZlciB0byBub24tZnVuY3Rpb24iKTtpZihlLmlzRnJvemVuJiZlLmlzRnJvemVuKHIpKXRocm93IG5ldyBUeXBlRXJyb3IoIk9iamVjdC5vYnNlcnZlIGNhbm5vdCBkZWxpdmVyIHRvIGEgZnJvemVuIGZ1bmN0aW9uIG9iamVjdCIpO2lmKG49PT1vKW49cztlbHNlIGlmKCFufHwib2JqZWN0IiE9dHlwZW9mIG4pdGhyb3cgbmV3IFR5cGVFcnJvcigiVGhpcmQgYXJndW1lbnQgdG8gT2JqZWN0Lm9ic2VydmUgbXVzdCBiZSBhbiBhcnJheSBvZiBzdHJpbmdzLiIpO3JldHVybiBwKHQscixuKSx0fSxlLnVub2JzZXJ2ZT1mdW5jdGlvbihlLHQpe2lmKG51bGw9PT1lfHwib2JqZWN0IiE9dHlwZW9mIGUmJiJmdW5jdGlvbiIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoIk9iamVjdC51bm9ic2VydmUgY2Fubm90IHVub2JzZXJ2ZSBub24tb2JqZWN0Iik7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcigiT2JqZWN0LnVub2JzZXJ2ZSBjYW5ub3QgZGVsaXZlciB0byBub24tZnVuY3Rpb24iKTt2YXIgcixvPWkuZ2V0KHQpO3JldHVybiBvJiYocj1vLm9ic2VydmVkLmdldChlKSkmJihvLm9ic2VydmVkLmZvckVhY2goZnVuY3Rpb24oZSx0KXtoKGUuZGF0YSx0KX0pLF8oZnVuY3Rpb24oKXt2KG8sdCl9KSwxPT09by5vYnNlcnZlZC5zaXplJiZvLm9ic2VydmVkLmhhcyhlKT9pWyJkZWxldGUiXSh0KTpvLm9ic2VydmVkWyJkZWxldGUiXShlKSwxPT09ci5kYXRhLmhhbmRsZXJzLnNpemU/blsiZGVsZXRlIl0oZSk6ci5kYXRhLmhhbmRsZXJzWyJkZWxldGUiXSh0KSksZX0sZS5nZXROb3RpZmllcj1mdW5jdGlvbih0KXtpZihudWxsPT09dHx8Im9iamVjdCIhPXR5cGVvZiB0JiYiZnVuY3Rpb24iIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCJPYmplY3QuZ2V0Tm90aWZpZXIgY2Fubm90IGdldE5vdGlmaWVyIG5vbi1vYmplY3QiKTtyZXR1cm4gZS5pc0Zyb3plbiYmZS5pc0Zyb3plbih0KT9udWxsOmoodCl9LGUuZGVsaXZlckNoYW5nZVJlY29yZHM9ZnVuY3Rpb24oZSl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcigiT2JqZWN0LmRlbGl2ZXJDaGFuZ2VSZWNvcmRzIGNhbm5vdCBkZWxpdmVyIHRvIG5vbi1mdW5jdGlvbiIpO3ZhciB0PWkuZ2V0KGUpO3QmJih0Lm9ic2VydmVkLmZvckVhY2goZnVuY3Rpb24oZSx0KXtoKGUuZGF0YSx0KX0pLHYodCxlKSl9fShPYmplY3QsQXJyYXksdGhpcyl9LHt9XSwxMTQ6W2Z1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6eyJkZWZhdWx0IjplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksci5EYXRhT2JqZWN0T2JzZXJ2ZXI9ci5EYXRhT2JqZWN0UmVwb3J0ZXI9ci5TeW5jaGVyPXZvaWQgMCxlKCJvYmplY3Qub2JzZXJ2ZSIpLGUoImFycmF5Lm9ic2VydmUiKTt2YXIgbj1lKCIuL3N5bmNoZXIvU3luY2hlciIpLGk9byhuKSxzPWUoIi4vc3luY2hlci9EYXRhT2JqZWN0UmVwb3J0ZXIiKSxjPW8ocyksYT1lKCIuL3N5bmNoZXIvRGF0YU9iamVjdE9ic2VydmVyIiksdT1vKGEpO3IuU3luY2hlcj1pWyJkZWZhdWx0Il0sci5EYXRhT2JqZWN0UmVwb3J0ZXI9Y1siZGVmYXVsdCJdLHIuRGF0YU9iamVjdE9ic2VydmVyPXVbImRlZmF1bHQiXX0seyIuL3N5bmNoZXIvRGF0YU9iamVjdE9ic2VydmVyIjoxMTcsIi4vc3luY2hlci9EYXRhT2JqZWN0UmVwb3J0ZXIiOjExOCwiLi9zeW5jaGVyL1N5bmNoZXIiOjEyMSwiYXJyYXkub2JzZXJ2ZSI6MSwib2JqZWN0Lm9ic2VydmUiOjExM31dLDExNTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbj1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvcHJvbWlzZSIpLGk9byhuKSxzPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyIpLGM9byhzKSxhPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpLHU9byhhKSxsPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpLGY9byhsKSxkPWUoIi4vU3luY09iamVjdCIpLF89byhkKSxwPWUoIi4vRGF0YU9iamVjdENoaWxkIiksYj1vKHApLGg9ZSgiLi4vdXRpbHMvdXRpbHMuanMiKSx5PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIsbyxuLGkscyl7KDAsdVsiZGVmYXVsdCJdKSh0aGlzLGUpO3ZhciBjPXRoaXM7Yy5fc3luY2hlcj10LGMuX3VybD1yLGMuX3NjaGVtYT1vLGMuX3N0YXR1cz1uLGMuX3N5bmNPYmo9bmV3IF9bImRlZmF1bHQiXShpKSxjLl9jaGlsZHJlbnM9cyxjLl92ZXJzaW9uPTAsYy5fY2hpbGRJZD0wLGMuX2NoaWxkcmVuT2JqZWN0cz17fSxjLl9jaGlsZHJlbkxpc3RlbmVycz1bXSxjLl9vd25lcj10Ll9vd25lcixjLl9idXM9dC5fYnVzfXJldHVybigwLGZbImRlZmF1bHQiXSkoZSxbe2tleToiX2FsbG9jYXRlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD10aGlzLHI9dC5fdXJsKyIvY2hpbGRyZW4vIjt0Ll9jaGlsZHJlbnMmJnQuX2NoaWxkcmVucy5mb3JFYWNoKGZ1bmN0aW9uKG8pe3ZhciBuPXIrbyxpPXQuX2J1cy5hZGRMaXN0ZW5lcihuLGZ1bmN0aW9uKHIpe2lmKHIuZnJvbSE9PWUuX293bmVyKXN3aXRjaChjb25zb2xlLmxvZygiRGF0YU9iamVjdC1DaGlsZHJlbi1SQ1Y6ICIsciksci50eXBlKXtjYXNlImNyZWF0ZSI6dC5fb25DaGlsZENyZWF0ZShyKTticmVhaztjYXNlImRlbGV0ZSI6Y29uc29sZS5sb2cocik7YnJlYWs7ZGVmYXVsdDp0Ll9jaGFuZ2VDaGlsZHJlbihyKX19KTt0Ll9jaGlsZHJlbkxpc3RlbmVycy5wdXNoKGkpfSl9fSx7a2V5OiJfcmVsZWFzZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX2NoaWxkcmVuTGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24oZSl7ZS5yZW1vdmUoKX0pLCgwLGNbImRlZmF1bHQiXSkoZS5fY2hpbGRyZW5PYmplY3RzKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe2UuX2NoaWxkcmVuT2JqZWN0c1t0XS5fcmVsZWFzZUxpc3RlbmVycygpfSl9fSx7a2V5OiJwYXVzZSIsdmFsdWU6ZnVuY3Rpb24oKXt0aHJvdyJOb3QgaW1wbGVtZW50ZWQifX0se2tleToicmVzdW1lIix2YWx1ZTpmdW5jdGlvbigpe3Rocm93Ik5vdCBpbXBsZW1lbnRlZCJ9fSx7a2V5OiJzdG9wIix2YWx1ZTpmdW5jdGlvbigpe3Rocm93Ik5vdCBpbXBsZW1lbnRlZCJ9fSx7a2V5OiJhZGRDaGlsZCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzO3IuX2NoaWxkSWQrKzt2YXIgbz1yLl9vd25lcisiIyIrci5fY2hpbGRJZCxuPXIuX3VybCsiL2NoaWxkcmVuLyIrZSxzPXt0eXBlOiJjcmVhdGUiLGZyb206ci5fb3duZXIsdG86bixib2R5OntyZXNvdXJjZTpvLHZhbHVlOnR9fTtyZXR1cm4gbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbihlKXt2YXIgaT1yLl9idXMucG9zdE1lc3NhZ2Uocyk7Y29uc29sZS5sb2coImNyZWF0ZS1yZXBvcnRlci1jaGlsZCggIityLl9vd25lcisiICk6ICIscyk7dmFyIGM9bmV3IGJbImRlZmF1bHQiXShyLG8sdCxyLl9vd25lcixpKTtjLm9uQ2hhbmdlKGZ1bmN0aW9uKGUpe3IuX29uQ2hhbmdlKGUse3BhdGg6bixjaGlsZElkOm99KX0pLHIuX2NoaWxkcmVuT2JqZWN0c1tvXT1jLGUoYyl9KX19LHtrZXk6Im9uQWRkQ2hpbGQiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uQWRkQ2hpbGRyZW5IYW5kbGVyPWV9fSx7a2V5OiJfb25DaGlsZENyZWF0ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUuYm9keS5yZXNvdXJjZTtjb25zb2xlLmxvZygiY3JlYXRlLW9ic2VydmVyLWNoaWxkKCAiK3QuX293bmVyKyIgKTogIixlKTt2YXIgbz1uZXcgYlsiZGVmYXVsdCJdKHQscixlLmJvZHkudmFsdWUpO3QuX2NoaWxkcmVuT2JqZWN0c1tyXT1vLHNldFRpbWVvdXQoZnVuY3Rpb24oKXt0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZToyMDAsc291cmNlOnQuX293bmVyfX0pfSk7dmFyIG49e3R5cGU6ZS50eXBlLGZyb206ZS5mcm9tLHVybDplLnRvLHZhbHVlOmUuYm9keS52YWx1ZSxjaGlsZElkOnIsaWRlbnRpdHk6ZS5ib2R5LmlkZW50aXR5fTt0Ll9vbkFkZENoaWxkcmVuSGFuZGxlciYmKGNvbnNvbGUubG9nKCJBREQtQ0hJTERSRU4tRVZFTlQ6ICIsbiksdC5fb25BZGRDaGlsZHJlbkhhbmRsZXIobikpfX0se2tleToiX29uQ2hhbmdlIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7aWYoci5fdmVyc2lvbisrLCJvbiI9PT1yLl9zdGF0dXMpe3ZhciBvPXt0eXBlOiJ1cGRhdGUiLGZyb206ci5fdXJsLHRvOnIuX3VybCsiL2NoYW5nZXMiLGJvZHk6e3ZlcnNpb246ci5fdmVyc2lvbixzb3VyY2U6ci5fb3duZXIsYXR0cmlidXRlOmUuZmllbGR9fTtlLm9UeXBlPT09ZC5PYmplY3RUeXBlLk9CSkVDVD9lLmNUeXBlIT09ZC5DaGFuZ2VUeXBlLlJFTU9WRSYmKG8uYm9keS52YWx1ZT1lLmRhdGEpOihvLmJvZHkuYXR0cmlidXRlVHlwZT1lLm9UeXBlLG8uYm9keS52YWx1ZT1lLmRhdGEsZS5jVHlwZSE9PWQuQ2hhbmdlVHlwZS5VUERBVEUmJihvLmJvZHkub3BlcmF0aW9uPWUuY1R5cGUpKSx0JiYoby50bz10LnBhdGgsby5ib2R5LnJlc291cmNlPXQuY2hpbGRJZCksci5fYnVzLnBvc3RNZXNzYWdlKG8pfX19LHtrZXk6Il9jaGFuZ2VPYmplY3QiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztpZihyLl92ZXJzaW9uKzE9PT10LmJvZHkudmVyc2lvbil7ci5fdmVyc2lvbisrO3ZhciBvPXQuYm9keS5hdHRyaWJ1dGUsbj0oMCxoLmRlZXBDbG9uZSkodC5ib2R5LnZhbHVlKSxpPWUuZmluZEJlZm9yZShvKTtpZih0LmJvZHkuYXR0cmlidXRlVHlwZT09PWQuT2JqZWN0VHlwZS5BUlJBWSlpZih0LmJvZHkub3BlcmF0aW9uPT09ZC5DaGFuZ2VUeXBlLkFERCl7dmFyIHM9aS5vYmosYz1pLmxhc3Q7QXJyYXkucHJvdG90eXBlLnNwbGljZS5hcHBseShzLFtjLDBdLmNvbmNhdChuKSl9ZWxzZSBpZih0LmJvZHkub3BlcmF0aW9uPT09ZC5DaGFuZ2VUeXBlLlJFTU9WRSl7dmFyIGE9aS5vYmosdT1pLmxhc3Q7YS5zcGxpY2UodSxuKX1lbHNlIGkub2JqW2kubGFzdF09bjtlbHNlIHQuYm9keS52YWx1ZT9pLm9ialtpLmxhc3RdPW46ZGVsZXRlIGkub2JqW2kubGFzdF19ZWxzZSBjb25zb2xlLmxvZygiVU5TWU5DSFJPTklaRUQgVkVSU0lPTjogKGRhdGEgPT4gIityLl92ZXJzaW9uKyIsIG1zZyA9PiAiK3QuYm9keS52ZXJzaW9uKyIpIil9fSx7a2V5OiJfY2hhbmdlQ2hpbGRyZW4iLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7Y29uc29sZS5sb2coIkNoYW5nZSBjaGlsZHJlbjogIix0Ll9vd25lcixlKTt2YXIgcj1lLmJvZHkucmVzb3VyY2Usbz10Ll9jaGlsZHJlbk9iamVjdHNbcl07bz90Ll9jaGFuZ2VPYmplY3Qoby5fc3luY09iaixlKTpjb25zb2xlLmxvZygiTm8gY2hpbGRyZW4gZm91bmQgZm9yOiAiLHIpfX0se2tleToidXJsIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdXJsfX0se2tleToic2NoZW1hIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2NoZW1hfX0se2tleToic3RhdHVzIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3RhdHVzfX0se2tleToiZGF0YSIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N5bmNPYmouZGF0YX19LHtrZXk6ImNoaWxkcmVucyIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NoaWxkcmVuT2JqZWN0c319XSksZX0oKTtyWyJkZWZhdWx0Il09eSx0LmV4cG9ydHM9clsiZGVmYXVsdCJdfSx7Ii4uL3V0aWxzL3V0aWxzLmpzIjoxMjIsIi4vRGF0YU9iamVjdENoaWxkIjoxMTYsIi4vU3luY09iamVjdCI6MTIwLCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiOjcsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlIjo5LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjEyLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjEzfV0sMTE2OltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBuPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpLGk9byhuKSxzPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpLGM9byhzKSxhPWUoIi4vU3luY09iamVjdCIpLHU9byhhKSxsPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIsbyxuLHMpeygwLGlbImRlZmF1bHQiXSkodGhpcyxlKTt2YXIgYz10aGlzO2MuX3BhcmVudD10LGMuX2NoaWxkSWQ9cixjLl9vd25lcj1uLGMuX21zZ0lkPXMsYy5fc3luY09iaj1uZXcgdVsiZGVmYXVsdCJdKG8pLGMuX2J1cz10Ll9idXMsYy5fYWxsb2NhdGVMaXN0ZW5lcnMoKX1yZXR1cm4oMCxjWyJkZWZhdWx0Il0pKGUsW3trZXk6Il9hbGxvY2F0ZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX293bmVyJiYoZS5fbGlzdGVuZXI9ZS5fYnVzLmFkZExpc3RlbmVyKGUuX293bmVyLGZ1bmN0aW9uKHQpeyJyZXNwb25zZSI9PT10LnR5cGUmJnQuaWQ9PT1lLl9tc2dJZCYmKGNvbnNvbGUubG9nKCJEYXRhT2JqZWN0Q2hpbGQub25SZXNwb25zZToiLHQpLGUuX29uUmVzcG9uc2UodCkpfSkpfX0se2tleToiX3JlbGVhc2VMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9saXN0ZW5lciYmZS5fbGlzdGVuZXIucmVtb3ZlKCl9fSx7a2V5OiJkZWxldGUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztkZWxldGUgZS5fcGFyZW50Ll9jaGlsZHJlbltlLl9jaGlsZElkXSxlLl9yZWxlYXNlTGlzdGVuZXJzKCl9fSx7a2V5OiJvbkNoYW5nZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fc3luY09iai5vYnNlcnZlKGZ1bmN0aW9uKHQpe2UodCl9KX19LHtrZXk6Im9uUmVzcG9uc2UiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uUmVzcG9uc2VIYW5kbGVyPWV9fSx7a2V5OiJfb25SZXNwb25zZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPXt0eXBlOmUudHlwZSx1cmw6ZS5ib2R5LnNvdXJjZSxjb2RlOmUuYm9keS5jb2RlfTt0Ll9vblJlc3BvbnNlSGFuZGxlciYmdC5fb25SZXNwb25zZUhhbmRsZXIocil9fSx7a2V5OiJjaGlsZElkIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2hpbGRJZH19LHtrZXk6ImRhdGEiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zeW5jT2JqLmRhdGF9fV0pLGV9KCk7clsiZGVmYXVsdCJdPWwsdC5leHBvcnRzPXJbImRlZmF1bHQiXX0seyIuL1N5bmNPYmplY3QiOjEyMCwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoxMiwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoxM31dLDExNzpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbj1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiKSxpPW8obikscz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiKSxjPW8ocyksYT1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKSx1PW8oYSksbD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKSxmPW8obCksZD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIpLF89byhkKSxwPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9nZXQiKSxiPW8ocCksaD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMiKSx5PW8oaCksdj1lKCIuL0RhdGFPYmplY3QiKSxqPW8odiksbT1lKCIuL0RhdGFPYmplY3RDaGlsZCIpLGc9byhtKSx3PXtBTlk6ImFueSIsU1RBUlQ6InN0YXJ0IixFWEFDVDoiZXhhY3QifSxPPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSxyLG8sbixzLGEsbCl7KDAsdVsiZGVmYXVsdCJdKSh0aGlzLHQpO3ZhciBmPSgwLF9bImRlZmF1bHQiXSkodGhpcywoMCxjWyJkZWZhdWx0Il0pKHQpLmNhbGwodGhpcyxlLHIsbyxuLHMuZGF0YSxhKSksZD1mO3JldHVybiBkLl92ZXJzaW9uPWwsZC5fZmlsdGVycz17fSxkLl9zeW5jT2JqLm9ic2VydmUoZnVuY3Rpb24oZSl7ZC5fb25GaWx0ZXIoZSl9KSwoMCxpWyJkZWZhdWx0Il0pKHMuY2hpbGRyZW5zKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciB0PXMuY2hpbGRyZW5zW2VdO2QuX2NoaWxkcmVuT2JqZWN0c1tlXT1uZXcgZ1siZGVmYXVsdCJdKGQsZSx0KX0pLGQuX2FsbG9jYXRlTGlzdGVuZXJzKCksZn1yZXR1cm4oMCx5WyJkZWZhdWx0Il0pKHQsZSksKDAsZlsiZGVmYXVsdCJdKSh0LFt7a2V5OiJfYWxsb2NhdGVMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7KDAsYlsiZGVmYXVsdCJdKSgoMCxjWyJkZWZhdWx0Il0pKHQucHJvdG90eXBlKSwiX2FsbG9jYXRlTGlzdGVuZXJzIix0aGlzKS5jYWxsKHRoaXMpO3ZhciBlPXRoaXM7ZS5fY2hhbmdlTGlzdGVuZXI9ZS5fYnVzLmFkZExpc3RlbmVyKGUuX3VybCsiL2NoYW5nZXMiLGZ1bmN0aW9uKHQpeyJ1cGRhdGUiPT09dC50eXBlJiYoY29uc29sZS5sb2coIkRhdGFPYmplY3RPYnNlcnZlci0iK2UuX3VybCsiLVJDVjogIix0KSxlLl9jaGFuZ2VPYmplY3QoZS5fc3luY09iaix0KSl9KX19LHtrZXk6Il9yZWxlYXNlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpeygwLGJbImRlZmF1bHQiXSkoKDAsY1siZGVmYXVsdCJdKSh0LnByb3RvdHlwZSksIl9yZWxlYXNlTGlzdGVuZXJzIix0aGlzKS5jYWxsKHRoaXMpO3ZhciBlPXRoaXM7ZS5fY2hhbmdlTGlzdGVuZXIucmVtb3ZlKCl9fSx7a2V5OiJkZWxldGUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9yZWxlYXNlTGlzdGVuZXJzKCksZGVsZXRlIGUuX3N5bmNoZXIuX29ic2VydmVyc1tlLl91cmxdfX0se2tleToidW5zdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXt0eXBlOiJ1bnN1YnNjcmliZSIsZnJvbTplLl9vd25lcix0bzplLl9zeW5jaGVyLl9zdWJVUkwsYm9keTp7cmVzb3VyY2U6ZS5fdXJsfX07ZS5fYnVzLnBvc3RNZXNzYWdlKHQsZnVuY3Rpb24odCl7Y29uc29sZS5sb2coIkRhdGFPYmplY3RPYnNlcnZlci1VTlNVQlNDUklCRTogIix0KSwyMDA9PT10LmJvZHkuY29kZSYmKGUuX3JlbGVhc2VMaXN0ZW5lcnMoKSxkZWxldGUgZS5fc3luY2hlci5fb2JzZXJ2ZXJzW2UuX3VybF0pfSl9fSx7a2V5OiJvbkNoYW5nZSIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj1lLG89e3R5cGU6dy5FWEFDVCxjYWxsYmFjazp0fSxuPWUuaW5kZXhPZigiKiIpO249PT1lLmxlbmd0aC0xJiYoMD09PW4/by50eXBlPXcuQU5ZOihvLnR5cGU9dy5TVEFSVCxyPWUuc3Vic3RyKDAsZS5sZW5ndGgtMSkpKSx0aGlzLl9maWx0ZXJzW3JdPW99fSx7a2V5OiJfb25GaWx0ZXIiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7KDAsaVsiZGVmYXVsdCJdKSh0Ll9maWx0ZXJzKS5mb3JFYWNoKGZ1bmN0aW9uKHIpe3ZhciBvPXQuX2ZpbHRlcnNbcl07by50eXBlPT09dy5BTlk/by5jYWxsYmFjayhlKTpvLnR5cGU9PT13LlNUQVJUPzA9PT1lLmZpZWxkLmluZGV4T2YocikmJm8uY2FsbGJhY2soZSk6by50eXBlPT09dy5FWEFDVCYmZS5maWVsZD09PXImJm8uY2FsbGJhY2soZSl9KX19XSksdH0oalsiZGVmYXVsdCJdKTtyWyJkZWZhdWx0Il09Tyx0LmV4cG9ydHM9clsiZGVmYXVsdCJdfSx7Ii4vRGF0YU9iamVjdCI6MTE1LCIuL0RhdGFPYmplY3RDaGlsZCI6MTE2LCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiOjYsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyI6NywiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoxMiwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoxMywiYmFiZWwtcnVudGltZS9oZWxwZXJzL2dldCI6MTQsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9pbmhlcml0cyI6MTUsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIjoxNn1dLDExODpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbj1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2tleXMiKSxpPW8obikscz1lKCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiKSxjPW8ocyksYT1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKSx1PW8oYSksbD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKSxmPW8obCksZD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIpLF89byhkKSxwPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9nZXQiKSxiPW8ocCksaD1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMiKSx5PW8oaCksdj1lKCIuL0RhdGFPYmplY3QiKSxqPW8odiksbT1lKCIuLi91dGlscy91dGlscy5qcyIpLGc9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlLHIsbyxuLGkscyl7KDAsdVsiZGVmYXVsdCJdKSh0aGlzLHQpO3ZhciBhPSgwLF9bImRlZmF1bHQiXSkodGhpcywoMCxjWyJkZWZhdWx0Il0pKHQpLmNhbGwodGhpcyxlLHIsbyxuLGkscykpLGw9YTtyZXR1cm4gbC5fc3Vic2NyaXB0aW9ucz17fSxsLl9zeW5jT2JqLm9ic2VydmUoZnVuY3Rpb24oZSl7Y29uc29sZS5sb2coIkRhdGFPYmplY3RSZXBvcnRlci0iK3IrIi1TRU5EOiAiLGUpLGwuX29uQ2hhbmdlKGUpfSksbC5fYWxsb2NhdGVMaXN0ZW5lcnMoKSxhfXJldHVybigwLHlbImRlZmF1bHQiXSkodCxlKSwoMCxmWyJkZWZhdWx0Il0pKHQsW3trZXk6Il9hbGxvY2F0ZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXsoMCxiWyJkZWZhdWx0Il0pKCgwLGNbImRlZmF1bHQiXSkodC5wcm90b3R5cGUpLCJfYWxsb2NhdGVMaXN0ZW5lcnMiLHRoaXMpLmNhbGwodGhpcyk7dmFyIGU9dGhpcztlLl9vYmplY3RMaXN0ZW5lcj1lLl9idXMuYWRkTGlzdGVuZXIoZS5fdXJsLGZ1bmN0aW9uKHQpe3N3aXRjaChjb25zb2xlLmxvZygiRGF0YU9iamVjdC0iK2UuX3VybCsiLVJDVjogIix0KSx0LnR5cGUpe2Nhc2UicmVzcG9uc2UiOmUuX29uUmVzcG9uc2UodCk7YnJlYWs7Y2FzZSJyZWFkIjplLl9vblJlYWQodCl9fSl9fSx7a2V5OiJfcmVsZWFzZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXsoMCxiWyJkZWZhdWx0Il0pKCgwLGNbImRlZmF1bHQiXSkodC5wcm90b3R5cGUpLCJfcmVsZWFzZUxpc3RlbmVycyIsdGhpcykuY2FsbCh0aGlzKTt2YXIgZT10aGlzO2UuX29iamVjdExpc3RlbmVyLnJlbW92ZSgpfX0se2tleToiaW52aXRlT2JzZXJ2ZXJzIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9e3R5cGU6ImNyZWF0ZSIsZnJvbTp0Ll9zeW5jaGVyLl9vd25lcix0bzp0Ll9zeW5jaGVyLl9zdWJVUkwsYm9keTp7cmVzb3VyY2U6dC5fdXJsLHNjaGVtYTp0Ll9zY2hlbWEsdmFsdWU6dC5fc3luY09iai5kYXRhLGF1dGhvcmlzZTplfX07dC5fYnVzLnBvc3RNZXNzYWdlKHIpfX0se2tleToiZGVsZXRlIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD17dHlwZToiZGVsZXRlIixmcm9tOmUuX293bmVyLHRvOmUuX3N5bmNoZXIuX3N1YlVSTCxib2R5OntyZXNvdXJjZTplLl91cmx9fTtlLl9idXMucG9zdE1lc3NhZ2UodCxmdW5jdGlvbih0KXtjb25zb2xlLmxvZygiRGF0YU9iamVjdFJlcG9ydGVyLURFTEVURTogIix0KSwyMDA9PT10LmJvZHkuY29kZSYmKGUuX3JlbGVhc2VMaXN0ZW5lcnMoKSxkZWxldGUgZS5fc3luY2hlci5fcmVwb3J0ZXJzW2UuX3VybF0pfSl9fSx7a2V5OiJvblN1YnNjcmlwdGlvbiIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25TdWJzY3JpcHRpb25IYW5kbGVyPWV9fSx7a2V5OiJvblJlc3BvbnNlIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vblJlc3BvbnNlSGFuZGxlcj1lfX0se2tleToib25SZWFkIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vblJlYWRIYW5kbGVyPWV9fSx7a2V5OiJfb25Gb3J3YXJkIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3N3aXRjaChjb25zb2xlLmxvZygiRGF0YU9iamVjdFJlcG9ydGVyLVJDVjogIixlKSxlLmJvZHkudHlwZSl7Y2FzZSJzdWJzY3JpYmUiOnQuX29uU3Vic2NyaWJlKGUpO2JyZWFrO2Nhc2UidW5zdWJzY3JpYmUiOnQuX29uVW5TdWJzY3JpYmUoZSl9fX0se2tleToiX29uU3Vic2NyaWJlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9ZS5ib2R5LmZyb20sbz17dHlwZTplLmJvZHkudHlwZSx1cmw6cixpZGVudGl0eTplLmJvZHkuaWRlbnRpdHksYWNjZXB0OmZ1bmN0aW9uKCl7dmFyIG89e3VybDpyLHN0YXR1czoib24ifTt0Ll9zdWJzY3JpcHRpb25zW3JdPW87dmFyIG49e307cmV0dXJuKDAsaVsiZGVmYXVsdCJdKSh0Ll9jaGlsZHJlbk9iamVjdHMpLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHI9dC5fY2hpbGRyZW5PYmplY3RzW2VdLmRhdGE7bltlXT0oMCxtLmRlZXBDbG9uZSkocil9KSx0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZToyMDAsc2NoZW1hOnQuX3NjaGVtYSx2ZXJzaW9uOnQuX3ZlcnNpb24sdmFsdWU6e2RhdGE6KDAsbS5kZWVwQ2xvbmUpKHQuZGF0YSksY2hpbGRyZW5zOm59fX0pLG99LHJlamVjdDpmdW5jdGlvbihyKXt0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTo0MDMsZGVzYzpyfX0pfX07dC5fb25TdWJzY3JpcHRpb25IYW5kbGVyJiYoY29uc29sZS5sb2coIlNVQlNDUklQVElPTi1FVkVOVDogIixvKSx0Ll9vblN1YnNjcmlwdGlvbkhhbmRsZXIobykpfX0se2tleToiX29uVW5TdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLmJvZHkuZnJvbSxvPXQuX3N1YnNjcmlwdGlvbnNbcl07ZGVsZXRlIHQuX3N1YnNjcmlwdGlvbnNbcl07dmFyIG49e3R5cGU6ZS5ib2R5LnR5cGUsdXJsOnIsb2JqZWN0Om99O3QuX29uU3Vic2NyaXB0aW9uSGFuZGxlciYmKGNvbnNvbGUubG9nKCJVTi1TVUJTQ1JJUFRJT04tRVZFTlQ6ICIsbiksdC5fb25TdWJzY3JpcHRpb25IYW5kbGVyKG4pKX19LHtrZXk6Il9vblJlc3BvbnNlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9e3R5cGU6ZS50eXBlLHVybDplLmZyb20sY29kZTplLmJvZHkuY29kZX07dC5fb25SZXNwb25zZUhhbmRsZXImJihjb25zb2xlLmxvZygiUkVTUE9OU0UtRVZFTlQ6ICIsciksdC5fb25SZXNwb25zZUhhbmRsZXIocikpfX0se2tleToiX29uUmVhZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPXt0eXBlOmUudHlwZSx1cmw6ZS5mcm9tLGFjY2VwdDpmdW5jdGlvbigpe3QuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjIwMCx2YWx1ZTooMCxtLmRlZXBDbG9uZSkodC5kYXRhKX19KX0scmVqZWN0OmZ1bmN0aW9uKHIpe3QuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjQwMSxkZXNjOnJ9fSl9fTt0Ll9vblJlYWRIYW5kbGVyJiYoY29uc29sZS5sb2coIlJFQUQtRVZFTlQ6ICIsciksdC5fb25SZWFkSGFuZGxlcihyKSl9fSx7a2V5OiJzdWJzY3JpcHRpb25zIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3Vic2NyaXB0aW9uc319XSksdH0oalsiZGVmYXVsdCJdKTtyWyJkZWZhdWx0Il09Zyx0LmV4cG9ydHM9clsiZGVmYXVsdCJdfSx7Ii4uL3V0aWxzL3V0aWxzLmpzIjoxMjIsIi4vRGF0YU9iamVjdCI6MTE1LCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YiOjYsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyI6NywiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoxMiwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoxMywiYmFiZWwtcnVudGltZS9oZWxwZXJzL2dldCI6MTQsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9pbmhlcml0cyI6MTUsImJhYmVsLXJ1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIjoxNn1dLDExOTpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbj1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKSxpPW8obikscz1lKCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKSxjPW8ocyksYT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyLG8sbil7KDAsaVsiZGVmYXVsdCJdKSh0aGlzLGUpO3ZhciBzPXRoaXM7cy5fb3duZXI9dCxzLl91cmw9cixzLl9idXM9byxzLl9jaGlsZHJlbj1uLHMuX2NoYW5nZXM9W10scy5fYWxsb2NhdGVMaXN0ZW5lcnMoKX1yZXR1cm4oMCxjWyJkZWZhdWx0Il0pKGUsW3trZXk6Il9hbGxvY2F0ZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX2xpc3RlbmVyPWUuX2J1cy5hZGRMaXN0ZW5lcihlLl91cmwsZnVuY3Rpb24odCl7Y29uc29sZS5sb2coIkRhdGFQcm92aXNpb25hbC0iK2UuX3VybCsiLVJDVjogIix0KSxlLl9jaGFuZ2VzLnB1c2godCl9KX19LHtrZXk6Il9yZWxlYXNlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5fbGlzdGVuZXIucmVtb3ZlKCl9fSx7a2V5OiJhcHBseSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0Ll9jaGFuZ2VzLmZvckVhY2goZnVuY3Rpb24odCl7ZS5fY2hhbmdlT2JqZWN0KGUuX3N5bmNPYmosdCl9KX19LHtrZXk6ImNoaWxkcmVuIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2hpbGRyZW59fV0pLGV9KCk7clsiZGVmYXVsdCJdPWEsdC5leHBvcnRzPXJbImRlZmF1bHQiXX0seyJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjEyLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjEzfV0sMTIwOltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHIuT2JqZWN0VHlwZT1yLkNoYW5nZVR5cGU9dm9pZCAwO3ZhciBuPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyIpLGk9byhuKSxzPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpLGM9byhzKSxhPWUoImJhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpLHU9byhhKSxsPWUoIi4uL3V0aWxzL3V0aWxzLmpzIiksZj1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCl7KDAsY1siZGVmYXVsdCJdKSh0aGlzLGUpO3ZhciByPXRoaXM7ci5fb2JzZXJ2ZXJzPVtdLHIuX2ZpbHRlcnM9e30sdD9yLl9kYXRhPSgwLGwuZGVlcENsb25lKSh0KTpyLl9kYXRhPXt9LHIuX2ludGVybmFsT2JzZXJ2ZShuZXcgZCxyLl9kYXRhKX1yZXR1cm4oMCx1WyJkZWZhdWx0Il0pKGUsW3trZXk6Im9ic2VydmUiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29ic2VydmVycy5wdXNoKGUpfX0se2tleToiZmluZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zcGxpdCgiLiIpO3JldHVybiB0aGlzLl9maW5kV2l0aFNwbGl0KHQpfX0se2tleToiZmluZEJlZm9yZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9e30scj1lLnNwbGl0KCIuIik7cmV0dXJuIHQubGFzdD1yLnBvcCgpLHQub2JqPXRoaXMuX2ZpbmRXaXRoU3BsaXQociksdH19LHtrZXk6Il9maW5kV2l0aFNwbGl0Iix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLl9kYXRhO3JldHVybiBlLmZvckVhY2goZnVuY3Rpb24oZSl7dD10W2VdfSksdH19LHtrZXk6Il9maXJlRXZlbnQiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29ic2VydmVycy5mb3JFYWNoKGZ1bmN0aW9uKHQpe3QoZSl9KX19LHtrZXk6Il9pc09ic2VydmFibGUiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLmNvbnN0cnVjdG9yPT09T2JqZWN0fHxlLmNvbnN0cnVjdG9yPT09QXJyYXl9fSx7a2V5OiJfaW50ZXJuYWxPYnNlcnZlIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7aWYoci5faXNPYnNlcnZhYmxlKHQpKXt2YXIgbz1mdW5jdGlvbih0KXtyLl9vbkNoYW5nZXMoZSx0KX07aWYodC5jb25zdHJ1Y3Rvcj09PU9iamVjdCl7T2JqZWN0Lm9ic2VydmUodCxvKTtmb3IodmFyIG4gaW4gdClyLl9pc09ic2VydmFibGUodFtuXSkmJnIuX2ludGVybmFsT2JzZXJ2ZShlWyJuZXciXShuKSx0W25dKX1lbHNlIGlmKHQuY29uc3RydWN0b3I9PT1BcnJheSl7QXJyYXkub2JzZXJ2ZSh0LG8pO2Zvcih2YXIgaSBpbiB0KWlmKHIuX2lzT2JzZXJ2YWJsZSh0W2ldKSl7dmFyIHM9ZVsibmV3Il0obmV3IF8odFtpXSxpKSk7ci5faW50ZXJuYWxPYnNlcnZlKHMsdFtpXSl9fX19fSx7a2V5OiJfb25DaGFuZ2VzIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7Zm9yKHZhciBvIGluIHQpe3ZhciBuPXRbb10ub2JqZWN0LGk9dm9pZCAwO2lmKG4uY29uc3RydWN0b3I9PT1PYmplY3QmJihpPWIuT0JKRUNUKSxuLmNvbnN0cnVjdG9yPT09QXJyYXkmJihpPWIuQVJSQVkpLCJzcGxpY2UiPT09dFtvXS50eXBlKSFmdW5jdGlvbigpe3ZhciBzPXRbb10uaW5kZXgsYz1lWyJuZXciXSgiIitzKSxhPWMudG9TdHJpbmcoKSx1PXRbb10ucmVtb3ZlZC5sZW5ndGg7aWYoMCE9PXUpe3ZhciBmPXRbb10ucmVtb3ZlZDtmLmZvckVhY2goZnVuY3Rpb24odCxvKXtyLl9pc09ic2VydmFibGUodCkmJmUucmVtb3ZlSW5kZXgocytvKX0pLHIuX2ZpcmVFdmVudCh7Y1R5cGU6cC5SRU1PVkUsb1R5cGU6aSxmaWVsZDphLGRhdGE6dX0pfXZhciBkPXRbb10uYWRkZWRDb3VudDtpZigwIT09ZCl7dmFyIGI9bi5zbGljZShzLHMrZCk7Yi5mb3JFYWNoKGZ1bmN0aW9uKHQsbyl7aWYoci5faXNPYnNlcnZhYmxlKHQpKXt2YXIgbj1lWyJuZXciXShuZXcgXyh0LHMrbykpO3IuX2ludGVybmFsT2JzZXJ2ZShuLHQpfX0pLHIuX2ZpcmVFdmVudCh7Y1R5cGU6cC5BREQsb1R5cGU6aSxmaWVsZDphLGRhdGE6KDAsbC5kZWVwQ2xvbmUpKGIpfSl9cyE9PW4ubGVuZ3RoLTEmJmUucmVJbmRleEZyb20obil9KCk7ZWxzZXt2YXIgcz1lWyJuZXciXSh0W29dLm5hbWUpLGM9cy50b1N0cmluZygpO2lmKGMuaW5kZXhPZigiU3ltYm9sIikhPT0tMSljb250aW51ZTt2YXIgYT1uW3Rbb10ubmFtZV07InVwZGF0ZSI9PT10W29dLnR5cGUmJnRoaXMuX2ZpcmVFdmVudCh7Y1R5cGU6cC5VUERBVEUsb1R5cGU6aSxmaWVsZDpjLGRhdGE6KDAsbC5kZWVwQ2xvbmUpKGEpfSksImFkZCI9PT10W29dLnR5cGUmJih0aGlzLl9pbnRlcm5hbE9ic2VydmUocyxhKSx0aGlzLl9maXJlRXZlbnQoe2NUeXBlOnAuQURELG9UeXBlOmksZmllbGQ6YyxkYXRhOigwLGwuZGVlcENsb25lKShhKX0pKSwiZGVsZXRlIj09PXRbb10udHlwZSYmdGhpcy5fZmlyZUV2ZW50KHtjVHlwZTpwLlJFTU9WRSxvVHlwZTppLGZpZWxkOmN9KX19fX0se2tleToiZGF0YSIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RhdGF9fV0pLGV9KCksZD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXsoMCxjWyJkZWZhdWx0Il0pKHRoaXMsZSksdGhpcy5fcGF0aD1bXSx0aGlzLl9vYnNlcnZhYmxlcz17fX1yZXR1cm4oMCx1WyJkZWZhdWx0Il0pKGUsW3trZXk6InJlbW92ZUluZGV4Iix2YWx1ZTpmdW5jdGlvbihlKXtkZWxldGUgdGhpcy5fb2JzZXJ2YWJsZXNbZV19fSx7a2V5OiJyZUluZGV4RnJvbSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczsoMCxpWyJkZWZhdWx0Il0pKHRoaXMuX29ic2VydmFibGVzKS5mb3JFYWNoKGZ1bmN0aW9uKHIpe3ZhciBvPXQuX29ic2VydmFibGVzW3JdLG49ZS5pbmRleE9mKG8ub2JqKTtvLmlkeCE9biYmKG8uaWR4PW4sZGVsZXRlIHQuX29ic2VydmFibGVzW3JdLHQuX29ic2VydmFibGVzW25dPW8pfSl9fSx7a2V5OiJuZXciLHZhbHVlOmZ1bmN0aW9uKGUpe2UuY29uc3RydWN0b3I9PV8mJih0aGlzLl9vYnNlcnZhYmxlc1tlLmlkeF09ZSk7dmFyIHQ9dGhpcy5jbG9uZSgpO3JldHVybiB0Ll9wYXRoLnB1c2goZSksdH19LHtrZXk6ImNsb25lIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PW5ldyBlO3JldHVybiB0aGlzLl9wYXRoLmZvckVhY2goZnVuY3Rpb24oZSl7dC5fcGF0aC5wdXNoKGUpfSksdH19LHtrZXk6InRvU3RyaW5nIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPSIiO3JldHVybiB0aGlzLl9wYXRoLmZvckVhY2goZnVuY3Rpb24odCxyKXswPT09cj9lPXQudG9TdHJpbmcoKTplKz0iLiIrdC50b1N0cmluZygpfSksZX19XSksZX0oKSxfPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIpeygwLGNbImRlZmF1bHQiXSkodGhpcyxlKSx0aGlzLm9iaj10LHRoaXMuaWR4PXJ9cmV0dXJuKDAsdVsiZGVmYXVsdCJdKShlLFt7a2V5OiJ0b1N0cmluZyIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pZHgudG9TdHJpbmcoKX19XSksZX0oKSxwPXIuQ2hhbmdlVHlwZT17VVBEQVRFOiJ1cGRhdGUiLEFERDoiYWRkIixSRU1PVkU6InJlbW92ZSJ9LGI9ci5PYmplY3RUeXBlPXtPQkpFQ1Q6Im9iamVjdCIsQVJSQVk6ImFycmF5In07clsiZGVmYXVsdCJdPWZ9LHsiLi4vdXRpbHMvdXRpbHMuanMiOjEyMiwiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzIjo3LCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siOjEyLCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiOjEzfV0sMTIxOltmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOnsiZGVmYXVsdCI6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBuPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlIiksaT1vKG4pLHM9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIiksYz1vKHMpLGE9ZSgiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIiksdT1vKGEpLGw9ZSgiLi9EYXRhT2JqZWN0UmVwb3J0ZXIiKSxmPW8obCksZD1lKCIuL0RhdGFPYmplY3RPYnNlcnZlciIpLF89byhkKSxwPWUoIi4vRGF0YVByb3Zpc2lvbmFsIiksYj1vKHApLGg9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQscixvKXsoMCxjWyJkZWZhdWx0Il0pKHRoaXMsZSk7dmFyIG49dGhpcztuLl9vd25lcj10LG4uX2J1cz1yLG4uX3N1YlVSTD1vLnJ1bnRpbWVVUkwrIi9zbSIsbi5fcmVwb3J0ZXJzPXt9LG4uX29ic2VydmVycz17fSxuLl9wcm92aXNpb25hbHM9e30sci5hZGRMaXN0ZW5lcih0LGZ1bmN0aW9uKGUpe2lmKGUuZnJvbSE9PXQpc3dpdGNoKGNvbnNvbGUubG9nKCJTeW5jaGVyLVJDVjogIixlKSxlLnR5cGUpe2Nhc2UiZm9yd2FyZCI6bi5fb25Gb3J3YXJkKGUpO2JyZWFrO2Nhc2UiY3JlYXRlIjpuLl9vblJlbW90ZUNyZWF0ZShlKTticmVhaztjYXNlImRlbGV0ZSI6bi5fb25SZW1vdGVEZWxldGUoZSl9fSl9cmV0dXJuKDAsdVsiZGVmYXVsdCJdKShlLFt7a2V5OiJjcmVhdGUiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbz10aGlzO3IucmVwb3J0ZXI9by5fb3duZXIsci5zY2hlbWE9ZTt2YXIgbj17dHlwZToiY3JlYXRlIixmcm9tOm8uX293bmVyLHRvOm8uX3N1YlVSTCxib2R5OntzY2hlbWE6ZSx2YWx1ZTpyLGF1dGhvcmlzZTp0fX07cmV0dXJuIG5ldyBpWyJkZWZhdWx0Il0oZnVuY3Rpb24odCxpKXtvLl9idXMucG9zdE1lc3NhZ2UobixmdW5jdGlvbihuKXtpZihjb25zb2xlLmxvZygiY3JlYXRlLXJlc3BvbnNlOiAiLG4pLDIwMD09PW4uYm9keS5jb2RlKXt2YXIgcz1uLmJvZHkucmVzb3VyY2UsYz1uZXcgZlsiZGVmYXVsdCJdKG8scyxlLCJvbiIscixuLmJvZHkuY2hpbGRyZW5SZXNvdXJjZXMpO28uX3JlcG9ydGVyc1tzXT1jLHQoYyl9ZWxzZSBpKG4uYm9keS5kZXNjKX0pfSl9fSx7a2V5OiJzdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcyxvPXt0eXBlOiJzdWJzY3JpYmUiLGZyb206ci5fb3duZXIsdG86ci5fc3ViVVJMLGJvZHk6e3NjaGVtYTplLHJlc291cmNlOnR9fTtyZXR1cm4gbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbihuLGkpe3IuX2J1cy5wb3N0TWVzc2FnZShvLGZ1bmN0aW9uKG8pe2NvbnNvbGUubG9nKCJzdWJzY3JpYmUtcmVzcG9uc2U6ICIsbyk7dmFyIHM9ci5fcHJvdmlzaW9uYWxzW3RdO2lmKGRlbGV0ZSByLl9wcm92aXNpb25hbHNbdF0scyYmcy5fcmVsZWFzZUxpc3RlbmVycygpLG8uYm9keS5jb2RlPDIwMClzPW5ldyBiWyJkZWZhdWx0Il0oci5fb3duZXIsdCxyLl9idXMsby5ib2R5LmNoaWxkcmVuUmVzb3VyY2VzKSxyLl9wcm92aXNpb25hbHNbdF09cztlbHNlIGlmKDIwMD09PW8uYm9keS5jb2RlKXt2YXIgYz1uZXcgX1siZGVmYXVsdCJdKHIsdCxlLCJvbiIsby5ib2R5LnZhbHVlLHMuY2hpbGRyZW4sby5ib2R5LnZlcnNpb24pO3IuX29ic2VydmVyc1t0XT1jLG4oYykscy5hcHBseShjKX1lbHNlIGkoby5ib2R5LmRlc2MpfSl9KX19LHtrZXk6InJlYWQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj17dHlwZToicmVhZCIsZnJvbTp0Ll9vd25lcix0bzplfTtyZXR1cm4gbmV3IGlbImRlZmF1bHQiXShmdW5jdGlvbihlLG8pe3QuX2J1cy5wb3N0TWVzc2FnZShyLGZ1bmN0aW9uKHQpewpjb25zb2xlLmxvZygicmVhZC1yZXNwb25zZTogIix0KSwyMDA9PT10LmJvZHkuY29kZT9lKHQuYm9keS52YWx1ZSk6byh0LmJvZHkuZGVzYyl9KX0pfX0se2tleToib25Ob3RpZmljYXRpb24iLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uTm90aWZpY2F0aW9uSGFuZGxlcj1lfX0se2tleToiX29uRm9yd2FyZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPXQuX3JlcG9ydGVyc1tlLmJvZHkudG9dO3IuX29uRm9yd2FyZChlKX19LHtrZXk6Il9vblJlbW90ZUNyZWF0ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUuZnJvbS5zbGljZSgwLC0xMyksbz17dHlwZTplLnR5cGUsZnJvbTplLmJvZHkuc291cmNlLHVybDpyLHNjaGVtYTplLmJvZHkuc2NoZW1hLHZhbHVlOmUuYm9keS52YWx1ZSxpZGVudGl0eTplLmJvZHkuaWRlbnRpdHksYWNrOmZ1bmN0aW9uKHIpe3ZhciBvPTIwMDtyJiYobz1yKSx0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTpvfX0pfX07dC5fb25Ob3RpZmljYXRpb25IYW5kbGVyJiYoY29uc29sZS5sb2coIk5PVElGSUNBVElPTi1FVkVOVDogIixvKSx0Ll9vbk5vdGlmaWNhdGlvbkhhbmRsZXIobykpfX0se2tleToiX29uUmVtb3RlRGVsZXRlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9ZS5ib2R5LnJlc291cmNlLG89dC5fb2JzZXJ2ZXJzW3JdO2lmKG8pe3ZhciBuPXt0eXBlOmUudHlwZSx1cmw6cixpZGVudGl0eTplLmJvZHkuaWRlbnRpdHksYWNrOmZ1bmN0aW9uKHIpe3ZhciBuPTIwMDtyJiYobj1yKSwyMDA9PT1uJiZvWyJkZWxldGUiXSgpLHQuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOm4sc291cmNlOnQuX293bmVyfX0pfX07dC5fb25Ob3RpZmljYXRpb25IYW5kbGVyJiYoY29uc29sZS5sb2coIk5PVElGSUNBVElPTi1FVkVOVDogIixuKSx0Ll9vbk5vdGlmaWNhdGlvbkhhbmRsZXIobikpfWVsc2UgdC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6NDA0LHNvdXJjZTp0Ll9vd25lcn19KX19LHtrZXk6Im93bmVyIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb3duZXJ9fSx7a2V5OiJyZXBvcnRlcnMiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZXBvcnRlcnN9fSx7a2V5OiJvYnNlcnZlcnMiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9vYnNlcnZlcnN9fV0pLGV9KCk7clsiZGVmYXVsdCJdPWgsdC5leHBvcnRzPXJbImRlZmF1bHQiXX0seyIuL0RhdGFPYmplY3RPYnNlcnZlciI6MTE3LCIuL0RhdGFPYmplY3RSZXBvcnRlciI6MTE4LCIuL0RhdGFQcm92aXNpb25hbCI6MTE5LCJiYWJlbC1ydW50aW1lL2NvcmUtanMvcHJvbWlzZSI6OSwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjoxMiwiYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjoxM31dLDEyMjpbZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ImRlZmF1bHQiOmV9fWZ1bmN0aW9uIG4oZSl7aWYoIWUpdGhyb3cgRXJyb3IoIlVSTCBpcyBuZWVkZWQgdG8gc3BsaXQiKTt2YXIgdD0vKFthLXpBLVotXSopOlwvXC8oPzpcLik/KFstYS16QS1aMC05QDolLl9cK34jPV17MiwyNTZ9KShbLWEtekEtWjAtOUA6JS5fXCt+Iz1cL10qKS9naSxyPSIkMSwkMiwkMyIsbz1lLnJlcGxhY2UodCxyKS5zcGxpdCgiLCIpO29bMF09PT1lJiYob1swXT0iaHR0cHMiLG9bMV09ZSk7dmFyIG49e3R5cGU6b1swXSxkb21haW46b1sxXSxpZGVudGl0eTpvWzJdfTtyZXR1cm4gbn1mdW5jdGlvbiBpKGUpe3ZhciB0PWUuaW5kZXhPZigiQCIpLHI9e3VzZXJuYW1lOmUuc3Vic3RyaW5nKDAsdCksZG9tYWluOmUuc3Vic3RyaW5nKHQrMSxlLmxlbmd0aCl9O3JldHVybiByfWZ1bmN0aW9uIHMoZSl7cmV0dXJuISgoMCxwWyJkZWZhdWx0Il0pKGUpLmxlbmd0aD4wKX1mdW5jdGlvbiBjKGUpe2lmKGUpcmV0dXJuIEpTT04ucGFyc2UoKDAsZFsiZGVmYXVsdCJdKShlKSl9ZnVuY3Rpb24gYShlKXt2YXIgdD1lLmluZGV4T2YoIkAiKTtyZXR1cm4idXNlcjovLyIrZS5zdWJzdHJpbmcodCsxLGUubGVuZ3RoKSsiLyIrZS5zdWJzdHJpbmcoMCx0KX1mdW5jdGlvbiB1KGUpe3ZhciB0PW4oZSk7cmV0dXJuIHQuaWRlbnRpdHkucmVwbGFjZSgiLyIsIiIpKyJAIit0LmRvbWFpbn1mdW5jdGlvbiBsKGUpe2lmKCJ1c2VyOi8vIj09PWUuc3Vic3RyaW5nKDAsNykpe3ZhciB0PW4oZSk7aWYodC5kb21haW4mJnQuaWRlbnRpdHkpcmV0dXJuIGU7dGhyb3cidXNlclVSTCB3aXRoIHdyb25nIGZvcm1hdCJ9cmV0dXJuIGEoZSl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHIsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBmPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9qc29uL3N0cmluZ2lmeSIpLGQ9byhmKSxfPWUoImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyIpLHA9byhfKTtyLmRpdmlkZVVSTD1uLHIuZGl2aWRlRW1haWw9aSxyLmVtcHR5T2JqZWN0PXMsci5kZWVwQ2xvbmU9YyxyLmdldFVzZXJVUkxGcm9tRW1haWw9YSxyLmdldFVzZXJFbWFpbEZyb21VUkw9dSxyLmNvbnZlcnRUb1VzZXJVUkw9bH0seyJiYWJlbC1ydW50aW1lL2NvcmUtanMvanNvbi9zdHJpbmdpZnkiOjIsImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cyI6N31dfSx7fSxbMTE0XSkoMTE0KX0pOwoKCn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSAidW5kZWZpbmVkIiA/IGdsb2JhbCA6IHR5cGVvZiBzZWxmICE9PSAidW5kZWZpbmVkIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSAidW5kZWZpbmVkIiA/IHdpbmRvdyA6IHt9KQp9LHt9XSwyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLyohCiAqIFVSSS5qcyAtIE11dGF0aW5nIFVSTHMKICogSVB2NiBTdXBwb3J0CiAqCiAqIFZlcnNpb246IDEuMTguMQogKgogKiBBdXRob3I6IFJvZG5leSBSZWhtCiAqIFdlYjogaHR0cDovL21lZGlhbGl6ZS5naXRodWIuaW8vVVJJLmpzLwogKgogKiBMaWNlbnNlZCB1bmRlcgogKiAgIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UKICoKICovCgooZnVuY3Rpb24gKHJvb3QsIGZhY3RvcnkpIHsKICAndXNlIHN0cmljdCc7CiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3VtZGpzL3VtZC9ibG9iL21hc3Rlci9yZXR1cm5FeHBvcnRzLmpzCiAgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JykgewogICAgLy8gTm9kZQogICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7CiAgfSBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKICAgIC8vIEFNRC4gUmVnaXN0ZXIgYXMgYW4gYW5vbnltb3VzIG1vZHVsZS4KICAgIGRlZmluZShmYWN0b3J5KTsKICB9IGVsc2UgewogICAgLy8gQnJvd3NlciBnbG9iYWxzIChyb290IGlzIHdpbmRvdykKICAgIHJvb3QuSVB2NiA9IGZhY3Rvcnkocm9vdCk7CiAgfQp9KHRoaXMsIGZ1bmN0aW9uIChyb290KSB7CiAgJ3VzZSBzdHJpY3QnOwoKICAvKgogIHZhciBfaW4gPSAiZmU4MDowMDAwOjAwMDA6MDAwMDowMjA0OjYxZmY6ZmU5ZDpmMTU2IjsKICB2YXIgX291dCA9IElQdjYuYmVzdChfaW4pOwogIHZhciBfZXhwZWN0ZWQgPSAiZmU4MDo6MjA0OjYxZmY6ZmU5ZDpmMTU2IjsKCiAgY29uc29sZS5sb2coX2luLCBfb3V0LCBfZXhwZWN0ZWQsIF9vdXQgPT09IF9leHBlY3RlZCk7CiAgKi8KCiAgLy8gc2F2ZSBjdXJyZW50IElQdjYgdmFyaWFibGUsIGlmIGFueQogIHZhciBfSVB2NiA9IHJvb3QgJiYgcm9vdC5JUHY2OwoKICBmdW5jdGlvbiBiZXN0UHJlc2VudGF0aW9uKGFkZHJlc3MpIHsKICAgIC8vIGJhc2VkIG9uOgogICAgLy8gSmF2YXNjcmlwdCB0byB0ZXN0IGFuIElQdjYgYWRkcmVzcyBmb3IgcHJvcGVyIGZvcm1hdCwgYW5kIHRvCiAgICAvLyBwcmVzZW50IHRoZSAiYmVzdCB0ZXh0IHJlcHJlc2VudGF0aW9uIiBhY2NvcmRpbmcgdG8gSUVURiBEcmFmdCBSRkMgYXQKICAgIC8vIGh0dHA6Ly90b29scy5pZXRmLm9yZy9odG1sL2RyYWZ0LWlldGYtNm1hbi10ZXh0LWFkZHItcmVwcmVzZW50YXRpb24tMDQKICAgIC8vIDggRmViIDIwMTAgUmljaCBCcm93biwgRGFydHdhcmUsIExMQwogICAgLy8gUGxlYXNlIGZlZWwgZnJlZSB0byB1c2UgdGhpcyBjb2RlIGFzIGxvbmcgYXMgeW91IHByb3ZpZGUgYSBsaW5rIHRvCiAgICAvLyBodHRwOi8vd3d3LmludGVybWFwcGVyLmNvbQogICAgLy8gaHR0cDovL2ludGVybWFwcGVyLmNvbS9zdXBwb3J0L3Rvb2xzL0lQVjYtVmFsaWRhdG9yLmFzcHgKICAgIC8vIGh0dHA6Ly9kb3dubG9hZC5kYXJ0d2FyZS5jb20vdGhpcmRwYXJ0eS9pcHY2dmFsaWRhdG9yLmpzCgogICAgdmFyIF9hZGRyZXNzID0gYWRkcmVzcy50b0xvd2VyQ2FzZSgpOwogICAgdmFyIHNlZ21lbnRzID0gX2FkZHJlc3Muc3BsaXQoJzonKTsKICAgIHZhciBsZW5ndGggPSBzZWdtZW50cy5sZW5ndGg7CiAgICB2YXIgdG90YWwgPSA4OwoKICAgIC8vIHRyaW0gY29sb25zICg6OiBvciA6OmE6Yjpj4oCmIG9yIOKApmE6YjpjOjopCiAgICBpZiAoc2VnbWVudHNbMF0gPT09ICcnICYmIHNlZ21lbnRzWzFdID09PSAnJyAmJiBzZWdtZW50c1syXSA9PT0gJycpIHsKICAgICAgLy8gbXVzdCBoYXZlIGJlZW4gOjoKICAgICAgLy8gcmVtb3ZlIGZpcnN0IHR3byBpdGVtcwogICAgICBzZWdtZW50cy5zaGlmdCgpOwogICAgICBzZWdtZW50cy5zaGlmdCgpOwogICAgfSBlbHNlIGlmIChzZWdtZW50c1swXSA9PT0gJycgJiYgc2VnbWVudHNbMV0gPT09ICcnKSB7CiAgICAgIC8vIG11c3QgaGF2ZSBiZWVuIDo6eHh4eAogICAgICAvLyByZW1vdmUgdGhlIGZpcnN0IGl0ZW0KICAgICAgc2VnbWVudHMuc2hpZnQoKTsKICAgIH0gZWxzZSBpZiAoc2VnbWVudHNbbGVuZ3RoIC0gMV0gPT09ICcnICYmIHNlZ21lbnRzW2xlbmd0aCAtIDJdID09PSAnJykgewogICAgICAvLyBtdXN0IGhhdmUgYmVlbiB4eHh4OjoKICAgICAgc2VnbWVudHMucG9wKCk7CiAgICB9CgogICAgbGVuZ3RoID0gc2VnbWVudHMubGVuZ3RoOwoKICAgIC8vIGFkanVzdCB0b3RhbCBzZWdtZW50cyBmb3IgSVB2NCB0cmFpbGVyCiAgICBpZiAoc2VnbWVudHNbbGVuZ3RoIC0gMV0uaW5kZXhPZignLicpICE9PSAtMSkgewogICAgICAvLyBmb3VuZCBhICIuIiB3aGljaCBtZWFucyBJUHY0CiAgICAgIHRvdGFsID0gNzsKICAgIH0KCiAgICAvLyBmaWxsIGVtcHR5IHNlZ21lbnRzIHRoZW0gd2l0aCAiMDAwMCIKICAgIHZhciBwb3M7CiAgICBmb3IgKHBvcyA9IDA7IHBvcyA8IGxlbmd0aDsgcG9zKyspIHsKICAgICAgaWYgKHNlZ21lbnRzW3Bvc10gPT09ICcnKSB7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0KCiAgICBpZiAocG9zIDwgdG90YWwpIHsKICAgICAgc2VnbWVudHMuc3BsaWNlKHBvcywgMSwgJzAwMDAnKTsKICAgICAgd2hpbGUgKHNlZ21lbnRzLmxlbmd0aCA8IHRvdGFsKSB7CiAgICAgICAgc2VnbWVudHMuc3BsaWNlKHBvcywgMCwgJzAwMDAnKTsKICAgICAgfQogICAgfQoKICAgIC8vIHN0cmlwIGxlYWRpbmcgemVyb3MKICAgIHZhciBfc2VnbWVudHM7CiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRvdGFsOyBpKyspIHsKICAgICAgX3NlZ21lbnRzID0gc2VnbWVudHNbaV0uc3BsaXQoJycpOwogICAgICBmb3IgKHZhciBqID0gMDsgaiA8IDMgOyBqKyspIHsKICAgICAgICBpZiAoX3NlZ21lbnRzWzBdID09PSAnMCcgJiYgX3NlZ21lbnRzLmxlbmd0aCA+IDEpIHsKICAgICAgICAgIF9zZWdtZW50cy5zcGxpY2UoMCwxKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICB9CgogICAgICBzZWdtZW50c1tpXSA9IF9zZWdtZW50cy5qb2luKCcnKTsKICAgIH0KCiAgICAvLyBmaW5kIGxvbmdlc3Qgc2VxdWVuY2Ugb2YgemVyb2VzIGFuZCBjb2FsZXNjZSB0aGVtIGludG8gb25lIHNlZ21lbnQKICAgIHZhciBiZXN0ID0gLTE7CiAgICB2YXIgX2Jlc3QgPSAwOwogICAgdmFyIF9jdXJyZW50ID0gMDsKICAgIHZhciBjdXJyZW50ID0gLTE7CiAgICB2YXIgaW56ZXJvZXMgPSBmYWxzZTsKICAgIC8vIGk7IGFscmVhZHkgZGVjbGFyZWQKCiAgICBmb3IgKGkgPSAwOyBpIDwgdG90YWw7IGkrKykgewogICAgICBpZiAoaW56ZXJvZXMpIHsKICAgICAgICBpZiAoc2VnbWVudHNbaV0gPT09ICcwJykgewogICAgICAgICAgX2N1cnJlbnQgKz0gMTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgaW56ZXJvZXMgPSBmYWxzZTsKICAgICAgICAgIGlmIChfY3VycmVudCA+IF9iZXN0KSB7CiAgICAgICAgICAgIGJlc3QgPSBjdXJyZW50OwogICAgICAgICAgICBfYmVzdCA9IF9jdXJyZW50OwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAoc2VnbWVudHNbaV0gPT09ICcwJykgewogICAgICAgICAgaW56ZXJvZXMgPSB0cnVlOwogICAgICAgICAgY3VycmVudCA9IGk7CiAgICAgICAgICBfY3VycmVudCA9IDE7CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgaWYgKF9jdXJyZW50ID4gX2Jlc3QpIHsKICAgICAgYmVzdCA9IGN1cnJlbnQ7CiAgICAgIF9iZXN0ID0gX2N1cnJlbnQ7CiAgICB9CgogICAgaWYgKF9iZXN0ID4gMSkgewogICAgICBzZWdtZW50cy5zcGxpY2UoYmVzdCwgX2Jlc3QsICcnKTsKICAgIH0KCiAgICBsZW5ndGggPSBzZWdtZW50cy5sZW5ndGg7CgogICAgLy8gYXNzZW1ibGUgcmVtYWluaW5nIHNlZ21lbnRzCiAgICB2YXIgcmVzdWx0ID0gJyc7CiAgICBpZiAoc2VnbWVudHNbMF0gPT09ICcnKSAgewogICAgICByZXN1bHQgPSAnOic7CiAgICB9CgogICAgZm9yIChpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAgICAgIHJlc3VsdCArPSBzZWdtZW50c1tpXTsKICAgICAgaWYgKGkgPT09IGxlbmd0aCAtIDEpIHsKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgcmVzdWx0ICs9ICc6JzsKICAgIH0KCiAgICBpZiAoc2VnbWVudHNbbGVuZ3RoIC0gMV0gPT09ICcnKSB7CiAgICAgIHJlc3VsdCArPSAnOic7CiAgICB9CgogICAgcmV0dXJuIHJlc3VsdDsKICB9CgogIGZ1bmN0aW9uIG5vQ29uZmxpY3QoKSB7CiAgICAvKmpzaGludCB2YWxpZHRoaXM6IHRydWUgKi8KICAgIGlmIChyb290LklQdjYgPT09IHRoaXMpIHsKICAgICAgcm9vdC5JUHY2ID0gX0lQdjY7CiAgICB9CiAgCiAgICByZXR1cm4gdGhpczsKICB9CgogIHJldHVybiB7CiAgICBiZXN0OiBiZXN0UHJlc2VudGF0aW9uLAogICAgbm9Db25mbGljdDogbm9Db25mbGljdAogIH07Cn0pKTsKCn0se31dLDM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKiEKICogVVJJLmpzIC0gTXV0YXRpbmcgVVJMcwogKiBTZWNvbmQgTGV2ZWwgRG9tYWluIChTTEQpIFN1cHBvcnQKICoKICogVmVyc2lvbjogMS4xOC4xCiAqCiAqIEF1dGhvcjogUm9kbmV5IFJlaG0KICogV2ViOiBodHRwOi8vbWVkaWFsaXplLmdpdGh1Yi5pby9VUkkuanMvCiAqCiAqIExpY2Vuc2VkIHVuZGVyCiAqICAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZQogKgogKi8KCihmdW5jdGlvbiAocm9vdCwgZmFjdG9yeSkgewogICd1c2Ugc3RyaWN0JzsKICAvLyBodHRwczovL2dpdGh1Yi5jb20vdW1kanMvdW1kL2Jsb2IvbWFzdGVyL3JldHVybkV4cG9ydHMuanMKICBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAvLyBOb2RlCiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTsKICB9IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgewogICAgLy8gQU1ELiBSZWdpc3RlciBhcyBhbiBhbm9ueW1vdXMgbW9kdWxlLgogICAgZGVmaW5lKGZhY3RvcnkpOwogIH0gZWxzZSB7CiAgICAvLyBCcm93c2VyIGdsb2JhbHMgKHJvb3QgaXMgd2luZG93KQogICAgcm9vdC5TZWNvbmRMZXZlbERvbWFpbnMgPSBmYWN0b3J5KHJvb3QpOwogIH0KfSh0aGlzLCBmdW5jdGlvbiAocm9vdCkgewogICd1c2Ugc3RyaWN0JzsKCiAgLy8gc2F2ZSBjdXJyZW50IFNlY29uZExldmVsRG9tYWlucyB2YXJpYWJsZSwgaWYgYW55CiAgdmFyIF9TZWNvbmRMZXZlbERvbWFpbnMgPSByb290ICYmIHJvb3QuU2Vjb25kTGV2ZWxEb21haW5zOwoKICB2YXIgU0xEID0gewogICAgLy8gbGlzdCBvZiBrbm93biBTZWNvbmQgTGV2ZWwgRG9tYWlucwogICAgLy8gY29udmVydGVkIGxpc3Qgb2YgU0xEcyBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9nYXZpbmdtaWxsZXIvc2Vjb25kLWxldmVsLWRvbWFpbnMKICAgIC8vIC0tLS0KICAgIC8vIHB1YmxpY3N1ZmZpeC5vcmcgaXMgbW9yZSBjdXJyZW50IGFuZCBhY3R1YWxseSB1c2VkIGJ5IGEgY291cGxlIG9mIGJyb3dzZXJzIGludGVybmFsbHkuCiAgICAvLyBkb3duc2lkZSBpcyBpdCBhbHNvIGNvbnRhaW5zIGRvbWFpbnMgbGlrZSAiZHluZG5zLm9yZyIgLSB3aGljaCBpcyBmaW5lIGZvciB0aGUgc2VjdXJpdHkKICAgIC8vIGlzc3VlcyBicm93c2VyIGhhdmUgdG8gZGVhbCB3aXRoIChTT1AgZm9yIGNvb2tpZXMsIGV0YykgLSBidXQgaXMgd2F5IG92ZXJib2FyZCBmb3IgVVJJLmpzCiAgICAvLyAtLS0tCiAgICBsaXN0OiB7CiAgICAgICdhYyc6JyBjb20gZ292IG1pbCBuZXQgb3JnICcsCiAgICAgICdhZSc6JyBhYyBjbyBnb3YgbWlsIG5hbWUgbmV0IG9yZyBwcm8gc2NoICcsCiAgICAgICdhZic6JyBjb20gZWR1IGdvdiBuZXQgb3JnICcsCiAgICAgICdhbCc6JyBjb20gZWR1IGdvdiBtaWwgbmV0IG9yZyAnLAogICAgICAnYW8nOicgY28gZWQgZ3YgaXQgb2cgcGIgJywKICAgICAgJ2FyJzonIGNvbSBlZHUgZ29iIGdvdiBpbnQgbWlsIG5ldCBvcmcgdHVyICcsCiAgICAgICdhdCc6JyBhYyBjbyBndiBvciAnLAogICAgICAnYXUnOicgYXNuIGNvbSBjc2lybyBlZHUgZ292IGlkIG5ldCBvcmcgJywKICAgICAgJ2JhJzonIGNvIGNvbSBlZHUgZ292IG1pbCBuZXQgb3JnIHJzIHVuYmkgdW5tbyB1bnNhIHVudHogdW56ZSAnLAogICAgICAnYmInOicgYml6IGNvIGNvbSBlZHUgZ292IGluZm8gbmV0IG9yZyBzdG9yZSB0diAnLAogICAgICAnYmgnOicgYml6IGNjIGNvbSBlZHUgZ292IGluZm8gbmV0IG9yZyAnLAogICAgICAnYm4nOicgY29tIGVkdSBnb3YgbmV0IG9yZyAnLAogICAgICAnYm8nOicgY29tIGVkdSBnb2IgZ292IGludCBtaWwgbmV0IG9yZyB0diAnLAogICAgICAnYnInOicgYWRtIGFkdiBhZ3IgYW0gYXJxIGFydCBhdG8gYiBiaW8gYmxvZyBibWQgY2ltIGNuZyBjbnQgY29tIGNvb3AgZWNuIGVkdSBlbmcgZXNwIGV0YyBldGkgZmFyIGZsb2cgZm0gZm5kIGZvdCBmc3QgZzEyIGdnZiBnb3YgaW1iIGluZCBpbmYgam9yIGp1cyBsZWwgbWF0IG1lZCBtaWwgbXVzIG5ldCBub20gbm90IG50ciBvZG8gb3JnIHBwZyBwcm8gcHNjIHBzaSBxc2wgcmVjIHNsZyBzcnYgdG1wIHRyZCB0dXIgdHYgdmV0IHZsb2cgd2lraSB6bGcgJywKICAgICAgJ2JzJzonIGNvbSBlZHUgZ292IG5ldCBvcmcgJywKICAgICAgJ2J6JzonIGR1IGV0IG9tIG92IHJnICcsCiAgICAgICdjYSc6JyBhYiBiYyBtYiBuYiBuZiBubCBucyBudCBudSBvbiBwZSBxYyBzayB5ayAnLAogICAgICAnY2snOicgYml6IGNvIGVkdSBnZW4gZ292IGluZm8gbmV0IG9yZyAnLAogICAgICAnY24nOicgYWMgYWggYmogY29tIGNxIGVkdSBmaiBnZCBnb3YgZ3MgZ3ggZ3ogaGEgaGIgaGUgaGkgaGwgaG4gamwganMganggbG4gbWlsIG5ldCBubSBueCBvcmcgcWggc2Mgc2Qgc2ggc24gc3ggdGogdHcgeGogeHogeW4gemogJywKICAgICAgJ2NvJzonIGNvbSBlZHUgZ292IG1pbCBuZXQgbm9tIG9yZyAnLAogICAgICAnY3InOicgYWMgYyBjbyBlZCBmaSBnbyBvciBzYSAnLAogICAgICAnY3knOicgYWMgYml6IGNvbSBla2xvZ2VzIGdvdiBsdGQgbmFtZSBuZXQgb3JnIHBhcmxpYW1lbnQgcHJlc3MgcHJvIHRtICcsCiAgICAgICdkbyc6JyBhcnQgY29tIGVkdSBnb2IgZ292IG1pbCBuZXQgb3JnIHNsZCB3ZWIgJywKICAgICAgJ2R6JzonIGFydCBhc3NvIGNvbSBlZHUgZ292IG5ldCBvcmcgcG9sICcsCiAgICAgICdlYyc6JyBjb20gZWR1IGZpbiBnb3YgaW5mbyBtZWQgbWlsIG5ldCBvcmcgcHJvICcsCiAgICAgICdlZyc6JyBjb20gZWR1IGV1biBnb3YgbWlsIG5hbWUgbmV0IG9yZyBzY2kgJywKICAgICAgJ2VyJzonIGNvbSBlZHUgZ292IGluZCBtaWwgbmV0IG9yZyByb2NoZXN0IHcgJywKICAgICAgJ2VzJzonIGNvbSBlZHUgZ29iIG5vbSBvcmcgJywKICAgICAgJ2V0JzonIGJpeiBjb20gZWR1IGdvdiBpbmZvIG5hbWUgbmV0IG9yZyAnLAogICAgICAnZmonOicgYWMgYml6IGNvbSBpbmZvIG1pbCBuYW1lIG5ldCBvcmcgcHJvICcsCiAgICAgICdmayc6JyBhYyBjbyBnb3YgbmV0IG5vbSBvcmcgJywKICAgICAgJ2ZyJzonIGFzc28gY29tIGYgZ291diBub20gcHJkIHByZXNzZSB0bSAnLAogICAgICAnZ2cnOicgY28gbmV0IG9yZyAnLAogICAgICAnZ2gnOicgY29tIGVkdSBnb3YgbWlsIG9yZyAnLAogICAgICAnZ24nOicgYWMgY29tIGdvdiBuZXQgb3JnICcsCiAgICAgICdncic6JyBjb20gZWR1IGdvdiBtaWwgbmV0IG9yZyAnLAogICAgICAnZ3QnOicgY29tIGVkdSBnb2IgaW5kIG1pbCBuZXQgb3JnICcsCiAgICAgICdndSc6JyBjb20gZWR1IGdvdiBuZXQgb3JnICcsCiAgICAgICdoayc6JyBjb20gZWR1IGdvdiBpZHYgbmV0IG9yZyAnLAogICAgICAnaHUnOicgMjAwMCBhZ3JhciBib2x0IGNhc2lubyBjaXR5IGNvIGVyb3RpY2EgZXJvdGlrYSBmaWxtIGZvcnVtIGdhbWVzIGhvdGVsIGluZm8gaW5nYXRsYW4gam9nYXN6IGtvbnl2ZWxvIGxha2FzIG1lZGlhIG5ld3Mgb3JnIHByaXYgcmVrbGFtIHNleCBzaG9wIHNwb3J0IHN1bGkgc3pleCB0bSB0b3pzZGUgdXRhemFzIHZpZGVvICcsCiAgICAgICdpZCc6JyBhYyBjbyBnbyBtaWwgbmV0IG9yIHNjaCB3ZWIgJywKICAgICAgJ2lsJzonIGFjIGNvIGdvdiBpZGYgazEyIG11bmkgbmV0IG9yZyAnLAogICAgICAnaW4nOicgYWMgY28gZWR1IGVybmV0IGZpcm0gZ2VuIGdvdiBpIGluZCBtaWwgbmV0IG5pYyBvcmcgcmVzICcsCiAgICAgICdpcSc6JyBjb20gZWR1IGdvdiBpIG1pbCBuZXQgb3JnICcsCiAgICAgICdpcic6JyBhYyBjbyBkbnNzZWMgZ292IGkgaWQgbmV0IG9yZyBzY2ggJywKICAgICAgJ2l0JzonIGVkdSBnb3YgJywKICAgICAgJ2plJzonIGNvIG5ldCBvcmcgJywKICAgICAgJ2pvJzonIGNvbSBlZHUgZ292IG1pbCBuYW1lIG5ldCBvcmcgc2NoICcsCiAgICAgICdqcCc6JyBhYyBhZCBjbyBlZCBnbyBnciBsZyBuZSBvciAnLAogICAgICAna2UnOicgYWMgY28gZ28gaW5mbyBtZSBtb2JpIG5lIG9yIHNjICcsCiAgICAgICdraCc6JyBjb20gZWR1IGdvdiBtaWwgbmV0IG9yZyBwZXIgJywKICAgICAgJ2tpJzonIGJpeiBjb20gZGUgZWR1IGdvdiBpbmZvIG1vYiBuZXQgb3JnIHRlbCAnLAogICAgICAna20nOicgYXNzbyBjb20gY29vcCBlZHUgZ291diBrIG1lZGVjaW4gbWlsIG5vbSBub3RhaXJlcyBwaGFybWFjaWVucyBwcmVzc2UgdG0gdmV0ZXJpbmFpcmUgJywKICAgICAgJ2tuJzonIGVkdSBnb3YgbmV0IG9yZyAnLAogICAgICAna3InOicgYWMgYnVzYW4gY2h1bmdidWsgY2h1bmduYW0gY28gZGFlZ3UgZGFlamVvbiBlcyBnYW5nd29uIGdvIGd3YW5nanUgZ3llb25nYnVrIGd5ZW9uZ2dpIGd5ZW9uZ25hbSBocyBpbmNoZW9uIGplanUgamVvbmJ1ayBqZW9ubmFtIGsga2cgbWlsIG1zIG5lIG9yIHBlIHJlIHNjIHNlb3VsIHVsc2FuICcsCiAgICAgICdrdyc6JyBjb20gZWR1IGdvdiBuZXQgb3JnICcsCiAgICAgICdreSc6JyBjb20gZWR1IGdvdiBuZXQgb3JnICcsCiAgICAgICdreic6JyBjb20gZWR1IGdvdiBtaWwgbmV0IG9yZyAnLAogICAgICAnbGInOicgY29tIGVkdSBnb3YgbmV0IG9yZyAnLAogICAgICAnbGsnOicgYXNzbiBjb20gZWR1IGdvdiBncnAgaG90ZWwgaW50IGx0ZCBuZXQgbmdvIG9yZyBzY2ggc29jIHdlYiAnLAogICAgICAnbHInOicgY29tIGVkdSBnb3YgbmV0IG9yZyAnLAogICAgICAnbHYnOicgYXNuIGNvbSBjb25mIGVkdSBnb3YgaWQgbWlsIG5ldCBvcmcgJywKICAgICAgJ2x5JzonIGNvbSBlZHUgZ292IGlkIG1lZCBuZXQgb3JnIHBsYyBzY2ggJywKICAgICAgJ21hJzonIGFjIGNvIGdvdiBtIG5ldCBvcmcgcHJlc3MgJywKICAgICAgJ21jJzonIGFzc28gdG0gJywKICAgICAgJ21lJzonIGFjIGNvIGVkdSBnb3YgaXRzIG5ldCBvcmcgcHJpdiAnLAogICAgICAnbWcnOicgY29tIGVkdSBnb3YgbWlsIG5vbSBvcmcgcHJkIHRtICcsCiAgICAgICdtayc6JyBjb20gZWR1IGdvdiBpbmYgbmFtZSBuZXQgb3JnIHBybyAnLAogICAgICAnbWwnOicgY29tIGVkdSBnb3YgbmV0IG9yZyBwcmVzc2UgJywKICAgICAgJ21uJzonIGVkdSBnb3Ygb3JnICcsCiAgICAgICdtbyc6JyBjb20gZWR1IGdvdiBuZXQgb3JnICcsCiAgICAgICdtdCc6JyBjb20gZWR1IGdvdiBuZXQgb3JnICcsCiAgICAgICdtdic6JyBhZXJvIGJpeiBjb20gY29vcCBlZHUgZ292IGluZm8gaW50IG1pbCBtdXNldW0gbmFtZSBuZXQgb3JnIHBybyAnLAogICAgICAnbXcnOicgYWMgY28gY29tIGNvb3AgZWR1IGdvdiBpbnQgbXVzZXVtIG5ldCBvcmcgJywKICAgICAgJ214JzonIGNvbSBlZHUgZ29iIG5ldCBvcmcgJywKICAgICAgJ215JzonIGNvbSBlZHUgZ292IG1pbCBuYW1lIG5ldCBvcmcgc2NoICcsCiAgICAgICduZic6JyBhcnRzIGNvbSBmaXJtIGluZm8gbmV0IG90aGVyIHBlciByZWMgc3RvcmUgd2ViICcsCiAgICAgICduZyc6JyBiaXogY29tIGVkdSBnb3YgbWlsIG1vYmkgbmFtZSBuZXQgb3JnIHNjaCAnLAogICAgICAnbmknOicgYWMgY28gY29tIGVkdSBnb2IgbWlsIG5ldCBub20gb3JnICcsCiAgICAgICducCc6JyBjb20gZWR1IGdvdiBtaWwgbmV0IG9yZyAnLAogICAgICAnbnInOicgYml6IGNvbSBlZHUgZ292IGluZm8gbmV0IG9yZyAnLAogICAgICAnb20nOicgYWMgYml6IGNvIGNvbSBlZHUgZ292IG1lZCBtaWwgbXVzZXVtIG5ldCBvcmcgcHJvIHNjaCAnLAogICAgICAncGUnOicgY29tIGVkdSBnb2IgbWlsIG5ldCBub20gb3JnIHNsZCAnLAogICAgICAncGgnOicgY29tIGVkdSBnb3YgaSBtaWwgbmV0IG5nbyBvcmcgJywKICAgICAgJ3BrJzonIGJpeiBjb20gZWR1IGZhbSBnb2IgZ29rIGdvbiBnb3AgZ29zIGdvdiBuZXQgb3JnIHdlYiAnLAogICAgICAncGwnOicgYXJ0IGJpYWx5c3RvayBiaXogY29tIGVkdSBnZGEgZ2RhbnNrIGdvcnpvdyBnb3YgaW5mbyBrYXRvd2ljZSBrcmFrb3cgbG9keiBsdWJsaW4gbWlsIG5ldCBuZ28gb2xzenR5biBvcmcgcG96bmFuIHB3ciByYWRvbSBzbHVwc2sgc3pjemVjaW4gdG9ydW4gd2Fyc3phd2Egd2F3IHdyb2Mgd3JvY2xhdyB6Z29yYSAnLAogICAgICAncHInOicgYWMgYml6IGNvbSBlZHUgZXN0IGdvdiBpbmZvIGlzbGEgbmFtZSBuZXQgb3JnIHBybyBwcm9mICcsCiAgICAgICdwcyc6JyBjb20gZWR1IGdvdiBuZXQgb3JnIHBsbyBzZWMgJywKICAgICAgJ3B3JzonIGJlbGF1IGNvIGVkIGdvIG5lIG9yICcsCiAgICAgICdybyc6JyBhcnRzIGNvbSBmaXJtIGluZm8gbm9tIG50IG9yZyByZWMgc3RvcmUgdG0gd3d3ICcsCiAgICAgICdycyc6JyBhYyBjbyBlZHUgZ292IGluIG9yZyAnLAogICAgICAnc2InOicgY29tIGVkdSBnb3YgbmV0IG9yZyAnLAogICAgICAnc2MnOicgY29tIGVkdSBnb3YgbmV0IG9yZyAnLAogICAgICAnc2gnOicgY28gY29tIGVkdSBnb3YgbmV0IG5vbSBvcmcgJywKICAgICAgJ3NsJzonIGNvbSBlZHUgZ292IG5ldCBvcmcgJywKICAgICAgJ3N0JzonIGNvIGNvbSBjb25zdWxhZG8gZWR1IGVtYmFpeGFkYSBnb3YgbWlsIG5ldCBvcmcgcHJpbmNpcGUgc2FvdG9tZSBzdG9yZSAnLAogICAgICAnc3YnOicgY29tIGVkdSBnb2Igb3JnIHJlZCAnLAogICAgICAnc3onOicgYWMgY28gb3JnICcsCiAgICAgICd0cic6JyBhdiBiYnMgYmVsIGJpeiBjb20gZHIgZWR1IGdlbiBnb3YgaW5mbyBrMTIgbmFtZSBuZXQgb3JnIHBvbCB0ZWwgdHNrIHR2IHdlYiAnLAogICAgICAndHQnOicgYWVybyBiaXogY2F0IGNvIGNvbSBjb29wIGVkdSBnb3YgaW5mbyBpbnQgam9icyBtaWwgbW9iaSBtdXNldW0gbmFtZSBuZXQgb3JnIHBybyB0ZWwgdHJhdmVsICcsCiAgICAgICd0dyc6JyBjbHViIGNvbSBlYml6IGVkdSBnYW1lIGdvdiBpZHYgbWlsIG5ldCBvcmcgJywKICAgICAgJ211JzonIGFjIGNvIGNvbSBnb3YgbmV0IG9yIG9yZyAnLAogICAgICAnbXonOicgYWMgY28gZWR1IGdvdiBvcmcgJywKICAgICAgJ25hJzonIGNvIGNvbSAnLAogICAgICAnbnonOicgYWMgY28gY3JpIGdlZWsgZ2VuIGdvdnQgaGVhbHRoIGl3aSBtYW9yaSBtaWwgbmV0IG9yZyBwYXJsaWFtZW50IHNjaG9vbCAnLAogICAgICAncGEnOicgYWJvIGFjIGNvbSBlZHUgZ29iIGluZyBtZWQgbmV0IG5vbSBvcmcgc2xkICcsCiAgICAgICdwdCc6JyBjb20gZWR1IGdvdiBpbnQgbmV0IG5vbWUgb3JnIHB1YmwgJywKICAgICAgJ3B5JzonIGNvbSBlZHUgZ292IG1pbCBuZXQgb3JnICcsCiAgICAgICdxYSc6JyBjb20gZWR1IGdvdiBtaWwgbmV0IG9yZyAnLAogICAgICAncmUnOicgYXNzbyBjb20gbm9tICcsCiAgICAgICdydSc6JyBhYyBhZHlnZXlhIGFsdGFpIGFtdXIgYXJraGFuZ2Vsc2sgYXN0cmFraGFuIGJhc2hraXJpYSBiZWxnb3JvZCBiaXIgYnJ5YW5zayBidXJ5YXRpYSBjYmcgY2hlbCBjaGVseWFiaW5zayBjaGl0YSBjaHVrb3RrYSBjaHV2YXNoaWEgY29tIGRhZ2VzdGFuIGUtYnVyZyBlZHUgZ292IGdyb3pueSBpbnQgaXJrdXRzayBpdmFub3ZvIGl6aGV2c2sgamFyIGpvc2hrYXItb2xhIGthbG15a2lhIGthbHVnYSBrYW1jaGF0a2Ega2FyZWxpYSBrYXphbiBrY2hyIGtlbWVyb3ZvIGtoYWJhcm92c2sga2hha2Fzc2lhIGtodiBraXJvdiBrb2VuaWcga29taSBrb3N0cm9tYSBrcmFub3lhcnNrIGt1YmFuIGt1cmdhbiBrdXJzayBsaXBldHNrIG1hZ2FkYW4gbWFyaSBtYXJpLWVsIG1hcmluZSBtaWwgbW9yZG92aWEgbW9zcmVnIG1zayBtdXJtYW5zayBuYWxjaGlrIG5ldCBubm92IG5vdiBub3Zvc2liaXJzayBuc2sgb21zayBvcmVuYnVyZyBvcmcgb3J5b2wgcGVuemEgcGVybSBwcCBwc2tvdiBwdHogcm5kIHJ5YXphbiBzYWtoYWxpbiBzYW1hcmEgc2FyYXRvdiBzaW1iaXJzayBzbW9sZW5zayBzcGIgc3RhdnJvcG9sIHN0diBzdXJndXQgdGFtYm92IHRhdGFyc3RhbiB0b20gdG9tc2sgdHNhcml0c3luIHRzayB0dWxhIHR1dmEgdHZlciB0eXVtZW4gdWRtIHVkbXVydGlhIHVsYW4tdWRlIHZsYWRpa2F2a2F6IHZsYWRpbWlyIHZsYWRpdm9zdG9rIHZvbGdvZ3JhZCB2b2xvZ2RhIHZvcm9uZXpoIHZybiB2eWF0a2EgeWFrdXRpYSB5YW1hbCB5ZWthdGVyaW5idXJnIHl1emhuby1zYWtoYWxpbnNrICcsCiAgICAgICdydyc6JyBhYyBjbyBjb20gZWR1IGdvdXYgZ292IGludCBtaWwgbmV0ICcsCiAgICAgICdzYSc6JyBjb20gZWR1IGdvdiBtZWQgbmV0IG9yZyBwdWIgc2NoICcsCiAgICAgICdzZCc6JyBjb20gZWR1IGdvdiBpbmZvIG1lZCBuZXQgb3JnIHR2ICcsCiAgICAgICdzZSc6JyBhIGFjIGIgYmQgYyBkIGUgZiBnIGggaSBrIGwgbSBuIG8gb3JnIHAgcGFydGkgcHAgcHJlc3MgciBzIHQgdG0gdSB3IHggeSB6ICcsCiAgICAgICdzZyc6JyBjb20gZWR1IGdvdiBpZG4gbmV0IG9yZyBwZXIgJywKICAgICAgJ3NuJzonIGFydCBjb20gZWR1IGdvdXYgb3JnIHBlcnNvIHVuaXYgJywKICAgICAgJ3N5JzonIGNvbSBlZHUgZ292IG1pbCBuZXQgbmV3cyBvcmcgJywKICAgICAgJ3RoJzonIGFjIGNvIGdvIGluIG1pIG5ldCBvciAnLAogICAgICAndGonOicgYWMgYml6IGNvIGNvbSBlZHUgZ28gZ292IGluZm8gaW50IG1pbCBuYW1lIG5ldCBuaWMgb3JnIHRlc3Qgd2ViICcsCiAgICAgICd0bic6JyBhZ3JpbmV0IGNvbSBkZWZlbnNlIGVkdW5ldCBlbnMgZmluIGdvdiBpbmQgaW5mbyBpbnRsIG1pbmNvbSBuYXQgbmV0IG9yZyBwZXJzbyBybnJ0IHJucyBybnUgdG91cmlzbSAnLAogICAgICAndHonOicgYWMgY28gZ28gbmUgb3IgJywKICAgICAgJ3VhJzonIGJpeiBjaGVya2Fzc3kgY2hlcm5pZ292IGNoZXJub3Z0c3kgY2sgY24gY28gY29tIGNyaW1lYSBjdiBkbiBkbmVwcm9wZXRyb3ZzayBkb25ldHNrIGRwIGVkdSBnb3YgaWYgaW4gaXZhbm8tZnJhbmtpdnNrIGtoIGtoYXJrb3Yga2hlcnNvbiBraG1lbG5pdHNraXkga2lldiBraXJvdm9ncmFkIGttIGtyIGtzIGt2IGxnIGx1Z2Fuc2sgbHV0c2sgbHZpdiBtZSBtayBuZXQgbmlrb2xhZXYgb2Qgb2Rlc3NhIG9yZyBwbCBwb2x0YXZhIHBwIHJvdm5vIHJ2IHNlYmFzdG9wb2wgc3VteSB0ZSB0ZXJub3BpbCB1emhnb3JvZCB2aW5uaWNhIHZuIHphcG9yaXpoemhlIHpoaXRvbWlyIHpwIHp0ICcsCiAgICAgICd1Zyc6JyBhYyBjbyBnbyBuZSBvciBvcmcgc2MgJywKICAgICAgJ3VrJzonIGFjIGJsIGJyaXRpc2gtbGlicmFyeSBjbyBjeW0gZ292IGdvdnQgaWNuZXQgamV0IGxlYSBsdGQgbWUgbWlsIG1vZCBuYXRpb25hbC1saWJyYXJ5LXNjb3RsYW5kIG5lbCBuZXQgbmhzIG5pYyBubHMgb3JnIG9yZ24gcGFybGlhbWVudCBwbGMgcG9saWNlIHNjaCBzY290IHNvYyAnLAogICAgICAndXMnOicgZG5pIGZlZCBpc2Ega2lkcyBuc24gJywKICAgICAgJ3V5JzonIGNvbSBlZHUgZ3ViIG1pbCBuZXQgb3JnICcsCiAgICAgICd2ZSc6JyBjbyBjb20gZWR1IGdvYiBpbmZvIG1pbCBuZXQgb3JnIHdlYiAnLAogICAgICAndmknOicgY28gY29tIGsxMiBuZXQgb3JnICcsCiAgICAgICd2bic6JyBhYyBiaXogY29tIGVkdSBnb3YgaGVhbHRoIGluZm8gaW50IG5hbWUgbmV0IG9yZyBwcm8gJywKICAgICAgJ3llJzonIGNvIGNvbSBnb3YgbHRkIG1lIG5ldCBvcmcgcGxjICcsCiAgICAgICd5dSc6JyBhYyBjbyBlZHUgZ292IG9yZyAnLAogICAgICAnemEnOicgYWMgYWdyaWMgYWx0IGJvdXJzZSBjaXR5IGNvIGN5YmVybmV0IGRiIGVkdSBnb3YgZ3JvbmRhciBpYWNjZXNzIGltdCBpbmNhIGxhbmRlc2lnbiBsYXcgbWlsIG5ldCBuZ28gbmlzIG5vbSBvbGl2ZXR0aSBvcmcgcGl4IHNjaG9vbCB0bSB3ZWIgJywKICAgICAgJ3ptJzonIGFjIGNvIGNvbSBlZHUgZ292IG5ldCBvcmcgc2NoICcKICAgIH0sCiAgICAvLyBnb3JoaWxsIDIwMTMtMTAtMjU6IFVzaW5nIGluZGV4T2YoKSBpbnN0ZWFkIFJlZ2V4cCgpLiBTaWduaWZpY2FudCBib29zdAogICAgLy8gaW4gYm90aCBwZXJmb3JtYW5jZSBhbmQgbWVtb3J5IGZvb3RwcmludC4gTm8gaW5pdGlhbGl6YXRpb24gcmVxdWlyZWQuCiAgICAvLyBodHRwOi8vanNwZXJmLmNvbS91cmktanMtc2xkLXJlZ2V4LXZzLWJpbmFyeS1zZWFyY2gvNAogICAgLy8gRm9sbG93aW5nIG1ldGhvZHMgdXNlIGxhc3RJbmRleE9mKCkgcmF0aGVyIHRoYW4gYXJyYXkuc3BsaXQoKSBpbiBvcmRlcgogICAgLy8gdG8gYXZvaWQgYW55IG1lbW9yeSBhbGxvY2F0aW9ucy4KICAgIGhhczogZnVuY3Rpb24oZG9tYWluKSB7CiAgICAgIHZhciB0bGRPZmZzZXQgPSBkb21haW4ubGFzdEluZGV4T2YoJy4nKTsKICAgICAgaWYgKHRsZE9mZnNldCA8PSAwIHx8IHRsZE9mZnNldCA+PSAoZG9tYWluLmxlbmd0aC0xKSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgICB2YXIgc2xkT2Zmc2V0ID0gZG9tYWluLmxhc3RJbmRleE9mKCcuJywgdGxkT2Zmc2V0LTEpOwogICAgICBpZiAoc2xkT2Zmc2V0IDw9IDAgfHwgc2xkT2Zmc2V0ID49ICh0bGRPZmZzZXQtMSkpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgICAgdmFyIHNsZExpc3QgPSBTTEQubGlzdFtkb21haW4uc2xpY2UodGxkT2Zmc2V0KzEpXTsKICAgICAgaWYgKCFzbGRMaXN0KSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICAgIHJldHVybiBzbGRMaXN0LmluZGV4T2YoJyAnICsgZG9tYWluLnNsaWNlKHNsZE9mZnNldCsxLCB0bGRPZmZzZXQpICsgJyAnKSA+PSAwOwogICAgfSwKICAgIGlzOiBmdW5jdGlvbihkb21haW4pIHsKICAgICAgdmFyIHRsZE9mZnNldCA9IGRvbWFpbi5sYXN0SW5kZXhPZignLicpOwogICAgICBpZiAodGxkT2Zmc2V0IDw9IDAgfHwgdGxkT2Zmc2V0ID49IChkb21haW4ubGVuZ3RoLTEpKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICAgIHZhciBzbGRPZmZzZXQgPSBkb21haW4ubGFzdEluZGV4T2YoJy4nLCB0bGRPZmZzZXQtMSk7CiAgICAgIGlmIChzbGRPZmZzZXQgPj0gMCkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgICB2YXIgc2xkTGlzdCA9IFNMRC5saXN0W2RvbWFpbi5zbGljZSh0bGRPZmZzZXQrMSldOwogICAgICBpZiAoIXNsZExpc3QpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgICAgcmV0dXJuIHNsZExpc3QuaW5kZXhPZignICcgKyBkb21haW4uc2xpY2UoMCwgdGxkT2Zmc2V0KSArICcgJykgPj0gMDsKICAgIH0sCiAgICBnZXQ6IGZ1bmN0aW9uKGRvbWFpbikgewogICAgICB2YXIgdGxkT2Zmc2V0ID0gZG9tYWluLmxhc3RJbmRleE9mKCcuJyk7CiAgICAgIGlmICh0bGRPZmZzZXQgPD0gMCB8fCB0bGRPZmZzZXQgPj0gKGRvbWFpbi5sZW5ndGgtMSkpIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQogICAgICB2YXIgc2xkT2Zmc2V0ID0gZG9tYWluLmxhc3RJbmRleE9mKCcuJywgdGxkT2Zmc2V0LTEpOwogICAgICBpZiAoc2xkT2Zmc2V0IDw9IDAgfHwgc2xkT2Zmc2V0ID49ICh0bGRPZmZzZXQtMSkpIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQogICAgICB2YXIgc2xkTGlzdCA9IFNMRC5saXN0W2RvbWFpbi5zbGljZSh0bGRPZmZzZXQrMSldOwogICAgICBpZiAoIXNsZExpc3QpIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQogICAgICBpZiAoc2xkTGlzdC5pbmRleE9mKCcgJyArIGRvbWFpbi5zbGljZShzbGRPZmZzZXQrMSwgdGxkT2Zmc2V0KSArICcgJykgPCAwKSB7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0KICAgICAgcmV0dXJuIGRvbWFpbi5zbGljZShzbGRPZmZzZXQrMSk7CiAgICB9LAogICAgbm9Db25mbGljdDogZnVuY3Rpb24oKXsKICAgICAgaWYgKHJvb3QuU2Vjb25kTGV2ZWxEb21haW5zID09PSB0aGlzKSB7CiAgICAgICAgcm9vdC5TZWNvbmRMZXZlbERvbWFpbnMgPSBfU2Vjb25kTGV2ZWxEb21haW5zOwogICAgICB9CiAgICAgIHJldHVybiB0aGlzOwogICAgfQogIH07CgogIHJldHVybiBTTEQ7Cn0pKTsKCn0se31dLDQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovKiEKICogVVJJLmpzIC0gTXV0YXRpbmcgVVJMcwogKgogKiBWZXJzaW9uOiAxLjE4LjEKICoKICogQXV0aG9yOiBSb2RuZXkgUmVobQogKiBXZWI6IGh0dHA6Ly9tZWRpYWxpemUuZ2l0aHViLmlvL1VSSS5qcy8KICoKICogTGljZW5zZWQgdW5kZXIKICogICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlCiAqCiAqLwooZnVuY3Rpb24gKHJvb3QsIGZhY3RvcnkpIHsKICAndXNlIHN0cmljdCc7CiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3VtZGpzL3VtZC9ibG9iL21hc3Rlci9yZXR1cm5FeHBvcnRzLmpzCiAgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JykgewogICAgLy8gTm9kZQogICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJy4vcHVueWNvZGUnKSwgcmVxdWlyZSgnLi9JUHY2JyksIHJlcXVpcmUoJy4vU2Vjb25kTGV2ZWxEb21haW5zJykpOwogIH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAvLyBBTUQuIFJlZ2lzdGVyIGFzIGFuIGFub255bW91cyBtb2R1bGUuCiAgICBkZWZpbmUoWycuL3B1bnljb2RlJywgJy4vSVB2NicsICcuL1NlY29uZExldmVsRG9tYWlucyddLCBmYWN0b3J5KTsKICB9IGVsc2UgewogICAgLy8gQnJvd3NlciBnbG9iYWxzIChyb290IGlzIHdpbmRvdykKICAgIHJvb3QuVVJJID0gZmFjdG9yeShyb290LnB1bnljb2RlLCByb290LklQdjYsIHJvb3QuU2Vjb25kTGV2ZWxEb21haW5zLCByb290KTsKICB9Cn0odGhpcywgZnVuY3Rpb24gKHB1bnljb2RlLCBJUHY2LCBTTEQsIHJvb3QpIHsKICAndXNlIHN0cmljdCc7CiAgLypnbG9iYWwgbG9jYXRpb24sIGVzY2FwZSwgdW5lc2NhcGUgKi8KICAvLyBGSVhNRTogdjIuMC4wIHJlbmFtY2Ugbm9uLWNhbWVsQ2FzZSBwcm9wZXJ0aWVzIHRvIHVwcGVyY2FzZQogIC8qanNoaW50IGNhbWVsY2FzZTogZmFsc2UgKi8KCiAgLy8gc2F2ZSBjdXJyZW50IFVSSSB2YXJpYWJsZSwgaWYgYW55CiAgdmFyIF9VUkkgPSByb290ICYmIHJvb3QuVVJJOwoKICBmdW5jdGlvbiBVUkkodXJsLCBiYXNlKSB7CiAgICB2YXIgX3VybFN1cHBsaWVkID0gYXJndW1lbnRzLmxlbmd0aCA+PSAxOwogICAgdmFyIF9iYXNlU3VwcGxpZWQgPSBhcmd1bWVudHMubGVuZ3RoID49IDI7CgogICAgLy8gQWxsb3cgaW5zdGFudGlhdGlvbiB3aXRob3V0IHRoZSAnbmV3JyBrZXl3b3JkCiAgICBpZiAoISh0aGlzIGluc3RhbmNlb2YgVVJJKSkgewogICAgICBpZiAoX3VybFN1cHBsaWVkKSB7CiAgICAgICAgaWYgKF9iYXNlU3VwcGxpZWQpIHsKICAgICAgICAgIHJldHVybiBuZXcgVVJJKHVybCwgYmFzZSk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gbmV3IFVSSSh1cmwpOwogICAgICB9CgogICAgICByZXR1cm4gbmV3IFVSSSgpOwogICAgfQoKICAgIGlmICh1cmwgPT09IHVuZGVmaW5lZCkgewogICAgICBpZiAoX3VybFN1cHBsaWVkKSB7CiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigndW5kZWZpbmVkIGlzIG5vdCBhIHZhbGlkIGFyZ3VtZW50IGZvciBVUkknKTsKICAgICAgfQoKICAgICAgaWYgKHR5cGVvZiBsb2NhdGlvbiAhPT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICB1cmwgPSBsb2NhdGlvbi5ocmVmICsgJyc7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdXJsID0gJyc7CiAgICAgIH0KICAgIH0KCiAgICB0aGlzLmhyZWYodXJsKTsKCiAgICAvLyByZXNvbHZlIHRvIGJhc2UgYWNjb3JkaW5nIHRvIGh0dHA6Ly9kdmNzLnczLm9yZy9oZy91cmwvcmF3LWZpbGUvdGlwL092ZXJ2aWV3Lmh0bWwjY29uc3RydWN0b3IKICAgIGlmIChiYXNlICE9PSB1bmRlZmluZWQpIHsKICAgICAgcmV0dXJuIHRoaXMuYWJzb2x1dGVUbyhiYXNlKTsKICAgIH0KCiAgICByZXR1cm4gdGhpczsKICB9CgogIFVSSS52ZXJzaW9uID0gJzEuMTguMSc7CgogIHZhciBwID0gVVJJLnByb3RvdHlwZTsKICB2YXIgaGFzT3duID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTsKCiAgZnVuY3Rpb24gZXNjYXBlUmVnRXgoc3RyaW5nKSB7CiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vbWVkaWFsaXplL1VSSS5qcy9jb21taXQvODVhYzIxNzgzYzExZjhjY2FiMDYxMDZkYmE5NzM1YTMxYTg2OTI0ZCNjb21taXRjb21tZW50LTgyMTk2MwogICAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC8oWy4qKz9ePSE6JHt9KCl8W1xdXC9cXF0pL2csICdcXCQxJyk7CiAgfQoKICBmdW5jdGlvbiBnZXRUeXBlKHZhbHVlKSB7CiAgICAvLyBJRTggZG9lc24ndCByZXR1cm4gW09iamVjdCBVbmRlZmluZWRdIGJ1dCBbT2JqZWN0IE9iamVjdF0gZm9yIHVuZGVmaW5lZCB2YWx1ZQogICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHsKICAgICAgcmV0dXJuICdVbmRlZmluZWQnOwogICAgfQoKICAgIHJldHVybiBTdHJpbmcoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKSkuc2xpY2UoOCwgLTEpOwogIH0KCiAgZnVuY3Rpb24gaXNBcnJheShvYmopIHsKICAgIHJldHVybiBnZXRUeXBlKG9iaikgPT09ICdBcnJheSc7CiAgfQoKICBmdW5jdGlvbiBmaWx0ZXJBcnJheVZhbHVlcyhkYXRhLCB2YWx1ZSkgewogICAgdmFyIGxvb2t1cCA9IHt9OwogICAgdmFyIGksIGxlbmd0aDsKCiAgICBpZiAoZ2V0VHlwZSh2YWx1ZSkgPT09ICdSZWdFeHAnKSB7CiAgICAgIGxvb2t1cCA9IG51bGw7CiAgICB9IGVsc2UgaWYgKGlzQXJyYXkodmFsdWUpKSB7CiAgICAgIGZvciAoaSA9IDAsIGxlbmd0aCA9IHZhbHVlLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAgICAgICAgbG9va3VwW3ZhbHVlW2ldXSA9IHRydWU7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIGxvb2t1cFt2YWx1ZV0gPSB0cnVlOwogICAgfQoKICAgIGZvciAoaSA9IDAsIGxlbmd0aCA9IGRhdGEubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgLypqc2hpbnQgbGF4YnJlYWs6IHRydWUgKi8KICAgICAgdmFyIF9tYXRjaCA9IGxvb2t1cCAmJiBsb29rdXBbZGF0YVtpXV0gIT09IHVuZGVmaW5lZAogICAgICAgIHx8ICFsb29rdXAgJiYgdmFsdWUudGVzdChkYXRhW2ldKTsKICAgICAgLypqc2hpbnQgbGF4YnJlYWs6IGZhbHNlICovCiAgICAgIGlmIChfbWF0Y2gpIHsKICAgICAgICBkYXRhLnNwbGljZShpLCAxKTsKICAgICAgICBsZW5ndGgtLTsKICAgICAgICBpLS07CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gZGF0YTsKICB9CgogIGZ1bmN0aW9uIGFycmF5Q29udGFpbnMobGlzdCwgdmFsdWUpIHsKICAgIHZhciBpLCBsZW5ndGg7CgogICAgLy8gdmFsdWUgbWF5IGJlIHN0cmluZywgbnVtYmVyLCBhcnJheSwgcmVnZXhwCiAgICBpZiAoaXNBcnJheSh2YWx1ZSkpIHsKICAgICAgLy8gTm90ZTogdGhpcyBjYW4gYmUgb3B0aW1pemVkIHRvIE8obikgKGluc3RlYWQgb2YgY3VycmVudCBPKG0gKiBuKSkKICAgICAgZm9yIChpID0gMCwgbGVuZ3RoID0gdmFsdWUubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgICBpZiAoIWFycmF5Q29udGFpbnMobGlzdCwgdmFsdWVbaV0pKSB7CiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICB2YXIgX3R5cGUgPSBnZXRUeXBlKHZhbHVlKTsKICAgIGZvciAoaSA9IDAsIGxlbmd0aCA9IGxpc3QubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgaWYgKF90eXBlID09PSAnUmVnRXhwJykgewogICAgICAgIGlmICh0eXBlb2YgbGlzdFtpXSA9PT0gJ3N0cmluZycgJiYgbGlzdFtpXS5tYXRjaCh2YWx1ZSkpIHsKICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0KICAgICAgfSBlbHNlIGlmIChsaXN0W2ldID09PSB2YWx1ZSkgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CiAgICB9CgogICAgcmV0dXJuIGZhbHNlOwogIH0KCiAgZnVuY3Rpb24gYXJyYXlzRXF1YWwob25lLCB0d28pIHsKICAgIGlmICghaXNBcnJheShvbmUpIHx8ICFpc0FycmF5KHR3bykpIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQoKICAgIC8vIGFycmF5cyBjYW4ndCBiZSBlcXVhbCBpZiB0aGV5IGhhdmUgZGlmZmVyZW50IGFtb3VudCBvZiBjb250ZW50CiAgICBpZiAob25lLmxlbmd0aCAhPT0gdHdvLmxlbmd0aCkgewogICAgICByZXR1cm4gZmFsc2U7CiAgICB9CgogICAgb25lLnNvcnQoKTsKICAgIHR3by5zb3J0KCk7CgogICAgZm9yICh2YXIgaSA9IDAsIGwgPSBvbmUubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgIGlmIChvbmVbaV0gIT09IHR3b1tpXSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgfQoKICAgIHJldHVybiB0cnVlOwogIH0KCiAgZnVuY3Rpb24gdHJpbVNsYXNoZXModGV4dCkgewogICAgdmFyIHRyaW1fZXhwcmVzc2lvbiA9IC9eXC8rfFwvKyQvZzsKICAgIHJldHVybiB0ZXh0LnJlcGxhY2UodHJpbV9leHByZXNzaW9uLCAnJyk7CiAgfQoKICBVUkkuX3BhcnRzID0gZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gewogICAgICBwcm90b2NvbDogbnVsbCwKICAgICAgdXNlcm5hbWU6IG51bGwsCiAgICAgIHBhc3N3b3JkOiBudWxsLAogICAgICBob3N0bmFtZTogbnVsbCwKICAgICAgdXJuOiBudWxsLAogICAgICBwb3J0OiBudWxsLAogICAgICBwYXRoOiBudWxsLAogICAgICBxdWVyeTogbnVsbCwKICAgICAgZnJhZ21lbnQ6IG51bGwsCiAgICAgIC8vIHN0YXRlCiAgICAgIGR1cGxpY2F0ZVF1ZXJ5UGFyYW1ldGVyczogVVJJLmR1cGxpY2F0ZVF1ZXJ5UGFyYW1ldGVycywKICAgICAgZXNjYXBlUXVlcnlTcGFjZTogVVJJLmVzY2FwZVF1ZXJ5U3BhY2UKICAgIH07CiAgfTsKICAvLyBzdGF0ZTogYWxsb3cgZHVwbGljYXRlIHF1ZXJ5IHBhcmFtZXRlcnMgKGE9MSZhPTEpCiAgVVJJLmR1cGxpY2F0ZVF1ZXJ5UGFyYW1ldGVycyA9IGZhbHNlOwogIC8vIHN0YXRlOiByZXBsYWNlcyArIHdpdGggJTIwIChzcGFjZSBpbiBxdWVyeSBzdHJpbmdzKQogIFVSSS5lc2NhcGVRdWVyeVNwYWNlID0gdHJ1ZTsKICAvLyBzdGF0aWMgcHJvcGVydGllcwogIFVSSS5wcm90b2NvbF9leHByZXNzaW9uID0gL15bYS16XVthLXowLTkuKy1dKiQvaTsKICBVUkkuaWRuX2V4cHJlc3Npb24gPSAvW15hLXowLTlcLi1dL2k7CiAgVVJJLnB1bnljb2RlX2V4cHJlc3Npb24gPSAvKHhuLS0pL2k7CiAgLy8gd2VsbCwgMzMzLjQ0NC41NTUuNjY2IG1hdGNoZXMsIGJ1dCBpdCBzdXJlIGFpbid0IG5vIElQdjQgLSBkbyB3ZSBjYXJlPwogIFVSSS5pcDRfZXhwcmVzc2lvbiA9IC9eXGR7MSwzfVwuXGR7MSwzfVwuXGR7MSwzfVwuXGR7MSwzfSQvOwogIC8vIGNyZWRpdHMgdG8gUmljaCBCcm93bgogIC8vIHNvdXJjZTogaHR0cDovL2ZvcnVtcy5pbnRlcm1hcHBlci5jb20vdmlld3RvcGljLnBocD9wPTEwOTYjMTA5NgogIC8vIHNwZWNpZmljYXRpb246IGh0dHA6Ly93d3cuaWV0Zi5vcmcvcmZjL3JmYzQyOTEudHh0CiAgVVJJLmlwNl9leHByZXNzaW9uID0gL15ccyooKChbMC05QS1GYS1mXXsxLDR9Oil7N30oWzAtOUEtRmEtZl17MSw0fXw6KSl8KChbMC05QS1GYS1mXXsxLDR9Oil7Nn0oOlswLTlBLUZhLWZdezEsNH18KCgyNVswLTVdfDJbMC00XVxkfDFcZFxkfFsxLTldP1xkKShcLigyNVswLTVdfDJbMC00XVxkfDFcZFxkfFsxLTldP1xkKSl7M30pfDopKXwoKFswLTlBLUZhLWZdezEsNH06KXs1fSgoKDpbMC05QS1GYS1mXXsxLDR9KXsxLDJ9KXw6KCgyNVswLTVdfDJbMC00XVxkfDFcZFxkfFsxLTldP1xkKShcLigyNVswLTVdfDJbMC00XVxkfDFcZFxkfFsxLTldP1xkKSl7M30pfDopKXwoKFswLTlBLUZhLWZdezEsNH06KXs0fSgoKDpbMC05QS1GYS1mXXsxLDR9KXsxLDN9KXwoKDpbMC05QS1GYS1mXXsxLDR9KT86KCgyNVswLTVdfDJbMC00XVxkfDFcZFxkfFsxLTldP1xkKShcLigyNVswLTVdfDJbMC00XVxkfDFcZFxkfFsxLTldP1xkKSl7M30pKXw6KSl8KChbMC05QS1GYS1mXXsxLDR9Oil7M30oKCg6WzAtOUEtRmEtZl17MSw0fSl7MSw0fSl8KCg6WzAtOUEtRmEtZl17MSw0fSl7MCwyfTooKDI1WzAtNV18MlswLTRdXGR8MVxkXGR8WzEtOV0/XGQpKFwuKDI1WzAtNV18MlswLTRdXGR8MVxkXGR8WzEtOV0/XGQpKXszfSkpfDopKXwoKFswLTlBLUZhLWZdezEsNH06KXsyfSgoKDpbMC05QS1GYS1mXXsxLDR9KXsxLDV9KXwoKDpbMC05QS1GYS1mXXsxLDR9KXswLDN9OigoMjVbMC01XXwyWzAtNF1cZHwxXGRcZHxbMS05XT9cZCkoXC4oMjVbMC01XXwyWzAtNF1cZHwxXGRcZHxbMS05XT9cZCkpezN9KSl8OikpfCgoWzAtOUEtRmEtZl17MSw0fTopezF9KCgoOlswLTlBLUZhLWZdezEsNH0pezEsNn0pfCgoOlswLTlBLUZhLWZdezEsNH0pezAsNH06KCgyNVswLTVdfDJbMC00XVxkfDFcZFxkfFsxLTldP1xkKShcLigyNVswLTVdfDJbMC00XVxkfDFcZFxkfFsxLTldP1xkKSl7M30pKXw6KSl8KDooKCg6WzAtOUEtRmEtZl17MSw0fSl7MSw3fSl8KCg6WzAtOUEtRmEtZl17MSw0fSl7MCw1fTooKDI1WzAtNV18MlswLTRdXGR8MVxkXGR8WzEtOV0/XGQpKFwuKDI1WzAtNV18MlswLTRdXGR8MVxkXGR8WzEtOV0/XGQpKXszfSkpfDopKSkoJS4rKT9ccyokLzsKICAvLyBleHByZXNzaW9uIHVzZWQgaXMgImdydWJlciByZXZpc2VkIiAoQGdydWJlciB2MikgZGV0ZXJtaW5lZCB0byBiZSB0aGUKICAvLyBiZXN0IHNvbHV0aW9uIGluIGEgcmVnZXgtZ29sZiB3ZSBkaWQgYSBjb3VwbGUgb2YgYWdlcyBhZ28gYXQKICAvLyAqIGh0dHA6Ly9tYXRoaWFzYnluZW5zLmJlL2RlbW8vdXJsLXJlZ2V4CiAgLy8gKiBodHRwOi8vcm9kbmV5cmVobS5kZS90L3VybC1yZWdleC5odG1sCiAgVVJJLmZpbmRfdXJpX2V4cHJlc3Npb24gPSAvXGIoKD86W2Etel1bXHctXSs6KD86XC97MSwzfXxbYS16MC05JV0pfHd3d1xkezAsM31bLl18W2EtejAtOS5cLV0rWy5dW2Etel17Miw0fVwvKSg/OlteXHMoKTw+XSt8XCgoW15ccygpPD5dK3woXChbXlxzKCk8Pl0rXCkpKSpcKSkrKD86XCgoW15ccygpPD5dK3woXChbXlxzKCk8Pl0rXCkpKSpcKXxbXlxzYCEoKVxbXF17fTs6JyIuLDw+P8KrwrvigJzigJ3igJjigJldKSkvaWc7CiAgVVJJLmZpbmRVcmkgPSB7CiAgICAvLyB2YWxpZCAic2NoZW1lOi8vIiBvciAid3d3LiIKICAgIHN0YXJ0OiAvXGIoPzooW2Etel1bYS16MC05ListXSo6XC9cLyl8d3d3XC4pL2dpLAogICAgLy8gZXZlcnl0aGluZyB1cCB0byB0aGUgbmV4dCB3aGl0ZXNwYWNlCiAgICBlbmQ6IC9bXHNcclxuXXwkLywKICAgIC8vIHRyaW0gdHJhaWxpbmcgcHVuY3R1YXRpb24gY2FwdHVyZWQgYnkgZW5kIFJlZ0V4cAogICAgdHJpbTogL1tgISgpXFtcXXt9OzonIi4sPD4/wqvCu+KAnOKAneKAnuKAmOKAmV0rJC8KICB9OwogIC8vIGh0dHA6Ly93d3cuaWFuYS5vcmcvYXNzaWdubWVudHMvdXJpLXNjaGVtZXMuaHRtbAogIC8vIGh0dHA6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTGlzdF9vZl9UQ1BfYW5kX1VEUF9wb3J0X251bWJlcnMjV2VsbC1rbm93bl9wb3J0cwogIFVSSS5kZWZhdWx0UG9ydHMgPSB7CiAgICBodHRwOiAnODAnLAogICAgaHR0cHM6ICc0NDMnLAogICAgZnRwOiAnMjEnLAogICAgZ29waGVyOiAnNzAnLAogICAgd3M6ICc4MCcsCiAgICB3c3M6ICc0NDMnCiAgfTsKICAvLyBhbGxvd2VkIGhvc3RuYW1lIGNoYXJhY3RlcnMgYWNjb3JkaW5nIHRvIFJGQyAzOTg2CiAgLy8gQUxQSEEgRElHSVQgIi0iICIuIiAiXyIgIn4iICIhIiAiJCIgIiYiICInIiAiKCIgIikiICIqIiAiKyIgIiwiICI7IiAiPSIgJWVuY29kZWQKICAvLyBJJ3ZlIG5ldmVyIHNlZW4gYSAobm9uLUlETikgaG9zdG5hbWUgb3RoZXIgdGhhbjogQUxQSEEgRElHSVQgLiAtCiAgVVJJLmludmFsaWRfaG9zdG5hbWVfY2hhcmFjdGVycyA9IC9bXmEtekEtWjAtOVwuLV0vOwogIC8vIG1hcCBET00gRWxlbWVudHMgdG8gdGhlaXIgVVJJIGF0dHJpYnV0ZQogIFVSSS5kb21BdHRyaWJ1dGVzID0gewogICAgJ2EnOiAnaHJlZicsCiAgICAnYmxvY2txdW90ZSc6ICdjaXRlJywKICAgICdsaW5rJzogJ2hyZWYnLAogICAgJ2Jhc2UnOiAnaHJlZicsCiAgICAnc2NyaXB0JzogJ3NyYycsCiAgICAnZm9ybSc6ICdhY3Rpb24nLAogICAgJ2ltZyc6ICdzcmMnLAogICAgJ2FyZWEnOiAnaHJlZicsCiAgICAnaWZyYW1lJzogJ3NyYycsCiAgICAnZW1iZWQnOiAnc3JjJywKICAgICdzb3VyY2UnOiAnc3JjJywKICAgICd0cmFjayc6ICdzcmMnLAogICAgJ2lucHV0JzogJ3NyYycsIC8vIGJ1dCBvbmx5IGlmIHR5cGU9ImltYWdlIgogICAgJ2F1ZGlvJzogJ3NyYycsCiAgICAndmlkZW8nOiAnc3JjJwogIH07CiAgVVJJLmdldERvbUF0dHJpYnV0ZSA9IGZ1bmN0aW9uKG5vZGUpIHsKICAgIGlmICghbm9kZSB8fCAhbm9kZS5ub2RlTmFtZSkgewogICAgICByZXR1cm4gdW5kZWZpbmVkOwogICAgfQoKICAgIHZhciBub2RlTmFtZSA9IG5vZGUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTsKICAgIC8vIDxpbnB1dD4gc2hvdWxkIG9ubHkgZXhwb3NlIHNyYyBmb3IgdHlwZT0iaW1hZ2UiCiAgICBpZiAobm9kZU5hbWUgPT09ICdpbnB1dCcgJiYgbm9kZS50eXBlICE9PSAnaW1hZ2UnKSB7CiAgICAgIHJldHVybiB1bmRlZmluZWQ7CiAgICB9CgogICAgcmV0dXJuIFVSSS5kb21BdHRyaWJ1dGVzW25vZGVOYW1lXTsKICB9OwoKICBmdW5jdGlvbiBlc2NhcGVGb3JEdW1iRmlyZWZveDM2KHZhbHVlKSB7CiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vbWVkaWFsaXplL1VSSS5qcy9pc3N1ZXMvOTEKICAgIHJldHVybiBlc2NhcGUodmFsdWUpOwogIH0KCiAgLy8gZW5jb2RpbmcgLyBkZWNvZGluZyBhY2NvcmRpbmcgdG8gUkZDMzk4NgogIGZ1bmN0aW9uIHN0cmljdEVuY29kZVVSSUNvbXBvbmVudChzdHJpbmcpIHsKICAgIC8vIHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL2VuY29kZVVSSUNvbXBvbmVudAogICAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmcpCiAgICAgIC5yZXBsYWNlKC9bIScoKSpdL2csIGVzY2FwZUZvckR1bWJGaXJlZm94MzYpCiAgICAgIC5yZXBsYWNlKC9cKi9nLCAnJTJBJyk7CiAgfQogIFVSSS5lbmNvZGUgPSBzdHJpY3RFbmNvZGVVUklDb21wb25lbnQ7CiAgVVJJLmRlY29kZSA9IGRlY29kZVVSSUNvbXBvbmVudDsKICBVUkkuaXNvODg1OSA9IGZ1bmN0aW9uKCkgewogICAgVVJJLmVuY29kZSA9IGVzY2FwZTsKICAgIFVSSS5kZWNvZGUgPSB1bmVzY2FwZTsKICB9OwogIFVSSS51bmljb2RlID0gZnVuY3Rpb24oKSB7CiAgICBVUkkuZW5jb2RlID0gc3RyaWN0RW5jb2RlVVJJQ29tcG9uZW50OwogICAgVVJJLmRlY29kZSA9IGRlY29kZVVSSUNvbXBvbmVudDsKICB9OwogIFVSSS5jaGFyYWN0ZXJzID0gewogICAgcGF0aG5hbWU6IHsKICAgICAgZW5jb2RlOiB7CiAgICAgICAgLy8gUkZDMzk4NiAyLjE6IEZvciBjb25zaXN0ZW5jeSwgVVJJIHByb2R1Y2VycyBhbmQgbm9ybWFsaXplcnMgc2hvdWxkCiAgICAgICAgLy8gdXNlIHVwcGVyY2FzZSBoZXhhZGVjaW1hbCBkaWdpdHMgZm9yIGFsbCBwZXJjZW50LWVuY29kaW5ncy4KICAgICAgICBleHByZXNzaW9uOiAvJSgyNHwyNnwyQnwyQ3wzQnwzRHwzQXw0MCkvaWcsCiAgICAgICAgbWFwOiB7CiAgICAgICAgICAvLyAtLl9+IScoKSoKICAgICAgICAgICclMjQnOiAnJCcsCiAgICAgICAgICAnJTI2JzogJyYnLAogICAgICAgICAgJyUyQic6ICcrJywKICAgICAgICAgICclMkMnOiAnLCcsCiAgICAgICAgICAnJTNCJzogJzsnLAogICAgICAgICAgJyUzRCc6ICc9JywKICAgICAgICAgICclM0EnOiAnOicsCiAgICAgICAgICAnJTQwJzogJ0AnCiAgICAgICAgfQogICAgICB9LAogICAgICBkZWNvZGU6IHsKICAgICAgICBleHByZXNzaW9uOiAvW1wvXD8jXS9nLAogICAgICAgIG1hcDogewogICAgICAgICAgJy8nOiAnJTJGJywKICAgICAgICAgICc/JzogJyUzRicsCiAgICAgICAgICAnIyc6ICclMjMnCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgcmVzZXJ2ZWQ6IHsKICAgICAgZW5jb2RlOiB7CiAgICAgICAgLy8gUkZDMzk4NiAyLjE6IEZvciBjb25zaXN0ZW5jeSwgVVJJIHByb2R1Y2VycyBhbmQgbm9ybWFsaXplcnMgc2hvdWxkCiAgICAgICAgLy8gdXNlIHVwcGVyY2FzZSBoZXhhZGVjaW1hbCBkaWdpdHMgZm9yIGFsbCBwZXJjZW50LWVuY29kaW5ncy4KICAgICAgICBleHByZXNzaW9uOiAvJSgyMXwyM3wyNHwyNnwyN3wyOHwyOXwyQXwyQnwyQ3wyRnwzQXwzQnwzRHwzRnw0MHw1Qnw1RCkvaWcsCiAgICAgICAgbWFwOiB7CiAgICAgICAgICAvLyBnZW4tZGVsaW1zCiAgICAgICAgICAnJTNBJzogJzonLAogICAgICAgICAgJyUyRic6ICcvJywKICAgICAgICAgICclM0YnOiAnPycsCiAgICAgICAgICAnJTIzJzogJyMnLAogICAgICAgICAgJyU1Qic6ICdbJywKICAgICAgICAgICclNUQnOiAnXScsCiAgICAgICAgICAnJTQwJzogJ0AnLAogICAgICAgICAgLy8gc3ViLWRlbGltcwogICAgICAgICAgJyUyMSc6ICchJywKICAgICAgICAgICclMjQnOiAnJCcsCiAgICAgICAgICAnJTI2JzogJyYnLAogICAgICAgICAgJyUyNyc6ICdcJycsCiAgICAgICAgICAnJTI4JzogJygnLAogICAgICAgICAgJyUyOSc6ICcpJywKICAgICAgICAgICclMkEnOiAnKicsCiAgICAgICAgICAnJTJCJzogJysnLAogICAgICAgICAgJyUyQyc6ICcsJywKICAgICAgICAgICclM0InOiAnOycsCiAgICAgICAgICAnJTNEJzogJz0nCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgdXJucGF0aDogewogICAgICAvLyBUaGUgY2hhcmFjdGVycyB1bmRlciBgZW5jb2RlYCBhcmUgdGhlIGNoYXJhY3RlcnMgY2FsbGVkIG91dCBieSBSRkMgMjE0MSBhcyBiZWluZyBhY2NlcHRhYmxlCiAgICAgIC8vIGZvciB1c2FnZSBpbiBhIFVSTi4gUkZDMjE0MSBhbHNvIGNhbGxzIG91dCAiLSIsICIuIiwgYW5kICJfIiBhcyBhY2NlcHRhYmxlIGNoYXJhY3RlcnMsIGJ1dAogICAgICAvLyB0aGVzZSBhcmVuJ3QgZW5jb2RlZCBieSBlbmNvZGVVUklDb21wb25lbnQsIHNvIHdlIGRvbid0IGhhdmUgdG8gY2FsbCB0aGVtIG91dCBoZXJlLiBBbHNvCiAgICAgIC8vIG5vdGUgdGhhdCB0aGUgY29sb24gY2hhcmFjdGVyIGlzIG5vdCBmZWF0dXJlZCBpbiB0aGUgZW5jb2RpbmcgbWFwOyB0aGlzIGlzIGJlY2F1c2UgVVJJLmpzCiAgICAgIC8vIGdpdmVzIHRoZSBjb2xvbnMgaW4gVVJOcyBzZW1hbnRpYyBtZWFuaW5nIGFzIHRoZSBkZWxpbWl0ZXJzIG9mIHBhdGggc2VnZW1lbnRzLCBhbmQgc28gaXQKICAgICAgLy8gc2hvdWxkIG5vdCBhcHBlYXIgdW5lbmNvZGVkIGluIGEgc2VnbWVudCBpdHNlbGYuCiAgICAgIC8vIFNlZSBhbHNvIHRoZSBub3RlIGFib3ZlIGFib3V0IFJGQzM5ODYgYW5kIGNhcGl0YWxhbGl6ZWQgaGV4IGRpZ2l0cy4KICAgICAgZW5jb2RlOiB7CiAgICAgICAgZXhwcmVzc2lvbjogLyUoMjF8MjR8Mjd8Mjh8Mjl8MkF8MkJ8MkN8M0J8M0R8NDApL2lnLAogICAgICAgIG1hcDogewogICAgICAgICAgJyUyMSc6ICchJywKICAgICAgICAgICclMjQnOiAnJCcsCiAgICAgICAgICAnJTI3JzogJ1wnJywKICAgICAgICAgICclMjgnOiAnKCcsCiAgICAgICAgICAnJTI5JzogJyknLAogICAgICAgICAgJyUyQSc6ICcqJywKICAgICAgICAgICclMkInOiAnKycsCiAgICAgICAgICAnJTJDJzogJywnLAogICAgICAgICAgJyUzQic6ICc7JywKICAgICAgICAgICclM0QnOiAnPScsCiAgICAgICAgICAnJTQwJzogJ0AnCiAgICAgICAgfQogICAgICB9LAogICAgICAvLyBUaGVzZSBjaGFyYWN0ZXJzIGFyZSB0aGUgY2hhcmFjdGVycyBjYWxsZWQgb3V0IGJ5IFJGQzIxNDEgYXMgInJlc2VydmVkIiBjaGFyYWN0ZXJzIHRoYXQKICAgICAgLy8gc2hvdWxkIG5ldmVyIGFwcGVhciBpbiBhIFVSTiwgcGx1cyB0aGUgY29sb24gY2hhcmFjdGVyIChzZWUgbm90ZSBhYm92ZSkuCiAgICAgIGRlY29kZTogewogICAgICAgIGV4cHJlc3Npb246IC9bXC9cPyM6XS9nLAogICAgICAgIG1hcDogewogICAgICAgICAgJy8nOiAnJTJGJywKICAgICAgICAgICc/JzogJyUzRicsCiAgICAgICAgICAnIyc6ICclMjMnLAogICAgICAgICAgJzonOiAnJTNBJwogICAgICAgIH0KICAgICAgfQogICAgfQogIH07CiAgVVJJLmVuY29kZVF1ZXJ5ID0gZnVuY3Rpb24oc3RyaW5nLCBlc2NhcGVRdWVyeVNwYWNlKSB7CiAgICB2YXIgZXNjYXBlZCA9IFVSSS5lbmNvZGUoc3RyaW5nICsgJycpOwogICAgaWYgKGVzY2FwZVF1ZXJ5U3BhY2UgPT09IHVuZGVmaW5lZCkgewogICAgICBlc2NhcGVRdWVyeVNwYWNlID0gVVJJLmVzY2FwZVF1ZXJ5U3BhY2U7CiAgICB9CgogICAgcmV0dXJuIGVzY2FwZVF1ZXJ5U3BhY2UgPyBlc2NhcGVkLnJlcGxhY2UoLyUyMC9nLCAnKycpIDogZXNjYXBlZDsKICB9OwogIFVSSS5kZWNvZGVRdWVyeSA9IGZ1bmN0aW9uKHN0cmluZywgZXNjYXBlUXVlcnlTcGFjZSkgewogICAgc3RyaW5nICs9ICcnOwogICAgaWYgKGVzY2FwZVF1ZXJ5U3BhY2UgPT09IHVuZGVmaW5lZCkgewogICAgICBlc2NhcGVRdWVyeVNwYWNlID0gVVJJLmVzY2FwZVF1ZXJ5U3BhY2U7CiAgICB9CgogICAgdHJ5IHsKICAgICAgcmV0dXJuIFVSSS5kZWNvZGUoZXNjYXBlUXVlcnlTcGFjZSA/IHN0cmluZy5yZXBsYWNlKC9cKy9nLCAnJTIwJykgOiBzdHJpbmcpOwogICAgfSBjYXRjaChlKSB7CiAgICAgIC8vIHdlJ3JlIG5vdCBnb2luZyB0byBtZXNzIHdpdGggd2VpcmQgZW5jb2RpbmdzLAogICAgICAvLyBnaXZlIHVwIGFuZCByZXR1cm4gdGhlIHVuZGVjb2RlZCBvcmlnaW5hbCBzdHJpbmcKICAgICAgLy8gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9tZWRpYWxpemUvVVJJLmpzL2lzc3Vlcy84NwogICAgICAvLyBzZWUgaHR0cHM6Ly9naXRodWIuY29tL21lZGlhbGl6ZS9VUkkuanMvaXNzdWVzLzkyCiAgICAgIHJldHVybiBzdHJpbmc7CiAgICB9CiAgfTsKICAvLyBnZW5lcmF0ZSBlbmNvZGUvZGVjb2RlIHBhdGggZnVuY3Rpb25zCiAgdmFyIF9wYXJ0cyA9IHsnZW5jb2RlJzonZW5jb2RlJywgJ2RlY29kZSc6J2RlY29kZSd9OwogIHZhciBfcGFydDsKICB2YXIgZ2VuZXJhdGVBY2Nlc3NvciA9IGZ1bmN0aW9uKF9ncm91cCwgX3BhcnQpIHsKICAgIHJldHVybiBmdW5jdGlvbihzdHJpbmcpIHsKICAgICAgdHJ5IHsKICAgICAgICByZXR1cm4gVVJJW19wYXJ0XShzdHJpbmcgKyAnJykucmVwbGFjZShVUkkuY2hhcmFjdGVyc1tfZ3JvdXBdW19wYXJ0XS5leHByZXNzaW9uLCBmdW5jdGlvbihjKSB7CiAgICAgICAgICByZXR1cm4gVVJJLmNoYXJhY3RlcnNbX2dyb3VwXVtfcGFydF0ubWFwW2NdOwogICAgICAgIH0pOwogICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgLy8gd2UncmUgbm90IGdvaW5nIHRvIG1lc3Mgd2l0aCB3ZWlyZCBlbmNvZGluZ3MsCiAgICAgICAgLy8gZ2l2ZSB1cCBhbmQgcmV0dXJuIHRoZSB1bmRlY29kZWQgb3JpZ2luYWwgc3RyaW5nCiAgICAgICAgLy8gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9tZWRpYWxpemUvVVJJLmpzL2lzc3Vlcy84NwogICAgICAgIC8vIHNlZSBodHRwczovL2dpdGh1Yi5jb20vbWVkaWFsaXplL1VSSS5qcy9pc3N1ZXMvOTIKICAgICAgICByZXR1cm4gc3RyaW5nOwogICAgICB9CiAgICB9OwogIH07CgogIGZvciAoX3BhcnQgaW4gX3BhcnRzKSB7CiAgICBVUklbX3BhcnQgKyAnUGF0aFNlZ21lbnQnXSA9IGdlbmVyYXRlQWNjZXNzb3IoJ3BhdGhuYW1lJywgX3BhcnRzW19wYXJ0XSk7CiAgICBVUklbX3BhcnQgKyAnVXJuUGF0aFNlZ21lbnQnXSA9IGdlbmVyYXRlQWNjZXNzb3IoJ3VybnBhdGgnLCBfcGFydHNbX3BhcnRdKTsKICB9CgogIHZhciBnZW5lcmF0ZVNlZ21lbnRlZFBhdGhGdW5jdGlvbiA9IGZ1bmN0aW9uKF9zZXAsIF9jb2RpbmdGdW5jTmFtZSwgX2lubmVyQ29kaW5nRnVuY05hbWUpIHsKICAgIHJldHVybiBmdW5jdGlvbihzdHJpbmcpIHsKICAgICAgLy8gV2h5IHBhc3MgaW4gbmFtZXMgb2YgZnVuY3Rpb25zLCByYXRoZXIgdGhhbiB0aGUgZnVuY3Rpb24gb2JqZWN0cyB0aGVtc2VsdmVzPyBUaGUKICAgICAgLy8gZGVmaW5pdGlvbnMgb2Ygc29tZSBmdW5jdGlvbnMgKGJ1dCBpbiBwYXJ0aWN1bGFyLCBVUkkuZGVjb2RlKSB3aWxsIG9jY2FzaW9uYWxseSBjaGFuZ2UgZHVlCiAgICAgIC8vIHRvIFVSSS5qcyBoYXZpbmcgSVNPODg1OSBhbmQgVW5pY29kZSBtb2Rlcy4gUGFzc2luZyBpbiB0aGUgbmFtZSBhbmQgZ2V0dGluZyBpdCB3aWxsIGVuc3VyZQogICAgICAvLyB0aGF0IHRoZSBmdW5jdGlvbnMgd2UgdXNlIGhlcmUgYXJlICJmcmVzaCIuCiAgICAgIHZhciBhY3R1YWxDb2RpbmdGdW5jOwogICAgICBpZiAoIV9pbm5lckNvZGluZ0Z1bmNOYW1lKSB7CiAgICAgICAgYWN0dWFsQ29kaW5nRnVuYyA9IFVSSVtfY29kaW5nRnVuY05hbWVdOwogICAgICB9IGVsc2UgewogICAgICAgIGFjdHVhbENvZGluZ0Z1bmMgPSBmdW5jdGlvbihzdHJpbmcpIHsKICAgICAgICAgIHJldHVybiBVUklbX2NvZGluZ0Z1bmNOYW1lXShVUklbX2lubmVyQ29kaW5nRnVuY05hbWVdKHN0cmluZykpOwogICAgICAgIH07CiAgICAgIH0KCiAgICAgIHZhciBzZWdtZW50cyA9IChzdHJpbmcgKyAnJykuc3BsaXQoX3NlcCk7CgogICAgICBmb3IgKHZhciBpID0gMCwgbGVuZ3RoID0gc2VnbWVudHMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgICBzZWdtZW50c1tpXSA9IGFjdHVhbENvZGluZ0Z1bmMoc2VnbWVudHNbaV0pOwogICAgICB9CgogICAgICByZXR1cm4gc2VnbWVudHMuam9pbihfc2VwKTsKICAgIH07CiAgfTsKCiAgLy8gVGhpcyB0YWtlcyBwbGFjZSBvdXRzaWRlIHRoZSBhYm92ZSBsb29wIGJlY2F1c2Ugd2UgZG9uJ3Qgd2FudCwgZS5nLiwgZW5jb2RlVXJuUGF0aCBmdW5jdGlvbnMuCiAgVVJJLmRlY29kZVBhdGggPSBnZW5lcmF0ZVNlZ21lbnRlZFBhdGhGdW5jdGlvbignLycsICdkZWNvZGVQYXRoU2VnbWVudCcpOwogIFVSSS5kZWNvZGVVcm5QYXRoID0gZ2VuZXJhdGVTZWdtZW50ZWRQYXRoRnVuY3Rpb24oJzonLCAnZGVjb2RlVXJuUGF0aFNlZ21lbnQnKTsKICBVUkkucmVjb2RlUGF0aCA9IGdlbmVyYXRlU2VnbWVudGVkUGF0aEZ1bmN0aW9uKCcvJywgJ2VuY29kZVBhdGhTZWdtZW50JywgJ2RlY29kZScpOwogIFVSSS5yZWNvZGVVcm5QYXRoID0gZ2VuZXJhdGVTZWdtZW50ZWRQYXRoRnVuY3Rpb24oJzonLCAnZW5jb2RlVXJuUGF0aFNlZ21lbnQnLCAnZGVjb2RlJyk7CgogIFVSSS5lbmNvZGVSZXNlcnZlZCA9IGdlbmVyYXRlQWNjZXNzb3IoJ3Jlc2VydmVkJywgJ2VuY29kZScpOwoKICBVUkkucGFyc2UgPSBmdW5jdGlvbihzdHJpbmcsIHBhcnRzKSB7CiAgICB2YXIgcG9zOwogICAgaWYgKCFwYXJ0cykgewogICAgICBwYXJ0cyA9IHt9OwogICAgfQogICAgLy8gW3Byb3RvY29sIjovLyJbdXNlcm5hbWVbIjoicGFzc3dvcmRdIkAiXWhvc3RuYW1lWyI6InBvcnRdIi8iP11bcGF0aF1bIj8icXVlcnlzdHJpbmddWyIjImZyYWdtZW50XQoKICAgIC8vIGV4dHJhY3QgZnJhZ21lbnQKICAgIHBvcyA9IHN0cmluZy5pbmRleE9mKCcjJyk7CiAgICBpZiAocG9zID4gLTEpIHsKICAgICAgLy8gZXNjYXBpbmc/CiAgICAgIHBhcnRzLmZyYWdtZW50ID0gc3RyaW5nLnN1YnN0cmluZyhwb3MgKyAxKSB8fCBudWxsOwogICAgICBzdHJpbmcgPSBzdHJpbmcuc3Vic3RyaW5nKDAsIHBvcyk7CiAgICB9CgogICAgLy8gZXh0cmFjdCBxdWVyeQogICAgcG9zID0gc3RyaW5nLmluZGV4T2YoJz8nKTsKICAgIGlmIChwb3MgPiAtMSkgewogICAgICAvLyBlc2NhcGluZz8KICAgICAgcGFydHMucXVlcnkgPSBzdHJpbmcuc3Vic3RyaW5nKHBvcyArIDEpIHx8IG51bGw7CiAgICAgIHN0cmluZyA9IHN0cmluZy5zdWJzdHJpbmcoMCwgcG9zKTsKICAgIH0KCiAgICAvLyBleHRyYWN0IHByb3RvY29sCiAgICBpZiAoc3RyaW5nLnN1YnN0cmluZygwLCAyKSA9PT0gJy8vJykgewogICAgICAvLyByZWxhdGl2ZS1zY2hlbWUKICAgICAgcGFydHMucHJvdG9jb2wgPSBudWxsOwogICAgICBzdHJpbmcgPSBzdHJpbmcuc3Vic3RyaW5nKDIpOwogICAgICAvLyBleHRyYWN0ICJ1c2VyOnBhc3NAaG9zdDpwb3J0IgogICAgICBzdHJpbmcgPSBVUkkucGFyc2VBdXRob3JpdHkoc3RyaW5nLCBwYXJ0cyk7CiAgICB9IGVsc2UgewogICAgICBwb3MgPSBzdHJpbmcuaW5kZXhPZignOicpOwogICAgICBpZiAocG9zID4gLTEpIHsKICAgICAgICBwYXJ0cy5wcm90b2NvbCA9IHN0cmluZy5zdWJzdHJpbmcoMCwgcG9zKSB8fCBudWxsOwogICAgICAgIGlmIChwYXJ0cy5wcm90b2NvbCAmJiAhcGFydHMucHJvdG9jb2wubWF0Y2goVVJJLnByb3RvY29sX2V4cHJlc3Npb24pKSB7CiAgICAgICAgICAvLyA6IG1heSBiZSB3aXRoaW4gdGhlIHBhdGgKICAgICAgICAgIHBhcnRzLnByb3RvY29sID0gdW5kZWZpbmVkOwogICAgICAgIH0gZWxzZSBpZiAoc3RyaW5nLnN1YnN0cmluZyhwb3MgKyAxLCBwb3MgKyAzKSA9PT0gJy8vJykgewogICAgICAgICAgc3RyaW5nID0gc3RyaW5nLnN1YnN0cmluZyhwb3MgKyAzKTsKCiAgICAgICAgICAvLyBleHRyYWN0ICJ1c2VyOnBhc3NAaG9zdDpwb3J0IgogICAgICAgICAgc3RyaW5nID0gVVJJLnBhcnNlQXV0aG9yaXR5KHN0cmluZywgcGFydHMpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzdHJpbmcgPSBzdHJpbmcuc3Vic3RyaW5nKHBvcyArIDEpOwogICAgICAgICAgcGFydHMudXJuID0gdHJ1ZTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICAvLyB3aGF0J3MgbGVmdCBtdXN0IGJlIHRoZSBwYXRoCiAgICBwYXJ0cy5wYXRoID0gc3RyaW5nOwoKICAgIC8vIGFuZCB3ZSdyZSBkb25lCiAgICByZXR1cm4gcGFydHM7CiAgfTsKICBVUkkucGFyc2VIb3N0ID0gZnVuY3Rpb24oc3RyaW5nLCBwYXJ0cykgewogICAgLy8gQ29weSBjaHJvbWUsIElFLCBvcGVyYSBiYWNrc2xhc2gtaGFuZGxpbmcgYmVoYXZpb3IuCiAgICAvLyBCYWNrIHNsYXNoZXMgYmVmb3JlIHRoZSBxdWVyeSBzdHJpbmcgZ2V0IGNvbnZlcnRlZCB0byBmb3J3YXJkIHNsYXNoZXMKICAgIC8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2pveWVudC9ub2RlL2Jsb2IvMzg2ZmQyNGY0OWIwZTlkMWE4YTA3NjU5MmE0MDQxNjhmYWVlY2MzNC9saWIvdXJsLmpzI0wxMTUtTDEyNAogICAgLy8gU2VlOiBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9MjU5MTYKICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9tZWRpYWxpemUvVVJJLmpzL3B1bGwvMjMzCiAgICBzdHJpbmcgPSBzdHJpbmcucmVwbGFjZSgvXFwvZywgJy8nKTsKCiAgICAvLyBleHRyYWN0IGhvc3Q6cG9ydAogICAgdmFyIHBvcyA9IHN0cmluZy5pbmRleE9mKCcvJyk7CiAgICB2YXIgYnJhY2tldFBvczsKICAgIHZhciB0OwoKICAgIGlmIChwb3MgPT09IC0xKSB7CiAgICAgIHBvcyA9IHN0cmluZy5sZW5ndGg7CiAgICB9CgogICAgaWYgKHN0cmluZy5jaGFyQXQoMCkgPT09ICdbJykgewogICAgICAvLyBJUHY2IGhvc3QgLSBodHRwOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9kcmFmdC1pZXRmLTZtYW4tdGV4dC1hZGRyLXJlcHJlc2VudGF0aW9uLTA0I3NlY3Rpb24tNgogICAgICAvLyBJIGNsYWltIG1vc3QgY2xpZW50IHNvZnR3YXJlIGJyZWFrcyBvbiBJUHY2IGFueXdheXMuIFRvIHNpbXBsaWZ5IHRoaW5ncywgVVJJIG9ubHkgYWNjZXB0cwogICAgICAvLyBJUHY2K3BvcnQgaW4gdGhlIGZvcm1hdCBbMjAwMTpkYjg6OjFdOjgwIChmb3IgdGhlIHRpbWUgYmVpbmcpCiAgICAgIGJyYWNrZXRQb3MgPSBzdHJpbmcuaW5kZXhPZignXScpOwogICAgICBwYXJ0cy5ob3N0bmFtZSA9IHN0cmluZy5zdWJzdHJpbmcoMSwgYnJhY2tldFBvcykgfHwgbnVsbDsKICAgICAgcGFydHMucG9ydCA9IHN0cmluZy5zdWJzdHJpbmcoYnJhY2tldFBvcyArIDIsIHBvcykgfHwgbnVsbDsKICAgICAgaWYgKHBhcnRzLnBvcnQgPT09ICcvJykgewogICAgICAgIHBhcnRzLnBvcnQgPSBudWxsOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICB2YXIgZmlyc3RDb2xvbiA9IHN0cmluZy5pbmRleE9mKCc6Jyk7CiAgICAgIHZhciBmaXJzdFNsYXNoID0gc3RyaW5nLmluZGV4T2YoJy8nKTsKICAgICAgdmFyIG5leHRDb2xvbiA9IHN0cmluZy5pbmRleE9mKCc6JywgZmlyc3RDb2xvbiArIDEpOwogICAgICBpZiAobmV4dENvbG9uICE9PSAtMSAmJiAoZmlyc3RTbGFzaCA9PT0gLTEgfHwgbmV4dENvbG9uIDwgZmlyc3RTbGFzaCkpIHsKICAgICAgICAvLyBJUHY2IGhvc3QgY29udGFpbnMgbXVsdGlwbGUgY29sb25zIC0gYnV0IG5vIHBvcnQKICAgICAgICAvLyB0aGlzIG5vdGF0aW9uIGlzIGFjdHVhbGx5IG5vdCBhbGxvd2VkIGJ5IFJGQyAzOTg2LCBidXQgd2UncmUgYSBsaWJlcmFsIHBhcnNlcgogICAgICAgIHBhcnRzLmhvc3RuYW1lID0gc3RyaW5nLnN1YnN0cmluZygwLCBwb3MpIHx8IG51bGw7CiAgICAgICAgcGFydHMucG9ydCA9IG51bGw7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdCA9IHN0cmluZy5zdWJzdHJpbmcoMCwgcG9zKS5zcGxpdCgnOicpOwogICAgICAgIHBhcnRzLmhvc3RuYW1lID0gdFswXSB8fCBudWxsOwogICAgICAgIHBhcnRzLnBvcnQgPSB0WzFdIHx8IG51bGw7CiAgICAgIH0KICAgIH0KCiAgICBpZiAocGFydHMuaG9zdG5hbWUgJiYgc3RyaW5nLnN1YnN0cmluZyhwb3MpLmNoYXJBdCgwKSAhPT0gJy8nKSB7CiAgICAgIHBvcysrOwogICAgICBzdHJpbmcgPSAnLycgKyBzdHJpbmc7CiAgICB9CgogICAgcmV0dXJuIHN0cmluZy5zdWJzdHJpbmcocG9zKSB8fCAnLyc7CiAgfTsKICBVUkkucGFyc2VBdXRob3JpdHkgPSBmdW5jdGlvbihzdHJpbmcsIHBhcnRzKSB7CiAgICBzdHJpbmcgPSBVUkkucGFyc2VVc2VyaW5mbyhzdHJpbmcsIHBhcnRzKTsKICAgIHJldHVybiBVUkkucGFyc2VIb3N0KHN0cmluZywgcGFydHMpOwogIH07CiAgVVJJLnBhcnNlVXNlcmluZm8gPSBmdW5jdGlvbihzdHJpbmcsIHBhcnRzKSB7CiAgICAvLyBleHRyYWN0IHVzZXJuYW1lOnBhc3N3b3JkCiAgICB2YXIgZmlyc3RTbGFzaCA9IHN0cmluZy5pbmRleE9mKCcvJyk7CiAgICB2YXIgcG9zID0gc3RyaW5nLmxhc3RJbmRleE9mKCdAJywgZmlyc3RTbGFzaCA+IC0xID8gZmlyc3RTbGFzaCA6IHN0cmluZy5sZW5ndGggLSAxKTsKICAgIHZhciB0OwoKICAgIC8vIGF1dGhvcml0eUAgbXVzdCBjb21lIGJlZm9yZSAvcGF0aAogICAgaWYgKHBvcyA+IC0xICYmIChmaXJzdFNsYXNoID09PSAtMSB8fCBwb3MgPCBmaXJzdFNsYXNoKSkgewogICAgICB0ID0gc3RyaW5nLnN1YnN0cmluZygwLCBwb3MpLnNwbGl0KCc6Jyk7CiAgICAgIHBhcnRzLnVzZXJuYW1lID0gdFswXSA/IFVSSS5kZWNvZGUodFswXSkgOiBudWxsOwogICAgICB0LnNoaWZ0KCk7CiAgICAgIHBhcnRzLnBhc3N3b3JkID0gdFswXSA/IFVSSS5kZWNvZGUodC5qb2luKCc6JykpIDogbnVsbDsKICAgICAgc3RyaW5nID0gc3RyaW5nLnN1YnN0cmluZyhwb3MgKyAxKTsKICAgIH0gZWxzZSB7CiAgICAgIHBhcnRzLnVzZXJuYW1lID0gbnVsbDsKICAgICAgcGFydHMucGFzc3dvcmQgPSBudWxsOwogICAgfQoKICAgIHJldHVybiBzdHJpbmc7CiAgfTsKICBVUkkucGFyc2VRdWVyeSA9IGZ1bmN0aW9uKHN0cmluZywgZXNjYXBlUXVlcnlTcGFjZSkgewogICAgaWYgKCFzdHJpbmcpIHsKICAgICAgcmV0dXJuIHt9OwogICAgfQoKICAgIC8vIHRocm93IG91dCB0aGUgZnVua3kgYnVzaW5lc3MgLSAiPyJbbmFtZSI9InZhbHVlIiYiXSsKICAgIHN0cmluZyA9IHN0cmluZy5yZXBsYWNlKC8mKy9nLCAnJicpLnJlcGxhY2UoL15cPyomKnwmKyQvZywgJycpOwoKICAgIGlmICghc3RyaW5nKSB7CiAgICAgIHJldHVybiB7fTsKICAgIH0KCiAgICB2YXIgaXRlbXMgPSB7fTsKICAgIHZhciBzcGxpdHMgPSBzdHJpbmcuc3BsaXQoJyYnKTsKICAgIHZhciBsZW5ndGggPSBzcGxpdHMubGVuZ3RoOwogICAgdmFyIHYsIG5hbWUsIHZhbHVlOwoKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgdiA9IHNwbGl0c1tpXS5zcGxpdCgnPScpOwogICAgICBuYW1lID0gVVJJLmRlY29kZVF1ZXJ5KHYuc2hpZnQoKSwgZXNjYXBlUXVlcnlTcGFjZSk7CiAgICAgIC8vIG5vICI9IiBpcyBudWxsIGFjY29yZGluZyB0byBodHRwOi8vZHZjcy53My5vcmcvaGcvdXJsL3Jhdy1maWxlL3RpcC9PdmVydmlldy5odG1sI2NvbGxlY3QtdXJsLXBhcmFtZXRlcnMKICAgICAgdmFsdWUgPSB2Lmxlbmd0aCA/IFVSSS5kZWNvZGVRdWVyeSh2LmpvaW4oJz0nKSwgZXNjYXBlUXVlcnlTcGFjZSkgOiBudWxsOwoKICAgICAgaWYgKGhhc093bi5jYWxsKGl0ZW1zLCBuYW1lKSkgewogICAgICAgIGlmICh0eXBlb2YgaXRlbXNbbmFtZV0gPT09ICdzdHJpbmcnIHx8IGl0ZW1zW25hbWVdID09PSBudWxsKSB7CiAgICAgICAgICBpdGVtc1tuYW1lXSA9IFtpdGVtc1tuYW1lXV07CiAgICAgICAgfQoKICAgICAgICBpdGVtc1tuYW1lXS5wdXNoKHZhbHVlKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpdGVtc1tuYW1lXSA9IHZhbHVlOwogICAgICB9CiAgICB9CgogICAgcmV0dXJuIGl0ZW1zOwogIH07CgogIFVSSS5idWlsZCA9IGZ1bmN0aW9uKHBhcnRzKSB7CiAgICB2YXIgdCA9ICcnOwoKICAgIGlmIChwYXJ0cy5wcm90b2NvbCkgewogICAgICB0ICs9IHBhcnRzLnByb3RvY29sICsgJzonOwogICAgfQoKICAgIGlmICghcGFydHMudXJuICYmICh0IHx8IHBhcnRzLmhvc3RuYW1lKSkgewogICAgICB0ICs9ICcvLyc7CiAgICB9CgogICAgdCArPSAoVVJJLmJ1aWxkQXV0aG9yaXR5KHBhcnRzKSB8fCAnJyk7CgogICAgaWYgKHR5cGVvZiBwYXJ0cy5wYXRoID09PSAnc3RyaW5nJykgewogICAgICBpZiAocGFydHMucGF0aC5jaGFyQXQoMCkgIT09ICcvJyAmJiB0eXBlb2YgcGFydHMuaG9zdG5hbWUgPT09ICdzdHJpbmcnKSB7CiAgICAgICAgdCArPSAnLyc7CiAgICAgIH0KCiAgICAgIHQgKz0gcGFydHMucGF0aDsKICAgIH0KCiAgICBpZiAodHlwZW9mIHBhcnRzLnF1ZXJ5ID09PSAnc3RyaW5nJyAmJiBwYXJ0cy5xdWVyeSkgewogICAgICB0ICs9ICc/JyArIHBhcnRzLnF1ZXJ5OwogICAgfQoKICAgIGlmICh0eXBlb2YgcGFydHMuZnJhZ21lbnQgPT09ICdzdHJpbmcnICYmIHBhcnRzLmZyYWdtZW50KSB7CiAgICAgIHQgKz0gJyMnICsgcGFydHMuZnJhZ21lbnQ7CiAgICB9CiAgICByZXR1cm4gdDsKICB9OwogIFVSSS5idWlsZEhvc3QgPSBmdW5jdGlvbihwYXJ0cykgewogICAgdmFyIHQgPSAnJzsKCiAgICBpZiAoIXBhcnRzLmhvc3RuYW1lKSB7CiAgICAgIHJldHVybiAnJzsKICAgIH0gZWxzZSBpZiAoVVJJLmlwNl9leHByZXNzaW9uLnRlc3QocGFydHMuaG9zdG5hbWUpKSB7CiAgICAgIHQgKz0gJ1snICsgcGFydHMuaG9zdG5hbWUgKyAnXSc7CiAgICB9IGVsc2UgewogICAgICB0ICs9IHBhcnRzLmhvc3RuYW1lOwogICAgfQoKICAgIGlmIChwYXJ0cy5wb3J0KSB7CiAgICAgIHQgKz0gJzonICsgcGFydHMucG9ydDsKICAgIH0KCiAgICByZXR1cm4gdDsKICB9OwogIFVSSS5idWlsZEF1dGhvcml0eSA9IGZ1bmN0aW9uKHBhcnRzKSB7CiAgICByZXR1cm4gVVJJLmJ1aWxkVXNlcmluZm8ocGFydHMpICsgVVJJLmJ1aWxkSG9zdChwYXJ0cyk7CiAgfTsKICBVUkkuYnVpbGRVc2VyaW5mbyA9IGZ1bmN0aW9uKHBhcnRzKSB7CiAgICB2YXIgdCA9ICcnOwoKICAgIGlmIChwYXJ0cy51c2VybmFtZSkgewogICAgICB0ICs9IFVSSS5lbmNvZGUocGFydHMudXNlcm5hbWUpOwogICAgfQoKICAgIGlmIChwYXJ0cy5wYXNzd29yZCkgewogICAgICB0ICs9ICc6JyArIFVSSS5lbmNvZGUocGFydHMucGFzc3dvcmQpOwogICAgfQoKICAgIGlmICh0KSB7CiAgICAgIHQgKz0gJ0AnOwogICAgfQoKICAgIHJldHVybiB0OwogIH07CiAgVVJJLmJ1aWxkUXVlcnkgPSBmdW5jdGlvbihkYXRhLCBkdXBsaWNhdGVRdWVyeVBhcmFtZXRlcnMsIGVzY2FwZVF1ZXJ5U3BhY2UpIHsKICAgIC8vIGFjY29yZGluZyB0byBodHRwOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmMzOTg2IG9yIGh0dHA6Ly9sYWJzLmFwYWNoZS5vcmcvd2ViYXJjaC91cmkvcmZjL3JmYzM5ODYuaHRtbAogICAgLy8gYmVpbmcgwrstLl9+ISQmJygpKissOz06QC8/wqsgJUhFWCBhbmQgYWxudW0gYXJlIGFsbG93ZWQKICAgIC8vIHRoZSBSRkMgZXhwbGljaXRseSBzdGF0ZXMgPy9mb28gYmVpbmcgYSB2YWxpZCB1c2UgY2FzZSwgbm8gbWVudGlvbiBvZiBwYXJhbWV0ZXIgc3ludGF4IQogICAgLy8gVVJJLmpzIHRyZWF0cyB0aGUgcXVlcnkgc3RyaW5nIGFzIGJlaW5nIGFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZAogICAgLy8gc2VlIGh0dHA6Ly93d3cudzMub3JnL1RSL1JFQy1odG1sNDAvaW50ZXJhY3QvZm9ybXMuaHRtbCNmb3JtLWNvbnRlbnQtdHlwZQoKICAgIHZhciB0ID0gJyc7CiAgICB2YXIgdW5pcXVlLCBrZXksIGksIGxlbmd0aDsKICAgIGZvciAoa2V5IGluIGRhdGEpIHsKICAgICAgaWYgKGhhc093bi5jYWxsKGRhdGEsIGtleSkgJiYga2V5KSB7CiAgICAgICAgaWYgKGlzQXJyYXkoZGF0YVtrZXldKSkgewogICAgICAgICAgdW5pcXVlID0ge307CiAgICAgICAgICBmb3IgKGkgPSAwLCBsZW5ndGggPSBkYXRhW2tleV0ubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgaWYgKGRhdGFba2V5XVtpXSAhPT0gdW5kZWZpbmVkICYmIHVuaXF1ZVtkYXRhW2tleV1baV0gKyAnJ10gPT09IHVuZGVmaW5lZCkgewogICAgICAgICAgICAgIHQgKz0gJyYnICsgVVJJLmJ1aWxkUXVlcnlQYXJhbWV0ZXIoa2V5LCBkYXRhW2tleV1baV0sIGVzY2FwZVF1ZXJ5U3BhY2UpOwogICAgICAgICAgICAgIGlmIChkdXBsaWNhdGVRdWVyeVBhcmFtZXRlcnMgIT09IHRydWUpIHsKICAgICAgICAgICAgICAgIHVuaXF1ZVtkYXRhW2tleV1baV0gKyAnJ10gPSB0cnVlOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0gZWxzZSBpZiAoZGF0YVtrZXldICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgIHQgKz0gJyYnICsgVVJJLmJ1aWxkUXVlcnlQYXJhbWV0ZXIoa2V5LCBkYXRhW2tleV0sIGVzY2FwZVF1ZXJ5U3BhY2UpOwogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIHJldHVybiB0LnN1YnN0cmluZygxKTsKICB9OwogIFVSSS5idWlsZFF1ZXJ5UGFyYW1ldGVyID0gZnVuY3Rpb24obmFtZSwgdmFsdWUsIGVzY2FwZVF1ZXJ5U3BhY2UpIHsKICAgIC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL1JFQy1odG1sNDAvaW50ZXJhY3QvZm9ybXMuaHRtbCNmb3JtLWNvbnRlbnQtdHlwZSAtLSBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQKICAgIC8vIGRvbid0IGFwcGVuZCAiPSIgZm9yIG51bGwgdmFsdWVzLCBhY2NvcmRpbmcgdG8gaHR0cDovL2R2Y3MudzMub3JnL2hnL3VybC9yYXctZmlsZS90aXAvT3ZlcnZpZXcuaHRtbCN1cmwtcGFyYW1ldGVyLXNlcmlhbGl6YXRpb24KICAgIHJldHVybiBVUkkuZW5jb2RlUXVlcnkobmFtZSwgZXNjYXBlUXVlcnlTcGFjZSkgKyAodmFsdWUgIT09IG51bGwgPyAnPScgKyBVUkkuZW5jb2RlUXVlcnkodmFsdWUsIGVzY2FwZVF1ZXJ5U3BhY2UpIDogJycpOwogIH07CgogIFVSSS5hZGRRdWVyeSA9IGZ1bmN0aW9uKGRhdGEsIG5hbWUsIHZhbHVlKSB7CiAgICBpZiAodHlwZW9mIG5hbWUgPT09ICdvYmplY3QnKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBuYW1lKSB7CiAgICAgICAgaWYgKGhhc093bi5jYWxsKG5hbWUsIGtleSkpIHsKICAgICAgICAgIFVSSS5hZGRRdWVyeShkYXRhLCBrZXksIG5hbWVba2V5XSk7CiAgICAgICAgfQogICAgICB9CiAgICB9IGVsc2UgaWYgKHR5cGVvZiBuYW1lID09PSAnc3RyaW5nJykgewogICAgICBpZiAoZGF0YVtuYW1lXSA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgZGF0YVtuYW1lXSA9IHZhbHVlOwogICAgICAgIHJldHVybjsKICAgICAgfSBlbHNlIGlmICh0eXBlb2YgZGF0YVtuYW1lXSA9PT0gJ3N0cmluZycpIHsKICAgICAgICBkYXRhW25hbWVdID0gW2RhdGFbbmFtZV1dOwogICAgICB9CgogICAgICBpZiAoIWlzQXJyYXkodmFsdWUpKSB7CiAgICAgICAgdmFsdWUgPSBbdmFsdWVdOwogICAgICB9CgogICAgICBkYXRhW25hbWVdID0gKGRhdGFbbmFtZV0gfHwgW10pLmNvbmNhdCh2YWx1ZSk7CiAgICB9IGVsc2UgewogICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdVUkkuYWRkUXVlcnkoKSBhY2NlcHRzIGFuIG9iamVjdCwgc3RyaW5nIGFzIHRoZSBuYW1lIHBhcmFtZXRlcicpOwogICAgfQogIH07CiAgVVJJLnJlbW92ZVF1ZXJ5ID0gZnVuY3Rpb24oZGF0YSwgbmFtZSwgdmFsdWUpIHsKICAgIHZhciBpLCBsZW5ndGgsIGtleTsKCiAgICBpZiAoaXNBcnJheShuYW1lKSkgewogICAgICBmb3IgKGkgPSAwLCBsZW5ndGggPSBuYW1lLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAgICAgICAgZGF0YVtuYW1lW2ldXSA9IHVuZGVmaW5lZDsKICAgICAgfQogICAgfSBlbHNlIGlmIChnZXRUeXBlKG5hbWUpID09PSAnUmVnRXhwJykgewogICAgICBmb3IgKGtleSBpbiBkYXRhKSB7CiAgICAgICAgaWYgKG5hbWUudGVzdChrZXkpKSB7CiAgICAgICAgICBkYXRhW2tleV0gPSB1bmRlZmluZWQ7CiAgICAgICAgfQogICAgICB9CiAgICB9IGVsc2UgaWYgKHR5cGVvZiBuYW1lID09PSAnb2JqZWN0JykgewogICAgICBmb3IgKGtleSBpbiBuYW1lKSB7CiAgICAgICAgaWYgKGhhc093bi5jYWxsKG5hbWUsIGtleSkpIHsKICAgICAgICAgIFVSSS5yZW1vdmVRdWVyeShkYXRhLCBrZXksIG5hbWVba2V5XSk7CiAgICAgICAgfQogICAgICB9CiAgICB9IGVsc2UgaWYgKHR5cGVvZiBuYW1lID09PSAnc3RyaW5nJykgewogICAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCkgewogICAgICAgIGlmIChnZXRUeXBlKHZhbHVlKSA9PT0gJ1JlZ0V4cCcpIHsKICAgICAgICAgIGlmICghaXNBcnJheShkYXRhW25hbWVdKSAmJiB2YWx1ZS50ZXN0KGRhdGFbbmFtZV0pKSB7CiAgICAgICAgICAgIGRhdGFbbmFtZV0gPSB1bmRlZmluZWQ7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBkYXRhW25hbWVdID0gZmlsdGVyQXJyYXlWYWx1ZXMoZGF0YVtuYW1lXSwgdmFsdWUpOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSBpZiAoZGF0YVtuYW1lXSA9PT0gU3RyaW5nKHZhbHVlKSAmJiAoIWlzQXJyYXkodmFsdWUpIHx8IHZhbHVlLmxlbmd0aCA9PT0gMSkpIHsKICAgICAgICAgIGRhdGFbbmFtZV0gPSB1bmRlZmluZWQ7CiAgICAgICAgfSBlbHNlIGlmIChpc0FycmF5KGRhdGFbbmFtZV0pKSB7CiAgICAgICAgICBkYXRhW25hbWVdID0gZmlsdGVyQXJyYXlWYWx1ZXMoZGF0YVtuYW1lXSwgdmFsdWUpOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBkYXRhW25hbWVdID0gdW5kZWZpbmVkOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdVUkkucmVtb3ZlUXVlcnkoKSBhY2NlcHRzIGFuIG9iamVjdCwgc3RyaW5nLCBSZWdFeHAgYXMgdGhlIGZpcnN0IHBhcmFtZXRlcicpOwogICAgfQogIH07CiAgVVJJLmhhc1F1ZXJ5ID0gZnVuY3Rpb24oZGF0YSwgbmFtZSwgdmFsdWUsIHdpdGhpbkFycmF5KSB7CiAgICBzd2l0Y2ggKGdldFR5cGUobmFtZSkpIHsKICAgICAgY2FzZSAnU3RyaW5nJzoKICAgICAgICAvLyBOb3RoaW5nIHRvIGRvIGhlcmUKICAgICAgICBicmVhazsKCiAgICAgIGNhc2UgJ1JlZ0V4cCc6CiAgICAgICAgZm9yICh2YXIga2V5IGluIGRhdGEpIHsKICAgICAgICAgIGlmIChoYXNPd24uY2FsbChkYXRhLCBrZXkpKSB7CiAgICAgICAgICAgIGlmIChuYW1lLnRlc3Qoa2V5KSAmJiAodmFsdWUgPT09IHVuZGVmaW5lZCB8fCBVUkkuaGFzUXVlcnkoZGF0YSwga2V5LCB2YWx1ZSkpKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiBmYWxzZTsKCiAgICAgIGNhc2UgJ09iamVjdCc6CiAgICAgICAgZm9yICh2YXIgX2tleSBpbiBuYW1lKSB7CiAgICAgICAgICBpZiAoaGFzT3duLmNhbGwobmFtZSwgX2tleSkpIHsKICAgICAgICAgICAgaWYgKCFVUkkuaGFzUXVlcnkoZGF0YSwgX2tleSwgbmFtZVtfa2V5XSkpIHsKICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiB0cnVlOwoKICAgICAgZGVmYXVsdDoKICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdVUkkuaGFzUXVlcnkoKSBhY2NlcHRzIGEgc3RyaW5nLCByZWd1bGFyIGV4cHJlc3Npb24gb3Igb2JqZWN0IGFzIHRoZSBuYW1lIHBhcmFtZXRlcicpOwogICAgfQoKICAgIHN3aXRjaCAoZ2V0VHlwZSh2YWx1ZSkpIHsKICAgICAgY2FzZSAnVW5kZWZpbmVkJzoKICAgICAgICAvLyB0cnVlIGlmIGV4aXN0cyAoYnV0IG1heSBiZSBlbXB0eSkKICAgICAgICByZXR1cm4gbmFtZSBpbiBkYXRhOyAvLyBkYXRhW25hbWVdICE9PSB1bmRlZmluZWQ7CgogICAgICBjYXNlICdCb29sZWFuJzoKICAgICAgICAvLyB0cnVlIGlmIGV4aXN0cyBhbmQgbm9uLWVtcHR5CiAgICAgICAgdmFyIF9ib29seSA9IEJvb2xlYW4oaXNBcnJheShkYXRhW25hbWVdKSA/IGRhdGFbbmFtZV0ubGVuZ3RoIDogZGF0YVtuYW1lXSk7CiAgICAgICAgcmV0dXJuIHZhbHVlID09PSBfYm9vbHk7CgogICAgICBjYXNlICdGdW5jdGlvbic6CiAgICAgICAgLy8gYWxsb3cgY29tcGxleCBjb21wYXJpc29uCiAgICAgICAgcmV0dXJuICEhdmFsdWUoZGF0YVtuYW1lXSwgbmFtZSwgZGF0YSk7CgogICAgICBjYXNlICdBcnJheSc6CiAgICAgICAgaWYgKCFpc0FycmF5KGRhdGFbbmFtZV0pKSB7CiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQoKICAgICAgICB2YXIgb3AgPSB3aXRoaW5BcnJheSA/IGFycmF5Q29udGFpbnMgOiBhcnJheXNFcXVhbDsKICAgICAgICByZXR1cm4gb3AoZGF0YVtuYW1lXSwgdmFsdWUpOwoKICAgICAgY2FzZSAnUmVnRXhwJzoKICAgICAgICBpZiAoIWlzQXJyYXkoZGF0YVtuYW1lXSkpIHsKICAgICAgICAgIHJldHVybiBCb29sZWFuKGRhdGFbbmFtZV0gJiYgZGF0YVtuYW1lXS5tYXRjaCh2YWx1ZSkpOwogICAgICAgIH0KCiAgICAgICAgaWYgKCF3aXRoaW5BcnJheSkgewogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGFycmF5Q29udGFpbnMoZGF0YVtuYW1lXSwgdmFsdWUpOwoKICAgICAgY2FzZSAnTnVtYmVyJzoKICAgICAgICB2YWx1ZSA9IFN0cmluZyh2YWx1ZSk7CiAgICAgICAgLyogZmFsbHMgdGhyb3VnaCAqLwogICAgICBjYXNlICdTdHJpbmcnOgogICAgICAgIGlmICghaXNBcnJheShkYXRhW25hbWVdKSkgewogICAgICAgICAgcmV0dXJuIGRhdGFbbmFtZV0gPT09IHZhbHVlOwogICAgICAgIH0KCiAgICAgICAgaWYgKCF3aXRoaW5BcnJheSkgewogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGFycmF5Q29udGFpbnMoZGF0YVtuYW1lXSwgdmFsdWUpOwoKICAgICAgZGVmYXVsdDoKICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdVUkkuaGFzUXVlcnkoKSBhY2NlcHRzIHVuZGVmaW5lZCwgYm9vbGVhbiwgc3RyaW5nLCBudW1iZXIsIFJlZ0V4cCwgRnVuY3Rpb24gYXMgdGhlIHZhbHVlIHBhcmFtZXRlcicpOwogICAgfQogIH07CgoKICBVUkkuam9pblBhdGhzID0gZnVuY3Rpb24oKSB7CiAgICB2YXIgaW5wdXQgPSBbXTsKICAgIHZhciBzZWdtZW50cyA9IFtdOwogICAgdmFyIG5vbkVtcHR5U2VnbWVudHMgPSAwOwoKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7CiAgICAgIHZhciB1cmwgPSBuZXcgVVJJKGFyZ3VtZW50c1tpXSk7CiAgICAgIGlucHV0LnB1c2godXJsKTsKICAgICAgdmFyIF9zZWdtZW50cyA9IHVybC5zZWdtZW50KCk7CiAgICAgIGZvciAodmFyIHMgPSAwOyBzIDwgX3NlZ21lbnRzLmxlbmd0aDsgcysrKSB7CiAgICAgICAgaWYgKHR5cGVvZiBfc2VnbWVudHNbc10gPT09ICdzdHJpbmcnKSB7CiAgICAgICAgICBzZWdtZW50cy5wdXNoKF9zZWdtZW50c1tzXSk7CiAgICAgICAgfQoKICAgICAgICBpZiAoX3NlZ21lbnRzW3NdKSB7CiAgICAgICAgICBub25FbXB0eVNlZ21lbnRzKys7CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgaWYgKCFzZWdtZW50cy5sZW5ndGggfHwgIW5vbkVtcHR5U2VnbWVudHMpIHsKICAgICAgcmV0dXJuIG5ldyBVUkkoJycpOwogICAgfQoKICAgIHZhciB1cmkgPSBuZXcgVVJJKCcnKS5zZWdtZW50KHNlZ21lbnRzKTsKCiAgICBpZiAoaW5wdXRbMF0ucGF0aCgpID09PSAnJyB8fCBpbnB1dFswXS5wYXRoKCkuc2xpY2UoMCwgMSkgPT09ICcvJykgewogICAgICB1cmkucGF0aCgnLycgKyB1cmkucGF0aCgpKTsKICAgIH0KCiAgICByZXR1cm4gdXJpLm5vcm1hbGl6ZSgpOwogIH07CgogIFVSSS5jb21tb25QYXRoID0gZnVuY3Rpb24ob25lLCB0d28pIHsKICAgIHZhciBsZW5ndGggPSBNYXRoLm1pbihvbmUubGVuZ3RoLCB0d28ubGVuZ3RoKTsKICAgIHZhciBwb3M7CgogICAgLy8gZmluZCBmaXJzdCBub24tbWF0Y2hpbmcgY2hhcmFjdGVyCiAgICBmb3IgKHBvcyA9IDA7IHBvcyA8IGxlbmd0aDsgcG9zKyspIHsKICAgICAgaWYgKG9uZS5jaGFyQXQocG9zKSAhPT0gdHdvLmNoYXJBdChwb3MpKSB7CiAgICAgICAgcG9zLS07CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0KCiAgICBpZiAocG9zIDwgMSkgewogICAgICByZXR1cm4gb25lLmNoYXJBdCgwKSA9PT0gdHdvLmNoYXJBdCgwKSAmJiBvbmUuY2hhckF0KDApID09PSAnLycgPyAnLycgOiAnJzsKICAgIH0KCiAgICAvLyByZXZlcnQgdG8gbGFzdCAvCiAgICBpZiAob25lLmNoYXJBdChwb3MpICE9PSAnLycgfHwgdHdvLmNoYXJBdChwb3MpICE9PSAnLycpIHsKICAgICAgcG9zID0gb25lLnN1YnN0cmluZygwLCBwb3MpLmxhc3RJbmRleE9mKCcvJyk7CiAgICB9CgogICAgcmV0dXJuIG9uZS5zdWJzdHJpbmcoMCwgcG9zICsgMSk7CiAgfTsKCiAgVVJJLndpdGhpblN0cmluZyA9IGZ1bmN0aW9uKHN0cmluZywgY2FsbGJhY2ssIG9wdGlvbnMpIHsKICAgIG9wdGlvbnMgfHwgKG9wdGlvbnMgPSB7fSk7CiAgICB2YXIgX3N0YXJ0ID0gb3B0aW9ucy5zdGFydCB8fCBVUkkuZmluZFVyaS5zdGFydDsKICAgIHZhciBfZW5kID0gb3B0aW9ucy5lbmQgfHwgVVJJLmZpbmRVcmkuZW5kOwogICAgdmFyIF90cmltID0gb3B0aW9ucy50cmltIHx8IFVSSS5maW5kVXJpLnRyaW07CiAgICB2YXIgX2F0dHJpYnV0ZU9wZW4gPSAvW2EtejAtOS1dPVsiJ10/JC9pOwoKICAgIF9zdGFydC5sYXN0SW5kZXggPSAwOwogICAgd2hpbGUgKHRydWUpIHsKICAgICAgdmFyIG1hdGNoID0gX3N0YXJ0LmV4ZWMoc3RyaW5nKTsKICAgICAgaWYgKCFtYXRjaCkgewogICAgICAgIGJyZWFrOwogICAgICB9CgogICAgICB2YXIgc3RhcnQgPSBtYXRjaC5pbmRleDsKICAgICAgaWYgKG9wdGlvbnMuaWdub3JlSHRtbCkgewogICAgICAgIC8vIGF0dHJpYnV0KGU9WyInXT8kKQogICAgICAgIHZhciBhdHRyaWJ1dGVPcGVuID0gc3RyaW5nLnNsaWNlKE1hdGgubWF4KHN0YXJ0IC0gMywgMCksIHN0YXJ0KTsKICAgICAgICBpZiAoYXR0cmlidXRlT3BlbiAmJiBfYXR0cmlidXRlT3Blbi50ZXN0KGF0dHJpYnV0ZU9wZW4pKSB7CiAgICAgICAgICBjb250aW51ZTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHZhciBlbmQgPSBzdGFydCArIHN0cmluZy5zbGljZShzdGFydCkuc2VhcmNoKF9lbmQpOwogICAgICB2YXIgc2xpY2UgPSBzdHJpbmcuc2xpY2Uoc3RhcnQsIGVuZCkucmVwbGFjZShfdHJpbSwgJycpOwogICAgICBpZiAob3B0aW9ucy5pZ25vcmUgJiYgb3B0aW9ucy5pZ25vcmUudGVzdChzbGljZSkpIHsKICAgICAgICBjb250aW51ZTsKICAgICAgfQoKICAgICAgZW5kID0gc3RhcnQgKyBzbGljZS5sZW5ndGg7CiAgICAgIHZhciByZXN1bHQgPSBjYWxsYmFjayhzbGljZSwgc3RhcnQsIGVuZCwgc3RyaW5nKTsKICAgICAgc3RyaW5nID0gc3RyaW5nLnNsaWNlKDAsIHN0YXJ0KSArIHJlc3VsdCArIHN0cmluZy5zbGljZShlbmQpOwogICAgICBfc3RhcnQubGFzdEluZGV4ID0gc3RhcnQgKyByZXN1bHQubGVuZ3RoOwogICAgfQoKICAgIF9zdGFydC5sYXN0SW5kZXggPSAwOwogICAgcmV0dXJuIHN0cmluZzsKICB9OwoKICBVUkkuZW5zdXJlVmFsaWRIb3N0bmFtZSA9IGZ1bmN0aW9uKHYpIHsKICAgIC8vIFRoZW9yZXRpY2FsbHkgVVJJcyBhbGxvdyBwZXJjZW50LWVuY29kaW5nIGluIEhvc3RuYW1lcyAoYWNjb3JkaW5nIHRvIFJGQyAzOTg2KQogICAgLy8gdGhleSBhcmUgbm90IHBhcnQgb2YgRE5TIGFuZCB0aGVyZWZvcmUgaWdub3JlZCBieSBVUkkuanMKCiAgICBpZiAodi5tYXRjaChVUkkuaW52YWxpZF9ob3N0bmFtZV9jaGFyYWN0ZXJzKSkgewogICAgICAvLyB0ZXN0IHB1bnljb2RlCiAgICAgIGlmICghcHVueWNvZGUpIHsKICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdIb3N0bmFtZSAiJyArIHYgKyAnIiBjb250YWlucyBjaGFyYWN0ZXJzIG90aGVyIHRoYW4gW0EtWjAtOS4tXSBhbmQgUHVueWNvZGUuanMgaXMgbm90IGF2YWlsYWJsZScpOwogICAgICB9CgogICAgICBpZiAocHVueWNvZGUudG9BU0NJSSh2KS5tYXRjaChVUkkuaW52YWxpZF9ob3N0bmFtZV9jaGFyYWN0ZXJzKSkgewogICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0hvc3RuYW1lICInICsgdiArICciIGNvbnRhaW5zIGNoYXJhY3RlcnMgb3RoZXIgdGhhbiBbQS1aMC05Li1dJyk7CiAgICAgIH0KICAgIH0KICB9OwoKICAvLyBub0NvbmZsaWN0CiAgVVJJLm5vQ29uZmxpY3QgPSBmdW5jdGlvbihyZW1vdmVBbGwpIHsKICAgIGlmIChyZW1vdmVBbGwpIHsKICAgICAgdmFyIHVuY29uZmxpY3RlZCA9IHsKICAgICAgICBVUkk6IHRoaXMubm9Db25mbGljdCgpCiAgICAgIH07CgogICAgICBpZiAocm9vdC5VUklUZW1wbGF0ZSAmJiB0eXBlb2Ygcm9vdC5VUklUZW1wbGF0ZS5ub0NvbmZsaWN0ID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgdW5jb25mbGljdGVkLlVSSVRlbXBsYXRlID0gcm9vdC5VUklUZW1wbGF0ZS5ub0NvbmZsaWN0KCk7CiAgICAgIH0KCiAgICAgIGlmIChyb290LklQdjYgJiYgdHlwZW9mIHJvb3QuSVB2Ni5ub0NvbmZsaWN0ID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgdW5jb25mbGljdGVkLklQdjYgPSByb290LklQdjYubm9Db25mbGljdCgpOwogICAgICB9CgogICAgICBpZiAocm9vdC5TZWNvbmRMZXZlbERvbWFpbnMgJiYgdHlwZW9mIHJvb3QuU2Vjb25kTGV2ZWxEb21haW5zLm5vQ29uZmxpY3QgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICB1bmNvbmZsaWN0ZWQuU2Vjb25kTGV2ZWxEb21haW5zID0gcm9vdC5TZWNvbmRMZXZlbERvbWFpbnMubm9Db25mbGljdCgpOwogICAgICB9CgogICAgICByZXR1cm4gdW5jb25mbGljdGVkOwogICAgfSBlbHNlIGlmIChyb290LlVSSSA9PT0gdGhpcykgewogICAgICByb290LlVSSSA9IF9VUkk7CiAgICB9CgogICAgcmV0dXJuIHRoaXM7CiAgfTsKCiAgcC5idWlsZCA9IGZ1bmN0aW9uKGRlZmVyQnVpbGQpIHsKICAgIGlmIChkZWZlckJ1aWxkID09PSB0cnVlKSB7CiAgICAgIHRoaXMuX2RlZmVycmVkX2J1aWxkID0gdHJ1ZTsKICAgIH0gZWxzZSBpZiAoZGVmZXJCdWlsZCA9PT0gdW5kZWZpbmVkIHx8IHRoaXMuX2RlZmVycmVkX2J1aWxkKSB7CiAgICAgIHRoaXMuX3N0cmluZyA9IFVSSS5idWlsZCh0aGlzLl9wYXJ0cyk7CiAgICAgIHRoaXMuX2RlZmVycmVkX2J1aWxkID0gZmFsc2U7CiAgICB9CgogICAgcmV0dXJuIHRoaXM7CiAgfTsKCiAgcC5jbG9uZSA9IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuIG5ldyBVUkkodGhpcyk7CiAgfTsKCiAgcC52YWx1ZU9mID0gcC50b1N0cmluZyA9IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuIHRoaXMuYnVpbGQoZmFsc2UpLl9zdHJpbmc7CiAgfTsKCgogIGZ1bmN0aW9uIGdlbmVyYXRlU2ltcGxlQWNjZXNzb3IoX3BhcnQpewogICAgcmV0dXJuIGZ1bmN0aW9uKHYsIGJ1aWxkKSB7CiAgICAgIGlmICh2ID09PSB1bmRlZmluZWQpIHsKICAgICAgICByZXR1cm4gdGhpcy5fcGFydHNbX3BhcnRdIHx8ICcnOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuX3BhcnRzW19wYXJ0XSA9IHYgfHwgbnVsbDsKICAgICAgICB0aGlzLmJ1aWxkKCFidWlsZCk7CiAgICAgICAgcmV0dXJuIHRoaXM7CiAgICAgIH0KICAgIH07CiAgfQoKICBmdW5jdGlvbiBnZW5lcmF0ZVByZWZpeEFjY2Vzc29yKF9wYXJ0LCBfa2V5KXsKICAgIHJldHVybiBmdW5jdGlvbih2LCBidWlsZCkgewogICAgICBpZiAodiA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuX3BhcnRzW19wYXJ0XSB8fCAnJzsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAodiAhPT0gbnVsbCkgewogICAgICAgICAgdiA9IHYgKyAnJzsKICAgICAgICAgIGlmICh2LmNoYXJBdCgwKSA9PT0gX2tleSkgewogICAgICAgICAgICB2ID0gdi5zdWJzdHJpbmcoMSk7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICB0aGlzLl9wYXJ0c1tfcGFydF0gPSB2OwogICAgICAgIHRoaXMuYnVpbGQoIWJ1aWxkKTsKICAgICAgICByZXR1cm4gdGhpczsKICAgICAgfQogICAgfTsKICB9CgogIHAucHJvdG9jb2wgPSBnZW5lcmF0ZVNpbXBsZUFjY2Vzc29yKCdwcm90b2NvbCcpOwogIHAudXNlcm5hbWUgPSBnZW5lcmF0ZVNpbXBsZUFjY2Vzc29yKCd1c2VybmFtZScpOwogIHAucGFzc3dvcmQgPSBnZW5lcmF0ZVNpbXBsZUFjY2Vzc29yKCdwYXNzd29yZCcpOwogIHAuaG9zdG5hbWUgPSBnZW5lcmF0ZVNpbXBsZUFjY2Vzc29yKCdob3N0bmFtZScpOwogIHAucG9ydCA9IGdlbmVyYXRlU2ltcGxlQWNjZXNzb3IoJ3BvcnQnKTsKICBwLnF1ZXJ5ID0gZ2VuZXJhdGVQcmVmaXhBY2Nlc3NvcigncXVlcnknLCAnPycpOwogIHAuZnJhZ21lbnQgPSBnZW5lcmF0ZVByZWZpeEFjY2Vzc29yKCdmcmFnbWVudCcsICcjJyk7CgogIHAuc2VhcmNoID0gZnVuY3Rpb24odiwgYnVpbGQpIHsKICAgIHZhciB0ID0gdGhpcy5xdWVyeSh2LCBidWlsZCk7CiAgICByZXR1cm4gdHlwZW9mIHQgPT09ICdzdHJpbmcnICYmIHQubGVuZ3RoID8gKCc/JyArIHQpIDogdDsKICB9OwogIHAuaGFzaCA9IGZ1bmN0aW9uKHYsIGJ1aWxkKSB7CiAgICB2YXIgdCA9IHRoaXMuZnJhZ21lbnQodiwgYnVpbGQpOwogICAgcmV0dXJuIHR5cGVvZiB0ID09PSAnc3RyaW5nJyAmJiB0Lmxlbmd0aCA/ICgnIycgKyB0KSA6IHQ7CiAgfTsKCiAgcC5wYXRobmFtZSA9IGZ1bmN0aW9uKHYsIGJ1aWxkKSB7CiAgICBpZiAodiA9PT0gdW5kZWZpbmVkIHx8IHYgPT09IHRydWUpIHsKICAgICAgdmFyIHJlcyA9IHRoaXMuX3BhcnRzLnBhdGggfHwgKHRoaXMuX3BhcnRzLmhvc3RuYW1lID8gJy8nIDogJycpOwogICAgICByZXR1cm4gdiA/ICh0aGlzLl9wYXJ0cy51cm4gPyBVUkkuZGVjb2RlVXJuUGF0aCA6IFVSSS5kZWNvZGVQYXRoKShyZXMpIDogcmVzOwogICAgfSBlbHNlIHsKICAgICAgaWYgKHRoaXMuX3BhcnRzLnVybikgewogICAgICAgIHRoaXMuX3BhcnRzLnBhdGggPSB2ID8gVVJJLnJlY29kZVVyblBhdGgodikgOiAnJzsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLl9wYXJ0cy5wYXRoID0gdiA/IFVSSS5yZWNvZGVQYXRoKHYpIDogJy8nOwogICAgICB9CiAgICAgIHRoaXMuYnVpbGQoIWJ1aWxkKTsKICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CiAgfTsKICBwLnBhdGggPSBwLnBhdGhuYW1lOwogIHAuaHJlZiA9IGZ1bmN0aW9uKGhyZWYsIGJ1aWxkKSB7CiAgICB2YXIga2V5OwoKICAgIGlmIChocmVmID09PSB1bmRlZmluZWQpIHsKICAgICAgcmV0dXJuIHRoaXMudG9TdHJpbmcoKTsKICAgIH0KCiAgICB0aGlzLl9zdHJpbmcgPSAnJzsKICAgIHRoaXMuX3BhcnRzID0gVVJJLl9wYXJ0cygpOwoKICAgIHZhciBfVVJJID0gaHJlZiBpbnN0YW5jZW9mIFVSSTsKICAgIHZhciBfb2JqZWN0ID0gdHlwZW9mIGhyZWYgPT09ICdvYmplY3QnICYmIChocmVmLmhvc3RuYW1lIHx8IGhyZWYucGF0aCB8fCBocmVmLnBhdGhuYW1lKTsKICAgIGlmIChocmVmLm5vZGVOYW1lKSB7CiAgICAgIHZhciBhdHRyaWJ1dGUgPSBVUkkuZ2V0RG9tQXR0cmlidXRlKGhyZWYpOwogICAgICBocmVmID0gaHJlZlthdHRyaWJ1dGVdIHx8ICcnOwogICAgICBfb2JqZWN0ID0gZmFsc2U7CiAgICB9CgogICAgLy8gd2luZG93LmxvY2F0aW9uIGlzIHJlcG9ydGVkIHRvIGJlIGFuIG9iamVjdCwgYnV0IGl0J3Mgbm90IHRoZSBzb3J0CiAgICAvLyBvZiBvYmplY3Qgd2UncmUgbG9va2luZyBmb3I6CiAgICAvLyAqIGxvY2F0aW9uLnByb3RvY29sIGVuZHMgd2l0aCBhIGNvbG9uCiAgICAvLyAqIGxvY2F0aW9uLnF1ZXJ5ICE9IG9iamVjdC5zZWFyY2gKICAgIC8vICogbG9jYXRpb24uaGFzaCAhPSBvYmplY3QuZnJhZ21lbnQKICAgIC8vIHNpbXBseSBzZXJpYWxpemluZyB0aGUgdW5rbm93biBvYmplY3Qgc2hvdWxkIGRvIHRoZSB0cmljawogICAgLy8gKGZvciBsb2NhdGlvbiwgbm90IGZvciBldmVyeXRoaW5nLi4uKQogICAgaWYgKCFfVVJJICYmIF9vYmplY3QgJiYgaHJlZi5wYXRobmFtZSAhPT0gdW5kZWZpbmVkKSB7CiAgICAgIGhyZWYgPSBocmVmLnRvU3RyaW5nKCk7CiAgICB9CgogICAgaWYgKHR5cGVvZiBocmVmID09PSAnc3RyaW5nJyB8fCBocmVmIGluc3RhbmNlb2YgU3RyaW5nKSB7CiAgICAgIHRoaXMuX3BhcnRzID0gVVJJLnBhcnNlKFN0cmluZyhocmVmKSwgdGhpcy5fcGFydHMpOwogICAgfSBlbHNlIGlmIChfVVJJIHx8IF9vYmplY3QpIHsKICAgICAgdmFyIHNyYyA9IF9VUkkgPyBocmVmLl9wYXJ0cyA6IGhyZWY7CiAgICAgIGZvciAoa2V5IGluIHNyYykgewogICAgICAgIGlmIChoYXNPd24uY2FsbCh0aGlzLl9wYXJ0cywga2V5KSkgewogICAgICAgICAgdGhpcy5fcGFydHNba2V5XSA9IHNyY1trZXldOwogICAgICAgIH0KICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignaW52YWxpZCBpbnB1dCcpOwogICAgfQoKICAgIHRoaXMuYnVpbGQoIWJ1aWxkKTsKICAgIHJldHVybiB0aGlzOwogIH07CgogIC8vIGlkZW50aWZpY2F0aW9uIGFjY2Vzc29ycwogIHAuaXMgPSBmdW5jdGlvbih3aGF0KSB7CiAgICB2YXIgaXAgPSBmYWxzZTsKICAgIHZhciBpcDQgPSBmYWxzZTsKICAgIHZhciBpcDYgPSBmYWxzZTsKICAgIHZhciBuYW1lID0gZmFsc2U7CiAgICB2YXIgc2xkID0gZmFsc2U7CiAgICB2YXIgaWRuID0gZmFsc2U7CiAgICB2YXIgcHVueWNvZGUgPSBmYWxzZTsKICAgIHZhciByZWxhdGl2ZSA9ICF0aGlzLl9wYXJ0cy51cm47CgogICAgaWYgKHRoaXMuX3BhcnRzLmhvc3RuYW1lKSB7CiAgICAgIHJlbGF0aXZlID0gZmFsc2U7CiAgICAgIGlwNCA9IFVSSS5pcDRfZXhwcmVzc2lvbi50ZXN0KHRoaXMuX3BhcnRzLmhvc3RuYW1lKTsKICAgICAgaXA2ID0gVVJJLmlwNl9leHByZXNzaW9uLnRlc3QodGhpcy5fcGFydHMuaG9zdG5hbWUpOwogICAgICBpcCA9IGlwNCB8fCBpcDY7CiAgICAgIG5hbWUgPSAhaXA7CiAgICAgIHNsZCA9IG5hbWUgJiYgU0xEICYmIFNMRC5oYXModGhpcy5fcGFydHMuaG9zdG5hbWUpOwogICAgICBpZG4gPSBuYW1lICYmIFVSSS5pZG5fZXhwcmVzc2lvbi50ZXN0KHRoaXMuX3BhcnRzLmhvc3RuYW1lKTsKICAgICAgcHVueWNvZGUgPSBuYW1lICYmIFVSSS5wdW55Y29kZV9leHByZXNzaW9uLnRlc3QodGhpcy5fcGFydHMuaG9zdG5hbWUpOwogICAgfQoKICAgIHN3aXRjaCAod2hhdC50b0xvd2VyQ2FzZSgpKSB7CiAgICAgIGNhc2UgJ3JlbGF0aXZlJzoKICAgICAgICByZXR1cm4gcmVsYXRpdmU7CgogICAgICBjYXNlICdhYnNvbHV0ZSc6CiAgICAgICAgcmV0dXJuICFyZWxhdGl2ZTsKCiAgICAgIC8vIGhvc3RuYW1lIGlkZW50aWZpY2F0aW9uCiAgICAgIGNhc2UgJ2RvbWFpbic6CiAgICAgIGNhc2UgJ25hbWUnOgogICAgICAgIHJldHVybiBuYW1lOwoKICAgICAgY2FzZSAnc2xkJzoKICAgICAgICByZXR1cm4gc2xkOwoKICAgICAgY2FzZSAnaXAnOgogICAgICAgIHJldHVybiBpcDsKCiAgICAgIGNhc2UgJ2lwNCc6CiAgICAgIGNhc2UgJ2lwdjQnOgogICAgICBjYXNlICdpbmV0NCc6CiAgICAgICAgcmV0dXJuIGlwNDsKCiAgICAgIGNhc2UgJ2lwNic6CiAgICAgIGNhc2UgJ2lwdjYnOgogICAgICBjYXNlICdpbmV0Nic6CiAgICAgICAgcmV0dXJuIGlwNjsKCiAgICAgIGNhc2UgJ2lkbic6CiAgICAgICAgcmV0dXJuIGlkbjsKCiAgICAgIGNhc2UgJ3VybCc6CiAgICAgICAgcmV0dXJuICF0aGlzLl9wYXJ0cy51cm47CgogICAgICBjYXNlICd1cm4nOgogICAgICAgIHJldHVybiAhIXRoaXMuX3BhcnRzLnVybjsKCiAgICAgIGNhc2UgJ3B1bnljb2RlJzoKICAgICAgICByZXR1cm4gcHVueWNvZGU7CiAgICB9CgogICAgcmV0dXJuIG51bGw7CiAgfTsKCiAgLy8gY29tcG9uZW50IHNwZWNpZmljIGlucHV0IHZhbGlkYXRpb24KICB2YXIgX3Byb3RvY29sID0gcC5wcm90b2NvbDsKICB2YXIgX3BvcnQgPSBwLnBvcnQ7CiAgdmFyIF9ob3N0bmFtZSA9IHAuaG9zdG5hbWU7CgogIHAucHJvdG9jb2wgPSBmdW5jdGlvbih2LCBidWlsZCkgewogICAgaWYgKHYgIT09IHVuZGVmaW5lZCkgewogICAgICBpZiAodikgewogICAgICAgIC8vIGFjY2VwdCB0cmFpbGluZyA6Ly8KICAgICAgICB2ID0gdi5yZXBsYWNlKC86KFwvXC8pPyQvLCAnJyk7CgogICAgICAgIGlmICghdi5tYXRjaChVUkkucHJvdG9jb2xfZXhwcmVzc2lvbikpIHsKICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1Byb3RvY29sICInICsgdiArICciIGNvbnRhaW5zIGNoYXJhY3RlcnMgb3RoZXIgdGhhbiBbQS1aMC05ListXSBvciBkb2VzblwndCBzdGFydCB3aXRoIFtBLVpdJyk7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgICByZXR1cm4gX3Byb3RvY29sLmNhbGwodGhpcywgdiwgYnVpbGQpOwogIH07CiAgcC5zY2hlbWUgPSBwLnByb3RvY29sOwogIHAucG9ydCA9IGZ1bmN0aW9uKHYsIGJ1aWxkKSB7CiAgICBpZiAodGhpcy5fcGFydHMudXJuKSB7CiAgICAgIHJldHVybiB2ID09PSB1bmRlZmluZWQgPyAnJyA6IHRoaXM7CiAgICB9CgogICAgaWYgKHYgIT09IHVuZGVmaW5lZCkgewogICAgICBpZiAodiA9PT0gMCkgewogICAgICAgIHYgPSBudWxsOwogICAgICB9CgogICAgICBpZiAodikgewogICAgICAgIHYgKz0gJyc7CiAgICAgICAgaWYgKHYuY2hhckF0KDApID09PSAnOicpIHsKICAgICAgICAgIHYgPSB2LnN1YnN0cmluZygxKTsKICAgICAgICB9CgogICAgICAgIGlmICh2Lm1hdGNoKC9bXjAtOV0vKSkgewogICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignUG9ydCAiJyArIHYgKyAnIiBjb250YWlucyBjaGFyYWN0ZXJzIG90aGVyIHRoYW4gWzAtOV0nKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICAgIHJldHVybiBfcG9ydC5jYWxsKHRoaXMsIHYsIGJ1aWxkKTsKICB9OwogIHAuaG9zdG5hbWUgPSBmdW5jdGlvbih2LCBidWlsZCkgewogICAgaWYgKHRoaXMuX3BhcnRzLnVybikgewogICAgICByZXR1cm4gdiA9PT0gdW5kZWZpbmVkID8gJycgOiB0aGlzOwogICAgfQoKICAgIGlmICh2ICE9PSB1bmRlZmluZWQpIHsKICAgICAgdmFyIHggPSB7fTsKICAgICAgdmFyIHJlcyA9IFVSSS5wYXJzZUhvc3QodiwgeCk7CiAgICAgIGlmIChyZXMgIT09ICcvJykgewogICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0hvc3RuYW1lICInICsgdiArICciIGNvbnRhaW5zIGNoYXJhY3RlcnMgb3RoZXIgdGhhbiBbQS1aMC05Li1dJyk7CiAgICAgIH0KCiAgICAgIHYgPSB4Lmhvc3RuYW1lOwogICAgfQogICAgcmV0dXJuIF9ob3N0bmFtZS5jYWxsKHRoaXMsIHYsIGJ1aWxkKTsKICB9OwoKICAvLyBjb21wb3VuZCBhY2Nlc3NvcnMKICBwLm9yaWdpbiA9IGZ1bmN0aW9uKHYsIGJ1aWxkKSB7CiAgICBpZiAodGhpcy5fcGFydHMudXJuKSB7CiAgICAgIHJldHVybiB2ID09PSB1bmRlZmluZWQgPyAnJyA6IHRoaXM7CiAgICB9CgogICAgaWYgKHYgPT09IHVuZGVmaW5lZCkgewogICAgICB2YXIgcHJvdG9jb2wgPSB0aGlzLnByb3RvY29sKCk7CiAgICAgIHZhciBhdXRob3JpdHkgPSB0aGlzLmF1dGhvcml0eSgpOwogICAgICBpZiAoIWF1dGhvcml0eSkgewogICAgICAgIHJldHVybiAnJzsKICAgICAgfQoKICAgICAgcmV0dXJuIChwcm90b2NvbCA/IHByb3RvY29sICsgJzovLycgOiAnJykgKyB0aGlzLmF1dGhvcml0eSgpOwogICAgfSBlbHNlIHsKICAgICAgdmFyIG9yaWdpbiA9IFVSSSh2KTsKICAgICAgdGhpcwogICAgICAgIC5wcm90b2NvbChvcmlnaW4ucHJvdG9jb2woKSkKICAgICAgICAuYXV0aG9yaXR5KG9yaWdpbi5hdXRob3JpdHkoKSkKICAgICAgICAuYnVpbGQoIWJ1aWxkKTsKICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CiAgfTsKICBwLmhvc3QgPSBmdW5jdGlvbih2LCBidWlsZCkgewogICAgaWYgKHRoaXMuX3BhcnRzLnVybikgewogICAgICByZXR1cm4gdiA9PT0gdW5kZWZpbmVkID8gJycgOiB0aGlzOwogICAgfQoKICAgIGlmICh2ID09PSB1bmRlZmluZWQpIHsKICAgICAgcmV0dXJuIHRoaXMuX3BhcnRzLmhvc3RuYW1lID8gVVJJLmJ1aWxkSG9zdCh0aGlzLl9wYXJ0cykgOiAnJzsKICAgIH0gZWxzZSB7CiAgICAgIHZhciByZXMgPSBVUkkucGFyc2VIb3N0KHYsIHRoaXMuX3BhcnRzKTsKICAgICAgaWYgKHJlcyAhPT0gJy8nKSB7CiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSG9zdG5hbWUgIicgKyB2ICsgJyIgY29udGFpbnMgY2hhcmFjdGVycyBvdGhlciB0aGFuIFtBLVowLTkuLV0nKTsKICAgICAgfQoKICAgICAgdGhpcy5idWlsZCghYnVpbGQpOwogICAgICByZXR1cm4gdGhpczsKICAgIH0KICB9OwogIHAuYXV0aG9yaXR5ID0gZnVuY3Rpb24odiwgYnVpbGQpIHsKICAgIGlmICh0aGlzLl9wYXJ0cy51cm4pIHsKICAgICAgcmV0dXJuIHYgPT09IHVuZGVmaW5lZCA/ICcnIDogdGhpczsKICAgIH0KCiAgICBpZiAodiA9PT0gdW5kZWZpbmVkKSB7CiAgICAgIHJldHVybiB0aGlzLl9wYXJ0cy5ob3N0bmFtZSA/IFVSSS5idWlsZEF1dGhvcml0eSh0aGlzLl9wYXJ0cykgOiAnJzsKICAgIH0gZWxzZSB7CiAgICAgIHZhciByZXMgPSBVUkkucGFyc2VBdXRob3JpdHkodiwgdGhpcy5fcGFydHMpOwogICAgICBpZiAocmVzICE9PSAnLycpIHsKICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdIb3N0bmFtZSAiJyArIHYgKyAnIiBjb250YWlucyBjaGFyYWN0ZXJzIG90aGVyIHRoYW4gW0EtWjAtOS4tXScpOwogICAgICB9CgogICAgICB0aGlzLmJ1aWxkKCFidWlsZCk7CiAgICAgIHJldHVybiB0aGlzOwogICAgfQogIH07CiAgcC51c2VyaW5mbyA9IGZ1bmN0aW9uKHYsIGJ1aWxkKSB7CiAgICBpZiAodGhpcy5fcGFydHMudXJuKSB7CiAgICAgIHJldHVybiB2ID09PSB1bmRlZmluZWQgPyAnJyA6IHRoaXM7CiAgICB9CgogICAgaWYgKHYgPT09IHVuZGVmaW5lZCkgewogICAgICB2YXIgdCA9IFVSSS5idWlsZFVzZXJpbmZvKHRoaXMuX3BhcnRzKTsKICAgICAgcmV0dXJuIHQgPyB0LnN1YnN0cmluZygwLCB0Lmxlbmd0aCAtMSkgOiB0OwogICAgfSBlbHNlIHsKICAgICAgaWYgKHZbdi5sZW5ndGgtMV0gIT09ICdAJykgewogICAgICAgIHYgKz0gJ0AnOwogICAgICB9CgogICAgICBVUkkucGFyc2VVc2VyaW5mbyh2LCB0aGlzLl9wYXJ0cyk7CiAgICAgIHRoaXMuYnVpbGQoIWJ1aWxkKTsKICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CiAgfTsKICBwLnJlc291cmNlID0gZnVuY3Rpb24odiwgYnVpbGQpIHsKICAgIHZhciBwYXJ0czsKCiAgICBpZiAodiA9PT0gdW5kZWZpbmVkKSB7CiAgICAgIHJldHVybiB0aGlzLnBhdGgoKSArIHRoaXMuc2VhcmNoKCkgKyB0aGlzLmhhc2goKTsKICAgIH0KCiAgICBwYXJ0cyA9IFVSSS5wYXJzZSh2KTsKICAgIHRoaXMuX3BhcnRzLnBhdGggPSBwYXJ0cy5wYXRoOwogICAgdGhpcy5fcGFydHMucXVlcnkgPSBwYXJ0cy5xdWVyeTsKICAgIHRoaXMuX3BhcnRzLmZyYWdtZW50ID0gcGFydHMuZnJhZ21lbnQ7CiAgICB0aGlzLmJ1aWxkKCFidWlsZCk7CiAgICByZXR1cm4gdGhpczsKICB9OwoKICAvLyBmcmFjdGlvbiBhY2Nlc3NvcnMKICBwLnN1YmRvbWFpbiA9IGZ1bmN0aW9uKHYsIGJ1aWxkKSB7CiAgICBpZiAodGhpcy5fcGFydHMudXJuKSB7CiAgICAgIHJldHVybiB2ID09PSB1bmRlZmluZWQgPyAnJyA6IHRoaXM7CiAgICB9CgogICAgLy8gY29udmVuaWVuY2UsIHJldHVybiAid3d3IiBmcm9tICJ3d3cuZXhhbXBsZS5vcmciCiAgICBpZiAodiA9PT0gdW5kZWZpbmVkKSB7CiAgICAgIGlmICghdGhpcy5fcGFydHMuaG9zdG5hbWUgfHwgdGhpcy5pcygnSVAnKSkgewogICAgICAgIHJldHVybiAnJzsKICAgICAgfQoKICAgICAgLy8gZ3JhYiBkb21haW4gYW5kIGFkZCBhbm90aGVyIHNlZ21lbnQKICAgICAgdmFyIGVuZCA9IHRoaXMuX3BhcnRzLmhvc3RuYW1lLmxlbmd0aCAtIHRoaXMuZG9tYWluKCkubGVuZ3RoIC0gMTsKICAgICAgcmV0dXJuIHRoaXMuX3BhcnRzLmhvc3RuYW1lLnN1YnN0cmluZygwLCBlbmQpIHx8ICcnOwogICAgfSBlbHNlIHsKICAgICAgdmFyIGUgPSB0aGlzLl9wYXJ0cy5ob3N0bmFtZS5sZW5ndGggLSB0aGlzLmRvbWFpbigpLmxlbmd0aDsKICAgICAgdmFyIHN1YiA9IHRoaXMuX3BhcnRzLmhvc3RuYW1lLnN1YnN0cmluZygwLCBlKTsKICAgICAgdmFyIHJlcGxhY2UgPSBuZXcgUmVnRXhwKCdeJyArIGVzY2FwZVJlZ0V4KHN1YikpOwoKICAgICAgaWYgKHYgJiYgdi5jaGFyQXQodi5sZW5ndGggLSAxKSAhPT0gJy4nKSB7CiAgICAgICAgdiArPSAnLic7CiAgICAgIH0KCiAgICAgIGlmICh2KSB7CiAgICAgICAgVVJJLmVuc3VyZVZhbGlkSG9zdG5hbWUodik7CiAgICAgIH0KCiAgICAgIHRoaXMuX3BhcnRzLmhvc3RuYW1lID0gdGhpcy5fcGFydHMuaG9zdG5hbWUucmVwbGFjZShyZXBsYWNlLCB2KTsKICAgICAgdGhpcy5idWlsZCghYnVpbGQpOwogICAgICByZXR1cm4gdGhpczsKICAgIH0KICB9OwogIHAuZG9tYWluID0gZnVuY3Rpb24odiwgYnVpbGQpIHsKICAgIGlmICh0aGlzLl9wYXJ0cy51cm4pIHsKICAgICAgcmV0dXJuIHYgPT09IHVuZGVmaW5lZCA/ICcnIDogdGhpczsKICAgIH0KCiAgICBpZiAodHlwZW9mIHYgPT09ICdib29sZWFuJykgewogICAgICBidWlsZCA9IHY7CiAgICAgIHYgPSB1bmRlZmluZWQ7CiAgICB9CgogICAgLy8gY29udmVuaWVuY2UsIHJldHVybiAiZXhhbXBsZS5vcmciIGZyb20gInd3dy5leGFtcGxlLm9yZyIKICAgIGlmICh2ID09PSB1bmRlZmluZWQpIHsKICAgICAgaWYgKCF0aGlzLl9wYXJ0cy5ob3N0bmFtZSB8fCB0aGlzLmlzKCdJUCcpKSB7CiAgICAgICAgcmV0dXJuICcnOwogICAgICB9CgogICAgICAvLyBpZiBob3N0bmFtZSBjb25zaXN0cyBvZiAxIG9yIDIgc2VnbWVudHMsIGl0IG11c3QgYmUgdGhlIGRvbWFpbgogICAgICB2YXIgdCA9IHRoaXMuX3BhcnRzLmhvc3RuYW1lLm1hdGNoKC9cLi9nKTsKICAgICAgaWYgKHQgJiYgdC5sZW5ndGggPCAyKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuX3BhcnRzLmhvc3RuYW1lOwogICAgICB9CgogICAgICAvLyBncmFiIHRsZCBhbmQgYWRkIGFub3RoZXIgc2VnbWVudAogICAgICB2YXIgZW5kID0gdGhpcy5fcGFydHMuaG9zdG5hbWUubGVuZ3RoIC0gdGhpcy50bGQoYnVpbGQpLmxlbmd0aCAtIDE7CiAgICAgIGVuZCA9IHRoaXMuX3BhcnRzLmhvc3RuYW1lLmxhc3RJbmRleE9mKCcuJywgZW5kIC0xKSArIDE7CiAgICAgIHJldHVybiB0aGlzLl9wYXJ0cy5ob3N0bmFtZS5zdWJzdHJpbmcoZW5kKSB8fCAnJzsKICAgIH0gZWxzZSB7CiAgICAgIGlmICghdikgewogICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2Nhbm5vdCBzZXQgZG9tYWluIGVtcHR5Jyk7CiAgICAgIH0KCiAgICAgIFVSSS5lbnN1cmVWYWxpZEhvc3RuYW1lKHYpOwoKICAgICAgaWYgKCF0aGlzLl9wYXJ0cy5ob3N0bmFtZSB8fCB0aGlzLmlzKCdJUCcpKSB7CiAgICAgICAgdGhpcy5fcGFydHMuaG9zdG5hbWUgPSB2OwogICAgICB9IGVsc2UgewogICAgICAgIHZhciByZXBsYWNlID0gbmV3IFJlZ0V4cChlc2NhcGVSZWdFeCh0aGlzLmRvbWFpbigpKSArICckJyk7CiAgICAgICAgdGhpcy5fcGFydHMuaG9zdG5hbWUgPSB0aGlzLl9wYXJ0cy5ob3N0bmFtZS5yZXBsYWNlKHJlcGxhY2UsIHYpOwogICAgICB9CgogICAgICB0aGlzLmJ1aWxkKCFidWlsZCk7CiAgICAgIHJldHVybiB0aGlzOwogICAgfQogIH07CiAgcC50bGQgPSBmdW5jdGlvbih2LCBidWlsZCkgewogICAgaWYgKHRoaXMuX3BhcnRzLnVybikgewogICAgICByZXR1cm4gdiA9PT0gdW5kZWZpbmVkID8gJycgOiB0aGlzOwogICAgfQoKICAgIGlmICh0eXBlb2YgdiA9PT0gJ2Jvb2xlYW4nKSB7CiAgICAgIGJ1aWxkID0gdjsKICAgICAgdiA9IHVuZGVmaW5lZDsKICAgIH0KCiAgICAvLyByZXR1cm4gIm9yZyIgZnJvbSAid3d3LmV4YW1wbGUub3JnIgogICAgaWYgKHYgPT09IHVuZGVmaW5lZCkgewogICAgICBpZiAoIXRoaXMuX3BhcnRzLmhvc3RuYW1lIHx8IHRoaXMuaXMoJ0lQJykpIHsKICAgICAgICByZXR1cm4gJyc7CiAgICAgIH0KCiAgICAgIHZhciBwb3MgPSB0aGlzLl9wYXJ0cy5ob3N0bmFtZS5sYXN0SW5kZXhPZignLicpOwogICAgICB2YXIgdGxkID0gdGhpcy5fcGFydHMuaG9zdG5hbWUuc3Vic3RyaW5nKHBvcyArIDEpOwoKICAgICAgaWYgKGJ1aWxkICE9PSB0cnVlICYmIFNMRCAmJiBTTEQubGlzdFt0bGQudG9Mb3dlckNhc2UoKV0pIHsKICAgICAgICByZXR1cm4gU0xELmdldCh0aGlzLl9wYXJ0cy5ob3N0bmFtZSkgfHwgdGxkOwogICAgICB9CgogICAgICByZXR1cm4gdGxkOwogICAgfSBlbHNlIHsKICAgICAgdmFyIHJlcGxhY2U7CgogICAgICBpZiAoIXYpIHsKICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdjYW5ub3Qgc2V0IFRMRCBlbXB0eScpOwogICAgICB9IGVsc2UgaWYgKHYubWF0Y2goL1teYS16QS1aMC05LV0vKSkgewogICAgICAgIGlmIChTTEQgJiYgU0xELmlzKHYpKSB7CiAgICAgICAgICByZXBsYWNlID0gbmV3IFJlZ0V4cChlc2NhcGVSZWdFeCh0aGlzLnRsZCgpKSArICckJyk7CiAgICAgICAgICB0aGlzLl9wYXJ0cy5ob3N0bmFtZSA9IHRoaXMuX3BhcnRzLmhvc3RuYW1lLnJlcGxhY2UocmVwbGFjZSwgdik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1RMRCAiJyArIHYgKyAnIiBjb250YWlucyBjaGFyYWN0ZXJzIG90aGVyIHRoYW4gW0EtWjAtOV0nKTsKICAgICAgICB9CiAgICAgIH0gZWxzZSBpZiAoIXRoaXMuX3BhcnRzLmhvc3RuYW1lIHx8IHRoaXMuaXMoJ0lQJykpIHsKICAgICAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoJ2Nhbm5vdCBzZXQgVExEIG9uIG5vbi1kb21haW4gaG9zdCcpOwogICAgICB9IGVsc2UgewogICAgICAgIHJlcGxhY2UgPSBuZXcgUmVnRXhwKGVzY2FwZVJlZ0V4KHRoaXMudGxkKCkpICsgJyQnKTsKICAgICAgICB0aGlzLl9wYXJ0cy5ob3N0bmFtZSA9IHRoaXMuX3BhcnRzLmhvc3RuYW1lLnJlcGxhY2UocmVwbGFjZSwgdik7CiAgICAgIH0KCiAgICAgIHRoaXMuYnVpbGQoIWJ1aWxkKTsKICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CiAgfTsKICBwLmRpcmVjdG9yeSA9IGZ1bmN0aW9uKHYsIGJ1aWxkKSB7CiAgICBpZiAodGhpcy5fcGFydHMudXJuKSB7CiAgICAgIHJldHVybiB2ID09PSB1bmRlZmluZWQgPyAnJyA6IHRoaXM7CiAgICB9CgogICAgaWYgKHYgPT09IHVuZGVmaW5lZCB8fCB2ID09PSB0cnVlKSB7CiAgICAgIGlmICghdGhpcy5fcGFydHMucGF0aCAmJiAhdGhpcy5fcGFydHMuaG9zdG5hbWUpIHsKICAgICAgICByZXR1cm4gJyc7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLl9wYXJ0cy5wYXRoID09PSAnLycpIHsKICAgICAgICByZXR1cm4gJy8nOwogICAgICB9CgogICAgICB2YXIgZW5kID0gdGhpcy5fcGFydHMucGF0aC5sZW5ndGggLSB0aGlzLmZpbGVuYW1lKCkubGVuZ3RoIC0gMTsKICAgICAgdmFyIHJlcyA9IHRoaXMuX3BhcnRzLnBhdGguc3Vic3RyaW5nKDAsIGVuZCkgfHwgKHRoaXMuX3BhcnRzLmhvc3RuYW1lID8gJy8nIDogJycpOwoKICAgICAgcmV0dXJuIHYgPyBVUkkuZGVjb2RlUGF0aChyZXMpIDogcmVzOwoKICAgIH0gZWxzZSB7CiAgICAgIHZhciBlID0gdGhpcy5fcGFydHMucGF0aC5sZW5ndGggLSB0aGlzLmZpbGVuYW1lKCkubGVuZ3RoOwogICAgICB2YXIgZGlyZWN0b3J5ID0gdGhpcy5fcGFydHMucGF0aC5zdWJzdHJpbmcoMCwgZSk7CiAgICAgIHZhciByZXBsYWNlID0gbmV3IFJlZ0V4cCgnXicgKyBlc2NhcGVSZWdFeChkaXJlY3RvcnkpKTsKCiAgICAgIC8vIGZ1bGx5IHF1YWxpZmllciBkaXJlY3RvcmllcyBiZWdpbiB3aXRoIGEgc2xhc2gKICAgICAgaWYgKCF0aGlzLmlzKCdyZWxhdGl2ZScpKSB7CiAgICAgICAgaWYgKCF2KSB7CiAgICAgICAgICB2ID0gJy8nOwogICAgICAgIH0KCiAgICAgICAgaWYgKHYuY2hhckF0KDApICE9PSAnLycpIHsKICAgICAgICAgIHYgPSAnLycgKyB2OwogICAgICAgIH0KICAgICAgfQoKICAgICAgLy8gZGlyZWN0b3JpZXMgYWx3YXlzIGVuZCB3aXRoIGEgc2xhc2gKICAgICAgaWYgKHYgJiYgdi5jaGFyQXQodi5sZW5ndGggLSAxKSAhPT0gJy8nKSB7CiAgICAgICAgdiArPSAnLyc7CiAgICAgIH0KCiAgICAgIHYgPSBVUkkucmVjb2RlUGF0aCh2KTsKICAgICAgdGhpcy5fcGFydHMucGF0aCA9IHRoaXMuX3BhcnRzLnBhdGgucmVwbGFjZShyZXBsYWNlLCB2KTsKICAgICAgdGhpcy5idWlsZCghYnVpbGQpOwogICAgICByZXR1cm4gdGhpczsKICAgIH0KICB9OwogIHAuZmlsZW5hbWUgPSBmdW5jdGlvbih2LCBidWlsZCkgewogICAgaWYgKHRoaXMuX3BhcnRzLnVybikgewogICAgICByZXR1cm4gdiA9PT0gdW5kZWZpbmVkID8gJycgOiB0aGlzOwogICAgfQoKICAgIGlmICh2ID09PSB1bmRlZmluZWQgfHwgdiA9PT0gdHJ1ZSkgewogICAgICBpZiAoIXRoaXMuX3BhcnRzLnBhdGggfHwgdGhpcy5fcGFydHMucGF0aCA9PT0gJy8nKSB7CiAgICAgICAgcmV0dXJuICcnOwogICAgICB9CgogICAgICB2YXIgcG9zID0gdGhpcy5fcGFydHMucGF0aC5sYXN0SW5kZXhPZignLycpOwogICAgICB2YXIgcmVzID0gdGhpcy5fcGFydHMucGF0aC5zdWJzdHJpbmcocG9zKzEpOwoKICAgICAgcmV0dXJuIHYgPyBVUkkuZGVjb2RlUGF0aFNlZ21lbnQocmVzKSA6IHJlczsKICAgIH0gZWxzZSB7CiAgICAgIHZhciBtdXRhdGVkRGlyZWN0b3J5ID0gZmFsc2U7CgogICAgICBpZiAodi5jaGFyQXQoMCkgPT09ICcvJykgewogICAgICAgIHYgPSB2LnN1YnN0cmluZygxKTsKICAgICAgfQoKICAgICAgaWYgKHYubWF0Y2goL1wuP1wvLykpIHsKICAgICAgICBtdXRhdGVkRGlyZWN0b3J5ID0gdHJ1ZTsKICAgICAgfQoKICAgICAgdmFyIHJlcGxhY2UgPSBuZXcgUmVnRXhwKGVzY2FwZVJlZ0V4KHRoaXMuZmlsZW5hbWUoKSkgKyAnJCcpOwogICAgICB2ID0gVVJJLnJlY29kZVBhdGgodik7CiAgICAgIHRoaXMuX3BhcnRzLnBhdGggPSB0aGlzLl9wYXJ0cy5wYXRoLnJlcGxhY2UocmVwbGFjZSwgdik7CgogICAgICBpZiAobXV0YXRlZERpcmVjdG9yeSkgewogICAgICAgIHRoaXMubm9ybWFsaXplUGF0aChidWlsZCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5idWlsZCghYnVpbGQpOwogICAgICB9CgogICAgICByZXR1cm4gdGhpczsKICAgIH0KICB9OwogIHAuc3VmZml4ID0gZnVuY3Rpb24odiwgYnVpbGQpIHsKICAgIGlmICh0aGlzLl9wYXJ0cy51cm4pIHsKICAgICAgcmV0dXJuIHYgPT09IHVuZGVmaW5lZCA/ICcnIDogdGhpczsKICAgIH0KCiAgICBpZiAodiA9PT0gdW5kZWZpbmVkIHx8IHYgPT09IHRydWUpIHsKICAgICAgaWYgKCF0aGlzLl9wYXJ0cy5wYXRoIHx8IHRoaXMuX3BhcnRzLnBhdGggPT09ICcvJykgewogICAgICAgIHJldHVybiAnJzsKICAgICAgfQoKICAgICAgdmFyIGZpbGVuYW1lID0gdGhpcy5maWxlbmFtZSgpOwogICAgICB2YXIgcG9zID0gZmlsZW5hbWUubGFzdEluZGV4T2YoJy4nKTsKICAgICAgdmFyIHMsIHJlczsKCiAgICAgIGlmIChwb3MgPT09IC0xKSB7CiAgICAgICAgcmV0dXJuICcnOwogICAgICB9CgogICAgICAvLyBzdWZmaXggbWF5IG9ubHkgY29udGFpbiBhbG51bSBjaGFyYWN0ZXJzICh5dXAsIEkgbWFkZSB0aGlzIHVwLikKICAgICAgcyA9IGZpbGVuYW1lLnN1YnN0cmluZyhwb3MrMSk7CiAgICAgIHJlcyA9ICgvXlthLXowLTklXSskL2kpLnRlc3QocykgPyBzIDogJyc7CiAgICAgIHJldHVybiB2ID8gVVJJLmRlY29kZVBhdGhTZWdtZW50KHJlcykgOiByZXM7CiAgICB9IGVsc2UgewogICAgICBpZiAodi5jaGFyQXQoMCkgPT09ICcuJykgewogICAgICAgIHYgPSB2LnN1YnN0cmluZygxKTsKICAgICAgfQoKICAgICAgdmFyIHN1ZmZpeCA9IHRoaXMuc3VmZml4KCk7CiAgICAgIHZhciByZXBsYWNlOwoKICAgICAgaWYgKCFzdWZmaXgpIHsKICAgICAgICBpZiAoIXYpIHsKICAgICAgICAgIHJldHVybiB0aGlzOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5fcGFydHMucGF0aCArPSAnLicgKyBVUkkucmVjb2RlUGF0aCh2KTsKICAgICAgfSBlbHNlIGlmICghdikgewogICAgICAgIHJlcGxhY2UgPSBuZXcgUmVnRXhwKGVzY2FwZVJlZ0V4KCcuJyArIHN1ZmZpeCkgKyAnJCcpOwogICAgICB9IGVsc2UgewogICAgICAgIHJlcGxhY2UgPSBuZXcgUmVnRXhwKGVzY2FwZVJlZ0V4KHN1ZmZpeCkgKyAnJCcpOwogICAgICB9CgogICAgICBpZiAocmVwbGFjZSkgewogICAgICAgIHYgPSBVUkkucmVjb2RlUGF0aCh2KTsKICAgICAgICB0aGlzLl9wYXJ0cy5wYXRoID0gdGhpcy5fcGFydHMucGF0aC5yZXBsYWNlKHJlcGxhY2UsIHYpOwogICAgICB9CgogICAgICB0aGlzLmJ1aWxkKCFidWlsZCk7CiAgICAgIHJldHVybiB0aGlzOwogICAgfQogIH07CiAgcC5zZWdtZW50ID0gZnVuY3Rpb24oc2VnbWVudCwgdiwgYnVpbGQpIHsKICAgIHZhciBzZXBhcmF0b3IgPSB0aGlzLl9wYXJ0cy51cm4gPyAnOicgOiAnLyc7CiAgICB2YXIgcGF0aCA9IHRoaXMucGF0aCgpOwogICAgdmFyIGFic29sdXRlID0gcGF0aC5zdWJzdHJpbmcoMCwgMSkgPT09ICcvJzsKICAgIHZhciBzZWdtZW50cyA9IHBhdGguc3BsaXQoc2VwYXJhdG9yKTsKCiAgICBpZiAoc2VnbWVudCAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiBzZWdtZW50ICE9PSAnbnVtYmVyJykgewogICAgICBidWlsZCA9IHY7CiAgICAgIHYgPSBzZWdtZW50OwogICAgICBzZWdtZW50ID0gdW5kZWZpbmVkOwogICAgfQoKICAgIGlmIChzZWdtZW50ICE9PSB1bmRlZmluZWQgJiYgdHlwZW9mIHNlZ21lbnQgIT09ICdudW1iZXInKSB7CiAgICAgIHRocm93IG5ldyBFcnJvcignQmFkIHNlZ21lbnQgIicgKyBzZWdtZW50ICsgJyIsIG11c3QgYmUgMC1iYXNlZCBpbnRlZ2VyJyk7CiAgICB9CgogICAgaWYgKGFic29sdXRlKSB7CiAgICAgIHNlZ21lbnRzLnNoaWZ0KCk7CiAgICB9CgogICAgaWYgKHNlZ21lbnQgPCAwKSB7CiAgICAgIC8vIGFsbG93IG5lZ2F0aXZlIGluZGV4ZXMgdG8gYWRkcmVzcyBmcm9tIHRoZSBlbmQKICAgICAgc2VnbWVudCA9IE1hdGgubWF4KHNlZ21lbnRzLmxlbmd0aCArIHNlZ21lbnQsIDApOwogICAgfQoKICAgIGlmICh2ID09PSB1bmRlZmluZWQpIHsKICAgICAgLypqc2hpbnQgbGF4YnJlYWs6IHRydWUgKi8KICAgICAgcmV0dXJuIHNlZ21lbnQgPT09IHVuZGVmaW5lZAogICAgICAgID8gc2VnbWVudHMKICAgICAgICA6IHNlZ21lbnRzW3NlZ21lbnRdOwogICAgICAvKmpzaGludCBsYXhicmVhazogZmFsc2UgKi8KICAgIH0gZWxzZSBpZiAoc2VnbWVudCA9PT0gbnVsbCB8fCBzZWdtZW50c1tzZWdtZW50XSA9PT0gdW5kZWZpbmVkKSB7CiAgICAgIGlmIChpc0FycmF5KHYpKSB7CiAgICAgICAgc2VnbWVudHMgPSBbXTsKICAgICAgICAvLyBjb2xsYXBzZSBlbXB0eSBlbGVtZW50cyB3aXRoaW4gYXJyYXkKICAgICAgICBmb3IgKHZhciBpPTAsIGw9di5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgIGlmICghdltpXS5sZW5ndGggJiYgKCFzZWdtZW50cy5sZW5ndGggfHwgIXNlZ21lbnRzW3NlZ21lbnRzLmxlbmd0aCAtMV0ubGVuZ3RoKSkgewogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoc2VnbWVudHMubGVuZ3RoICYmICFzZWdtZW50c1tzZWdtZW50cy5sZW5ndGggLTFdLmxlbmd0aCkgewogICAgICAgICAgICBzZWdtZW50cy5wb3AoKTsKICAgICAgICAgIH0KCiAgICAgICAgICBzZWdtZW50cy5wdXNoKHRyaW1TbGFzaGVzKHZbaV0pKTsKICAgICAgICB9CiAgICAgIH0gZWxzZSBpZiAodiB8fCB0eXBlb2YgdiA9PT0gJ3N0cmluZycpIHsKICAgICAgICB2ID0gdHJpbVNsYXNoZXModik7CiAgICAgICAgaWYgKHNlZ21lbnRzW3NlZ21lbnRzLmxlbmd0aCAtMV0gPT09ICcnKSB7CiAgICAgICAgICAvLyBlbXB0eSB0cmFpbGluZyBlbGVtZW50cyBoYXZlIHRvIGJlIG92ZXJ3cml0dGVuCiAgICAgICAgICAvLyB0byBwcmV2ZW50IHJlc3VsdHMgc3VjaCBhcyAvZm9vLy9iYXIKICAgICAgICAgIHNlZ21lbnRzW3NlZ21lbnRzLmxlbmd0aCAtMV0gPSB2OwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzZWdtZW50cy5wdXNoKHYpOwogICAgICAgIH0KICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgaWYgKHYpIHsKICAgICAgICBzZWdtZW50c1tzZWdtZW50XSA9IHRyaW1TbGFzaGVzKHYpOwogICAgICB9IGVsc2UgewogICAgICAgIHNlZ21lbnRzLnNwbGljZShzZWdtZW50LCAxKTsKICAgICAgfQogICAgfQoKICAgIGlmIChhYnNvbHV0ZSkgewogICAgICBzZWdtZW50cy51bnNoaWZ0KCcnKTsKICAgIH0KCiAgICByZXR1cm4gdGhpcy5wYXRoKHNlZ21lbnRzLmpvaW4oc2VwYXJhdG9yKSwgYnVpbGQpOwogIH07CiAgcC5zZWdtZW50Q29kZWQgPSBmdW5jdGlvbihzZWdtZW50LCB2LCBidWlsZCkgewogICAgdmFyIHNlZ21lbnRzLCBpLCBsOwoKICAgIGlmICh0eXBlb2Ygc2VnbWVudCAhPT0gJ251bWJlcicpIHsKICAgICAgYnVpbGQgPSB2OwogICAgICB2ID0gc2VnbWVudDsKICAgICAgc2VnbWVudCA9IHVuZGVmaW5lZDsKICAgIH0KCiAgICBpZiAodiA9PT0gdW5kZWZpbmVkKSB7CiAgICAgIHNlZ21lbnRzID0gdGhpcy5zZWdtZW50KHNlZ21lbnQsIHYsIGJ1aWxkKTsKICAgICAgaWYgKCFpc0FycmF5KHNlZ21lbnRzKSkgewogICAgICAgIHNlZ21lbnRzID0gc2VnbWVudHMgIT09IHVuZGVmaW5lZCA/IFVSSS5kZWNvZGUoc2VnbWVudHMpIDogdW5kZWZpbmVkOwogICAgICB9IGVsc2UgewogICAgICAgIGZvciAoaSA9IDAsIGwgPSBzZWdtZW50cy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICAgIHNlZ21lbnRzW2ldID0gVVJJLmRlY29kZShzZWdtZW50c1tpXSk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gc2VnbWVudHM7CiAgICB9CgogICAgaWYgKCFpc0FycmF5KHYpKSB7CiAgICAgIHYgPSAodHlwZW9mIHYgPT09ICdzdHJpbmcnIHx8IHYgaW5zdGFuY2VvZiBTdHJpbmcpID8gVVJJLmVuY29kZSh2KSA6IHY7CiAgICB9IGVsc2UgewogICAgICBmb3IgKGkgPSAwLCBsID0gdi5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICB2W2ldID0gVVJJLmVuY29kZSh2W2ldKTsKICAgICAgfQogICAgfQoKICAgIHJldHVybiB0aGlzLnNlZ21lbnQoc2VnbWVudCwgdiwgYnVpbGQpOwogIH07CgogIC8vIG11dGF0aW5nIHF1ZXJ5IHN0cmluZwogIHZhciBxID0gcC5xdWVyeTsKICBwLnF1ZXJ5ID0gZnVuY3Rpb24odiwgYnVpbGQpIHsKICAgIGlmICh2ID09PSB0cnVlKSB7CiAgICAgIHJldHVybiBVUkkucGFyc2VRdWVyeSh0aGlzLl9wYXJ0cy5xdWVyeSwgdGhpcy5fcGFydHMuZXNjYXBlUXVlcnlTcGFjZSk7CiAgICB9IGVsc2UgaWYgKHR5cGVvZiB2ID09PSAnZnVuY3Rpb24nKSB7CiAgICAgIHZhciBkYXRhID0gVVJJLnBhcnNlUXVlcnkodGhpcy5fcGFydHMucXVlcnksIHRoaXMuX3BhcnRzLmVzY2FwZVF1ZXJ5U3BhY2UpOwogICAgICB2YXIgcmVzdWx0ID0gdi5jYWxsKHRoaXMsIGRhdGEpOwogICAgICB0aGlzLl9wYXJ0cy5xdWVyeSA9IFVSSS5idWlsZFF1ZXJ5KHJlc3VsdCB8fCBkYXRhLCB0aGlzLl9wYXJ0cy5kdXBsaWNhdGVRdWVyeVBhcmFtZXRlcnMsIHRoaXMuX3BhcnRzLmVzY2FwZVF1ZXJ5U3BhY2UpOwogICAgICB0aGlzLmJ1aWxkKCFidWlsZCk7CiAgICAgIHJldHVybiB0aGlzOwogICAgfSBlbHNlIGlmICh2ICE9PSB1bmRlZmluZWQgJiYgdHlwZW9mIHYgIT09ICdzdHJpbmcnKSB7CiAgICAgIHRoaXMuX3BhcnRzLnF1ZXJ5ID0gVVJJLmJ1aWxkUXVlcnkodiwgdGhpcy5fcGFydHMuZHVwbGljYXRlUXVlcnlQYXJhbWV0ZXJzLCB0aGlzLl9wYXJ0cy5lc2NhcGVRdWVyeVNwYWNlKTsKICAgICAgdGhpcy5idWlsZCghYnVpbGQpOwogICAgICByZXR1cm4gdGhpczsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiBxLmNhbGwodGhpcywgdiwgYnVpbGQpOwogICAgfQogIH07CiAgcC5zZXRRdWVyeSA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlLCBidWlsZCkgewogICAgdmFyIGRhdGEgPSBVUkkucGFyc2VRdWVyeSh0aGlzLl9wYXJ0cy5xdWVyeSwgdGhpcy5fcGFydHMuZXNjYXBlUXVlcnlTcGFjZSk7CgogICAgaWYgKHR5cGVvZiBuYW1lID09PSAnc3RyaW5nJyB8fCBuYW1lIGluc3RhbmNlb2YgU3RyaW5nKSB7CiAgICAgIGRhdGFbbmFtZV0gPSB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gdmFsdWUgOiBudWxsOwogICAgfSBlbHNlIGlmICh0eXBlb2YgbmFtZSA9PT0gJ29iamVjdCcpIHsKICAgICAgZm9yICh2YXIga2V5IGluIG5hbWUpIHsKICAgICAgICBpZiAoaGFzT3duLmNhbGwobmFtZSwga2V5KSkgewogICAgICAgICAgZGF0YVtrZXldID0gbmFtZVtrZXldOwogICAgICAgIH0KICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVVJJLmFkZFF1ZXJ5KCkgYWNjZXB0cyBhbiBvYmplY3QsIHN0cmluZyBhcyB0aGUgbmFtZSBwYXJhbWV0ZXInKTsKICAgIH0KCiAgICB0aGlzLl9wYXJ0cy5xdWVyeSA9IFVSSS5idWlsZFF1ZXJ5KGRhdGEsIHRoaXMuX3BhcnRzLmR1cGxpY2F0ZVF1ZXJ5UGFyYW1ldGVycywgdGhpcy5fcGFydHMuZXNjYXBlUXVlcnlTcGFjZSk7CiAgICBpZiAodHlwZW9mIG5hbWUgIT09ICdzdHJpbmcnKSB7CiAgICAgIGJ1aWxkID0gdmFsdWU7CiAgICB9CgogICAgdGhpcy5idWlsZCghYnVpbGQpOwogICAgcmV0dXJuIHRoaXM7CiAgfTsKICBwLmFkZFF1ZXJ5ID0gZnVuY3Rpb24obmFtZSwgdmFsdWUsIGJ1aWxkKSB7CiAgICB2YXIgZGF0YSA9IFVSSS5wYXJzZVF1ZXJ5KHRoaXMuX3BhcnRzLnF1ZXJ5LCB0aGlzLl9wYXJ0cy5lc2NhcGVRdWVyeVNwYWNlKTsKICAgIFVSSS5hZGRRdWVyeShkYXRhLCBuYW1lLCB2YWx1ZSA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IHZhbHVlKTsKICAgIHRoaXMuX3BhcnRzLnF1ZXJ5ID0gVVJJLmJ1aWxkUXVlcnkoZGF0YSwgdGhpcy5fcGFydHMuZHVwbGljYXRlUXVlcnlQYXJhbWV0ZXJzLCB0aGlzLl9wYXJ0cy5lc2NhcGVRdWVyeVNwYWNlKTsKICAgIGlmICh0eXBlb2YgbmFtZSAhPT0gJ3N0cmluZycpIHsKICAgICAgYnVpbGQgPSB2YWx1ZTsKICAgIH0KCiAgICB0aGlzLmJ1aWxkKCFidWlsZCk7CiAgICByZXR1cm4gdGhpczsKICB9OwogIHAucmVtb3ZlUXVlcnkgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSwgYnVpbGQpIHsKICAgIHZhciBkYXRhID0gVVJJLnBhcnNlUXVlcnkodGhpcy5fcGFydHMucXVlcnksIHRoaXMuX3BhcnRzLmVzY2FwZVF1ZXJ5U3BhY2UpOwogICAgVVJJLnJlbW92ZVF1ZXJ5KGRhdGEsIG5hbWUsIHZhbHVlKTsKICAgIHRoaXMuX3BhcnRzLnF1ZXJ5ID0gVVJJLmJ1aWxkUXVlcnkoZGF0YSwgdGhpcy5fcGFydHMuZHVwbGljYXRlUXVlcnlQYXJhbWV0ZXJzLCB0aGlzLl9wYXJ0cy5lc2NhcGVRdWVyeVNwYWNlKTsKICAgIGlmICh0eXBlb2YgbmFtZSAhPT0gJ3N0cmluZycpIHsKICAgICAgYnVpbGQgPSB2YWx1ZTsKICAgIH0KCiAgICB0aGlzLmJ1aWxkKCFidWlsZCk7CiAgICByZXR1cm4gdGhpczsKICB9OwogIHAuaGFzUXVlcnkgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSwgd2l0aGluQXJyYXkpIHsKICAgIHZhciBkYXRhID0gVVJJLnBhcnNlUXVlcnkodGhpcy5fcGFydHMucXVlcnksIHRoaXMuX3BhcnRzLmVzY2FwZVF1ZXJ5U3BhY2UpOwogICAgcmV0dXJuIFVSSS5oYXNRdWVyeShkYXRhLCBuYW1lLCB2YWx1ZSwgd2l0aGluQXJyYXkpOwogIH07CiAgcC5zZXRTZWFyY2ggPSBwLnNldFF1ZXJ5OwogIHAuYWRkU2VhcmNoID0gcC5hZGRRdWVyeTsKICBwLnJlbW92ZVNlYXJjaCA9IHAucmVtb3ZlUXVlcnk7CiAgcC5oYXNTZWFyY2ggPSBwLmhhc1F1ZXJ5OwoKICAvLyBzYW5pdGl6aW5nIFVSTHMKICBwLm5vcm1hbGl6ZSA9IGZ1bmN0aW9uKCkgewogICAgaWYgKHRoaXMuX3BhcnRzLnVybikgewogICAgICByZXR1cm4gdGhpcwogICAgICAgIC5ub3JtYWxpemVQcm90b2NvbChmYWxzZSkKICAgICAgICAubm9ybWFsaXplUGF0aChmYWxzZSkKICAgICAgICAubm9ybWFsaXplUXVlcnkoZmFsc2UpCiAgICAgICAgLm5vcm1hbGl6ZUZyYWdtZW50KGZhbHNlKQogICAgICAgIC5idWlsZCgpOwogICAgfQoKICAgIHJldHVybiB0aGlzCiAgICAgIC5ub3JtYWxpemVQcm90b2NvbChmYWxzZSkKICAgICAgLm5vcm1hbGl6ZUhvc3RuYW1lKGZhbHNlKQogICAgICAubm9ybWFsaXplUG9ydChmYWxzZSkKICAgICAgLm5vcm1hbGl6ZVBhdGgoZmFsc2UpCiAgICAgIC5ub3JtYWxpemVRdWVyeShmYWxzZSkKICAgICAgLm5vcm1hbGl6ZUZyYWdtZW50KGZhbHNlKQogICAgICAuYnVpbGQoKTsKICB9OwogIHAubm9ybWFsaXplUHJvdG9jb2wgPSBmdW5jdGlvbihidWlsZCkgewogICAgaWYgKHR5cGVvZiB0aGlzLl9wYXJ0cy5wcm90b2NvbCA9PT0gJ3N0cmluZycpIHsKICAgICAgdGhpcy5fcGFydHMucHJvdG9jb2wgPSB0aGlzLl9wYXJ0cy5wcm90b2NvbC50b0xvd2VyQ2FzZSgpOwogICAgICB0aGlzLmJ1aWxkKCFidWlsZCk7CiAgICB9CgogICAgcmV0dXJuIHRoaXM7CiAgfTsKICBwLm5vcm1hbGl6ZUhvc3RuYW1lID0gZnVuY3Rpb24oYnVpbGQpIHsKICAgIGlmICh0aGlzLl9wYXJ0cy5ob3N0bmFtZSkgewogICAgICBpZiAodGhpcy5pcygnSUROJykgJiYgcHVueWNvZGUpIHsKICAgICAgICB0aGlzLl9wYXJ0cy5ob3N0bmFtZSA9IHB1bnljb2RlLnRvQVNDSUkodGhpcy5fcGFydHMuaG9zdG5hbWUpOwogICAgICB9IGVsc2UgaWYgKHRoaXMuaXMoJ0lQdjYnKSAmJiBJUHY2KSB7CiAgICAgICAgdGhpcy5fcGFydHMuaG9zdG5hbWUgPSBJUHY2LmJlc3QodGhpcy5fcGFydHMuaG9zdG5hbWUpOwogICAgICB9CgogICAgICB0aGlzLl9wYXJ0cy5ob3N0bmFtZSA9IHRoaXMuX3BhcnRzLmhvc3RuYW1lLnRvTG93ZXJDYXNlKCk7CiAgICAgIHRoaXMuYnVpbGQoIWJ1aWxkKTsKICAgIH0KCiAgICByZXR1cm4gdGhpczsKICB9OwogIHAubm9ybWFsaXplUG9ydCA9IGZ1bmN0aW9uKGJ1aWxkKSB7CiAgICAvLyByZW1vdmUgcG9ydCBvZiBpdCdzIHRoZSBwcm90b2NvbCdzIGRlZmF1bHQKICAgIGlmICh0eXBlb2YgdGhpcy5fcGFydHMucHJvdG9jb2wgPT09ICdzdHJpbmcnICYmIHRoaXMuX3BhcnRzLnBvcnQgPT09IFVSSS5kZWZhdWx0UG9ydHNbdGhpcy5fcGFydHMucHJvdG9jb2xdKSB7CiAgICAgIHRoaXMuX3BhcnRzLnBvcnQgPSBudWxsOwogICAgICB0aGlzLmJ1aWxkKCFidWlsZCk7CiAgICB9CgogICAgcmV0dXJuIHRoaXM7CiAgfTsKICBwLm5vcm1hbGl6ZVBhdGggPSBmdW5jdGlvbihidWlsZCkgewogICAgdmFyIF9wYXRoID0gdGhpcy5fcGFydHMucGF0aDsKICAgIGlmICghX3BhdGgpIHsKICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CgogICAgaWYgKHRoaXMuX3BhcnRzLnVybikgewogICAgICB0aGlzLl9wYXJ0cy5wYXRoID0gVVJJLnJlY29kZVVyblBhdGgodGhpcy5fcGFydHMucGF0aCk7CiAgICAgIHRoaXMuYnVpbGQoIWJ1aWxkKTsKICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CgogICAgaWYgKHRoaXMuX3BhcnRzLnBhdGggPT09ICcvJykgewogICAgICByZXR1cm4gdGhpczsKICAgIH0KCiAgICBfcGF0aCA9IFVSSS5yZWNvZGVQYXRoKF9wYXRoKTsKCiAgICB2YXIgX3dhc19yZWxhdGl2ZTsKICAgIHZhciBfbGVhZGluZ1BhcmVudHMgPSAnJzsKICAgIHZhciBfcGFyZW50LCBfcG9zOwoKICAgIC8vIGhhbmRsZSByZWxhdGl2ZSBwYXRocwogICAgaWYgKF9wYXRoLmNoYXJBdCgwKSAhPT0gJy8nKSB7CiAgICAgIF93YXNfcmVsYXRpdmUgPSB0cnVlOwogICAgICBfcGF0aCA9ICcvJyArIF9wYXRoOwogICAgfQoKICAgIC8vIGhhbmRsZSByZWxhdGl2ZSBmaWxlcyAoYXMgb3Bwb3NlZCB0byBkaXJlY3RvcmllcykKICAgIGlmIChfcGF0aC5zbGljZSgtMykgPT09ICcvLi4nIHx8IF9wYXRoLnNsaWNlKC0yKSA9PT0gJy8uJykgewogICAgICBfcGF0aCArPSAnLyc7CiAgICB9CgogICAgLy8gcmVzb2x2ZSBzaW1wbGVzCiAgICBfcGF0aCA9IF9wYXRoCiAgICAgIC5yZXBsYWNlKC8oXC8oXC5cLykrKXwoXC9cLiQpL2csICcvJykKICAgICAgLnJlcGxhY2UoL1wvezIsfS9nLCAnLycpOwoKICAgIC8vIHJlbWVtYmVyIGxlYWRpbmcgcGFyZW50cwogICAgaWYgKF93YXNfcmVsYXRpdmUpIHsKICAgICAgX2xlYWRpbmdQYXJlbnRzID0gX3BhdGguc3Vic3RyaW5nKDEpLm1hdGNoKC9eKFwuXC5cLykrLykgfHwgJyc7CiAgICAgIGlmIChfbGVhZGluZ1BhcmVudHMpIHsKICAgICAgICBfbGVhZGluZ1BhcmVudHMgPSBfbGVhZGluZ1BhcmVudHNbMF07CiAgICAgIH0KICAgIH0KCiAgICAvLyByZXNvbHZlIHBhcmVudHMKICAgIHdoaWxlICh0cnVlKSB7CiAgICAgIF9wYXJlbnQgPSBfcGF0aC5zZWFyY2goL1wvXC5cLihcL3wkKS8pOwogICAgICBpZiAoX3BhcmVudCA9PT0gLTEpIHsKICAgICAgICAvLyBubyBtb3JlIC4uLyB0byByZXNvbHZlCiAgICAgICAgYnJlYWs7CiAgICAgIH0gZWxzZSBpZiAoX3BhcmVudCA9PT0gMCkgewogICAgICAgIC8vIHRvcCBsZXZlbCBjYW5ub3QgYmUgcmVsYXRpdmUsIHNraXAgaXQKICAgICAgICBfcGF0aCA9IF9wYXRoLnN1YnN0cmluZygzKTsKICAgICAgICBjb250aW51ZTsKICAgICAgfQoKICAgICAgX3BvcyA9IF9wYXRoLnN1YnN0cmluZygwLCBfcGFyZW50KS5sYXN0SW5kZXhPZignLycpOwogICAgICBpZiAoX3BvcyA9PT0gLTEpIHsKICAgICAgICBfcG9zID0gX3BhcmVudDsKICAgICAgfQogICAgICBfcGF0aCA9IF9wYXRoLnN1YnN0cmluZygwLCBfcG9zKSArIF9wYXRoLnN1YnN0cmluZyhfcGFyZW50ICsgMyk7CiAgICB9CgogICAgLy8gcmV2ZXJ0IHRvIHJlbGF0aXZlCiAgICBpZiAoX3dhc19yZWxhdGl2ZSAmJiB0aGlzLmlzKCdyZWxhdGl2ZScpKSB7CiAgICAgIF9wYXRoID0gX2xlYWRpbmdQYXJlbnRzICsgX3BhdGguc3Vic3RyaW5nKDEpOwogICAgfQoKICAgIHRoaXMuX3BhcnRzLnBhdGggPSBfcGF0aDsKICAgIHRoaXMuYnVpbGQoIWJ1aWxkKTsKICAgIHJldHVybiB0aGlzOwogIH07CiAgcC5ub3JtYWxpemVQYXRobmFtZSA9IHAubm9ybWFsaXplUGF0aDsKICBwLm5vcm1hbGl6ZVF1ZXJ5ID0gZnVuY3Rpb24oYnVpbGQpIHsKICAgIGlmICh0eXBlb2YgdGhpcy5fcGFydHMucXVlcnkgPT09ICdzdHJpbmcnKSB7CiAgICAgIGlmICghdGhpcy5fcGFydHMucXVlcnkubGVuZ3RoKSB7CiAgICAgICAgdGhpcy5fcGFydHMucXVlcnkgPSBudWxsOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMucXVlcnkoVVJJLnBhcnNlUXVlcnkodGhpcy5fcGFydHMucXVlcnksIHRoaXMuX3BhcnRzLmVzY2FwZVF1ZXJ5U3BhY2UpKTsKICAgICAgfQoKICAgICAgdGhpcy5idWlsZCghYnVpbGQpOwogICAgfQoKICAgIHJldHVybiB0aGlzOwogIH07CiAgcC5ub3JtYWxpemVGcmFnbWVudCA9IGZ1bmN0aW9uKGJ1aWxkKSB7CiAgICBpZiAoIXRoaXMuX3BhcnRzLmZyYWdtZW50KSB7CiAgICAgIHRoaXMuX3BhcnRzLmZyYWdtZW50ID0gbnVsbDsKICAgICAgdGhpcy5idWlsZCghYnVpbGQpOwogICAgfQoKICAgIHJldHVybiB0aGlzOwogIH07CiAgcC5ub3JtYWxpemVTZWFyY2ggPSBwLm5vcm1hbGl6ZVF1ZXJ5OwogIHAubm9ybWFsaXplSGFzaCA9IHAubm9ybWFsaXplRnJhZ21lbnQ7CgogIHAuaXNvODg1OSA9IGZ1bmN0aW9uKCkgewogICAgLy8gZXhwZWN0IHVuaWNvZGUgaW5wdXQsIGlzbzg4NTkgb3V0cHV0CiAgICB2YXIgZSA9IFVSSS5lbmNvZGU7CiAgICB2YXIgZCA9IFVSSS5kZWNvZGU7CgogICAgVVJJLmVuY29kZSA9IGVzY2FwZTsKICAgIFVSSS5kZWNvZGUgPSBkZWNvZGVVUklDb21wb25lbnQ7CiAgICB0cnkgewogICAgICB0aGlzLm5vcm1hbGl6ZSgpOwogICAgfSBmaW5hbGx5IHsKICAgICAgVVJJLmVuY29kZSA9IGU7CiAgICAgIFVSSS5kZWNvZGUgPSBkOwogICAgfQogICAgcmV0dXJuIHRoaXM7CiAgfTsKCiAgcC51bmljb2RlID0gZnVuY3Rpb24oKSB7CiAgICAvLyBleHBlY3QgaXNvODg1OSBpbnB1dCwgdW5pY29kZSBvdXRwdXQKICAgIHZhciBlID0gVVJJLmVuY29kZTsKICAgIHZhciBkID0gVVJJLmRlY29kZTsKCiAgICBVUkkuZW5jb2RlID0gc3RyaWN0RW5jb2RlVVJJQ29tcG9uZW50OwogICAgVVJJLmRlY29kZSA9IHVuZXNjYXBlOwogICAgdHJ5IHsKICAgICAgdGhpcy5ub3JtYWxpemUoKTsKICAgIH0gZmluYWxseSB7CiAgICAgIFVSSS5lbmNvZGUgPSBlOwogICAgICBVUkkuZGVjb2RlID0gZDsKICAgIH0KICAgIHJldHVybiB0aGlzOwogIH07CgogIHAucmVhZGFibGUgPSBmdW5jdGlvbigpIHsKICAgIHZhciB1cmkgPSB0aGlzLmNsb25lKCk7CiAgICAvLyByZW1vdmluZyB1c2VybmFtZSwgcGFzc3dvcmQsIGJlY2F1c2UgdGhleSBzaG91bGRuJ3QgYmUgZGlzcGxheWVkIGFjY29yZGluZyB0byBSRkMgMzk4NgogICAgdXJpLnVzZXJuYW1lKCcnKS5wYXNzd29yZCgnJykubm9ybWFsaXplKCk7CiAgICB2YXIgdCA9ICcnOwogICAgaWYgKHVyaS5fcGFydHMucHJvdG9jb2wpIHsKICAgICAgdCArPSB1cmkuX3BhcnRzLnByb3RvY29sICsgJzovLyc7CiAgICB9CgogICAgaWYgKHVyaS5fcGFydHMuaG9zdG5hbWUpIHsKICAgICAgaWYgKHVyaS5pcygncHVueWNvZGUnKSAmJiBwdW55Y29kZSkgewogICAgICAgIHQgKz0gcHVueWNvZGUudG9Vbmljb2RlKHVyaS5fcGFydHMuaG9zdG5hbWUpOwogICAgICAgIGlmICh1cmkuX3BhcnRzLnBvcnQpIHsKICAgICAgICAgIHQgKz0gJzonICsgdXJpLl9wYXJ0cy5wb3J0OwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICB0ICs9IHVyaS5ob3N0KCk7CiAgICAgIH0KICAgIH0KCiAgICBpZiAodXJpLl9wYXJ0cy5ob3N0bmFtZSAmJiB1cmkuX3BhcnRzLnBhdGggJiYgdXJpLl9wYXJ0cy5wYXRoLmNoYXJBdCgwKSAhPT0gJy8nKSB7CiAgICAgIHQgKz0gJy8nOwogICAgfQoKICAgIHQgKz0gdXJpLnBhdGgodHJ1ZSk7CiAgICBpZiAodXJpLl9wYXJ0cy5xdWVyeSkgewogICAgICB2YXIgcSA9ICcnOwogICAgICBmb3IgKHZhciBpID0gMCwgcXAgPSB1cmkuX3BhcnRzLnF1ZXJ5LnNwbGl0KCcmJyksIGwgPSBxcC5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICB2YXIga3YgPSAocXBbaV0gfHwgJycpLnNwbGl0KCc9Jyk7CiAgICAgICAgcSArPSAnJicgKyBVUkkuZGVjb2RlUXVlcnkoa3ZbMF0sIHRoaXMuX3BhcnRzLmVzY2FwZVF1ZXJ5U3BhY2UpCiAgICAgICAgICAucmVwbGFjZSgvJi9nLCAnJTI2Jyk7CgogICAgICAgIGlmIChrdlsxXSAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICBxICs9ICc9JyArIFVSSS5kZWNvZGVRdWVyeShrdlsxXSwgdGhpcy5fcGFydHMuZXNjYXBlUXVlcnlTcGFjZSkKICAgICAgICAgICAgLnJlcGxhY2UoLyYvZywgJyUyNicpOwogICAgICAgIH0KICAgICAgfQogICAgICB0ICs9ICc/JyArIHEuc3Vic3RyaW5nKDEpOwogICAgfQoKICAgIHQgKz0gVVJJLmRlY29kZVF1ZXJ5KHVyaS5oYXNoKCksIHRydWUpOwogICAgcmV0dXJuIHQ7CiAgfTsKCiAgLy8gcmVzb2x2aW5nIHJlbGF0aXZlIGFuZCBhYnNvbHV0ZSBVUkxzCiAgcC5hYnNvbHV0ZVRvID0gZnVuY3Rpb24oYmFzZSkgewogICAgdmFyIHJlc29sdmVkID0gdGhpcy5jbG9uZSgpOwogICAgdmFyIHByb3BlcnRpZXMgPSBbJ3Byb3RvY29sJywgJ3VzZXJuYW1lJywgJ3Bhc3N3b3JkJywgJ2hvc3RuYW1lJywgJ3BvcnQnXTsKICAgIHZhciBiYXNlZGlyLCBpLCBwOwoKICAgIGlmICh0aGlzLl9wYXJ0cy51cm4pIHsKICAgICAgdGhyb3cgbmV3IEVycm9yKCdVUk5zIGRvIG5vdCBoYXZlIGFueSBnZW5lcmFsbHkgZGVmaW5lZCBoaWVyYXJjaGljYWwgY29tcG9uZW50cycpOwogICAgfQoKICAgIGlmICghKGJhc2UgaW5zdGFuY2VvZiBVUkkpKSB7CiAgICAgIGJhc2UgPSBuZXcgVVJJKGJhc2UpOwogICAgfQoKICAgIGlmICghcmVzb2x2ZWQuX3BhcnRzLnByb3RvY29sKSB7CiAgICAgIHJlc29sdmVkLl9wYXJ0cy5wcm90b2NvbCA9IGJhc2UuX3BhcnRzLnByb3RvY29sOwogICAgfQoKICAgIGlmICh0aGlzLl9wYXJ0cy5ob3N0bmFtZSkgewogICAgICByZXR1cm4gcmVzb2x2ZWQ7CiAgICB9CgogICAgZm9yIChpID0gMDsgKHAgPSBwcm9wZXJ0aWVzW2ldKTsgaSsrKSB7CiAgICAgIHJlc29sdmVkLl9wYXJ0c1twXSA9IGJhc2UuX3BhcnRzW3BdOwogICAgfQoKICAgIGlmICghcmVzb2x2ZWQuX3BhcnRzLnBhdGgpIHsKICAgICAgcmVzb2x2ZWQuX3BhcnRzLnBhdGggPSBiYXNlLl9wYXJ0cy5wYXRoOwogICAgICBpZiAoIXJlc29sdmVkLl9wYXJ0cy5xdWVyeSkgewogICAgICAgIHJlc29sdmVkLl9wYXJ0cy5xdWVyeSA9IGJhc2UuX3BhcnRzLnF1ZXJ5OwogICAgICB9CiAgICB9IGVsc2UgaWYgKHJlc29sdmVkLl9wYXJ0cy5wYXRoLnN1YnN0cmluZygtMikgPT09ICcuLicpIHsKICAgICAgcmVzb2x2ZWQuX3BhcnRzLnBhdGggKz0gJy8nOwogICAgfQoKICAgIGlmIChyZXNvbHZlZC5wYXRoKCkuY2hhckF0KDApICE9PSAnLycpIHsKICAgICAgYmFzZWRpciA9IGJhc2UuZGlyZWN0b3J5KCk7CiAgICAgIGJhc2VkaXIgPSBiYXNlZGlyID8gYmFzZWRpciA6IGJhc2UucGF0aCgpLmluZGV4T2YoJy8nKSA9PT0gMCA/ICcvJyA6ICcnOwogICAgICByZXNvbHZlZC5fcGFydHMucGF0aCA9IChiYXNlZGlyID8gKGJhc2VkaXIgKyAnLycpIDogJycpICsgcmVzb2x2ZWQuX3BhcnRzLnBhdGg7CiAgICAgIHJlc29sdmVkLm5vcm1hbGl6ZVBhdGgoKTsKICAgIH0KCiAgICByZXNvbHZlZC5idWlsZCgpOwogICAgcmV0dXJuIHJlc29sdmVkOwogIH07CiAgcC5yZWxhdGl2ZVRvID0gZnVuY3Rpb24oYmFzZSkgewogICAgdmFyIHJlbGF0aXZlID0gdGhpcy5jbG9uZSgpLm5vcm1hbGl6ZSgpOwogICAgdmFyIHJlbGF0aXZlUGFydHMsIGJhc2VQYXJ0cywgY29tbW9uLCByZWxhdGl2ZVBhdGgsIGJhc2VQYXRoOwoKICAgIGlmIChyZWxhdGl2ZS5fcGFydHMudXJuKSB7CiAgICAgIHRocm93IG5ldyBFcnJvcignVVJOcyBkbyBub3QgaGF2ZSBhbnkgZ2VuZXJhbGx5IGRlZmluZWQgaGllcmFyY2hpY2FsIGNvbXBvbmVudHMnKTsKICAgIH0KCiAgICBiYXNlID0gbmV3IFVSSShiYXNlKS5ub3JtYWxpemUoKTsKICAgIHJlbGF0aXZlUGFydHMgPSByZWxhdGl2ZS5fcGFydHM7CiAgICBiYXNlUGFydHMgPSBiYXNlLl9wYXJ0czsKICAgIHJlbGF0aXZlUGF0aCA9IHJlbGF0aXZlLnBhdGgoKTsKICAgIGJhc2VQYXRoID0gYmFzZS5wYXRoKCk7CgogICAgaWYgKHJlbGF0aXZlUGF0aC5jaGFyQXQoMCkgIT09ICcvJykgewogICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VSSSBpcyBhbHJlYWR5IHJlbGF0aXZlJyk7CiAgICB9CgogICAgaWYgKGJhc2VQYXRoLmNoYXJBdCgwKSAhPT0gJy8nKSB7CiAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGNhbGN1bGF0ZSBhIFVSSSByZWxhdGl2ZSB0byBhbm90aGVyIHJlbGF0aXZlIFVSSScpOwogICAgfQoKICAgIGlmIChyZWxhdGl2ZVBhcnRzLnByb3RvY29sID09PSBiYXNlUGFydHMucHJvdG9jb2wpIHsKICAgICAgcmVsYXRpdmVQYXJ0cy5wcm90b2NvbCA9IG51bGw7CiAgICB9CgogICAgaWYgKHJlbGF0aXZlUGFydHMudXNlcm5hbWUgIT09IGJhc2VQYXJ0cy51c2VybmFtZSB8fCByZWxhdGl2ZVBhcnRzLnBhc3N3b3JkICE9PSBiYXNlUGFydHMucGFzc3dvcmQpIHsKICAgICAgcmV0dXJuIHJlbGF0aXZlLmJ1aWxkKCk7CiAgICB9CgogICAgaWYgKHJlbGF0aXZlUGFydHMucHJvdG9jb2wgIT09IG51bGwgfHwgcmVsYXRpdmVQYXJ0cy51c2VybmFtZSAhPT0gbnVsbCB8fCByZWxhdGl2ZVBhcnRzLnBhc3N3b3JkICE9PSBudWxsKSB7CiAgICAgIHJldHVybiByZWxhdGl2ZS5idWlsZCgpOwogICAgfQoKICAgIGlmIChyZWxhdGl2ZVBhcnRzLmhvc3RuYW1lID09PSBiYXNlUGFydHMuaG9zdG5hbWUgJiYgcmVsYXRpdmVQYXJ0cy5wb3J0ID09PSBiYXNlUGFydHMucG9ydCkgewogICAgICByZWxhdGl2ZVBhcnRzLmhvc3RuYW1lID0gbnVsbDsKICAgICAgcmVsYXRpdmVQYXJ0cy5wb3J0ID0gbnVsbDsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiByZWxhdGl2ZS5idWlsZCgpOwogICAgfQoKICAgIGlmIChyZWxhdGl2ZVBhdGggPT09IGJhc2VQYXRoKSB7CiAgICAgIHJlbGF0aXZlUGFydHMucGF0aCA9ICcnOwogICAgICByZXR1cm4gcmVsYXRpdmUuYnVpbGQoKTsKICAgIH0KCiAgICAvLyBkZXRlcm1pbmUgY29tbW9uIHN1YiBwYXRoCiAgICBjb21tb24gPSBVUkkuY29tbW9uUGF0aChyZWxhdGl2ZVBhdGgsIGJhc2VQYXRoKTsKCiAgICAvLyBJZiB0aGUgcGF0aHMgaGF2ZSBub3RoaW5nIGluIGNvbW1vbiwgcmV0dXJuIGEgcmVsYXRpdmUgVVJMIHdpdGggdGhlIGFic29sdXRlIHBhdGguCiAgICBpZiAoIWNvbW1vbikgewogICAgICByZXR1cm4gcmVsYXRpdmUuYnVpbGQoKTsKICAgIH0KCiAgICB2YXIgcGFyZW50cyA9IGJhc2VQYXJ0cy5wYXRoCiAgICAgIC5zdWJzdHJpbmcoY29tbW9uLmxlbmd0aCkKICAgICAgLnJlcGxhY2UoL1teXC9dKiQvLCAnJykKICAgICAgLnJlcGxhY2UoLy4qP1wvL2csICcuLi8nKTsKCiAgICByZWxhdGl2ZVBhcnRzLnBhdGggPSAocGFyZW50cyArIHJlbGF0aXZlUGFydHMucGF0aC5zdWJzdHJpbmcoY29tbW9uLmxlbmd0aCkpIHx8ICcuLyc7CgogICAgcmV0dXJuIHJlbGF0aXZlLmJ1aWxkKCk7CiAgfTsKCiAgLy8gY29tcGFyaW5nIFVSSXMKICBwLmVxdWFscyA9IGZ1bmN0aW9uKHVyaSkgewogICAgdmFyIG9uZSA9IHRoaXMuY2xvbmUoKTsKICAgIHZhciB0d28gPSBuZXcgVVJJKHVyaSk7CiAgICB2YXIgb25lX21hcCA9IHt9OwogICAgdmFyIHR3b19tYXAgPSB7fTsKICAgIHZhciBjaGVja2VkID0ge307CiAgICB2YXIgb25lX3F1ZXJ5LCB0d29fcXVlcnksIGtleTsKCiAgICBvbmUubm9ybWFsaXplKCk7CiAgICB0d28ubm9ybWFsaXplKCk7CgogICAgLy8gZXhhY3QgbWF0Y2gKICAgIGlmIChvbmUudG9TdHJpbmcoKSA9PT0gdHdvLnRvU3RyaW5nKCkpIHsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgLy8gZXh0cmFjdCBxdWVyeSBzdHJpbmcKICAgIG9uZV9xdWVyeSA9IG9uZS5xdWVyeSgpOwogICAgdHdvX3F1ZXJ5ID0gdHdvLnF1ZXJ5KCk7CiAgICBvbmUucXVlcnkoJycpOwogICAgdHdvLnF1ZXJ5KCcnKTsKCiAgICAvLyBkZWZpbml0ZWx5IG5vdCBlcXVhbCBpZiBub3QgZXZlbiBub24tcXVlcnkgcGFydHMgbWF0Y2gKICAgIGlmIChvbmUudG9TdHJpbmcoKSAhPT0gdHdvLnRvU3RyaW5nKCkpIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQoKICAgIC8vIHF1ZXJ5IHBhcmFtZXRlcnMgaGF2ZSB0aGUgc2FtZSBsZW5ndGgsIGV2ZW4gaWYgdGhleSdyZSBwZXJtdXRlZAogICAgaWYgKG9uZV9xdWVyeS5sZW5ndGggIT09IHR3b19xdWVyeS5sZW5ndGgpIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQoKICAgIG9uZV9tYXAgPSBVUkkucGFyc2VRdWVyeShvbmVfcXVlcnksIHRoaXMuX3BhcnRzLmVzY2FwZVF1ZXJ5U3BhY2UpOwogICAgdHdvX21hcCA9IFVSSS5wYXJzZVF1ZXJ5KHR3b19xdWVyeSwgdGhpcy5fcGFydHMuZXNjYXBlUXVlcnlTcGFjZSk7CgogICAgZm9yIChrZXkgaW4gb25lX21hcCkgewogICAgICBpZiAoaGFzT3duLmNhbGwob25lX21hcCwga2V5KSkgewogICAgICAgIGlmICghaXNBcnJheShvbmVfbWFwW2tleV0pKSB7CiAgICAgICAgICBpZiAob25lX21hcFtrZXldICE9PSB0d29fbWFwW2tleV0pIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSBpZiAoIWFycmF5c0VxdWFsKG9uZV9tYXBba2V5XSwgdHdvX21hcFtrZXldKSkgewogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KCiAgICAgICAgY2hlY2tlZFtrZXldID0gdHJ1ZTsKICAgICAgfQogICAgfQoKICAgIGZvciAoa2V5IGluIHR3b19tYXApIHsKICAgICAgaWYgKGhhc093bi5jYWxsKHR3b19tYXAsIGtleSkpIHsKICAgICAgICBpZiAoIWNoZWNrZWRba2V5XSkgewogICAgICAgICAgLy8gdHdvIGNvbnRhaW5zIGEgcGFyYW1ldGVyIG5vdCBwcmVzZW50IGluIG9uZQogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIHJldHVybiB0cnVlOwogIH07CgogIC8vIHN0YXRlCiAgcC5kdXBsaWNhdGVRdWVyeVBhcmFtZXRlcnMgPSBmdW5jdGlvbih2KSB7CiAgICB0aGlzLl9wYXJ0cy5kdXBsaWNhdGVRdWVyeVBhcmFtZXRlcnMgPSAhIXY7CiAgICByZXR1cm4gdGhpczsKICB9OwoKICBwLmVzY2FwZVF1ZXJ5U3BhY2UgPSBmdW5jdGlvbih2KSB7CiAgICB0aGlzLl9wYXJ0cy5lc2NhcGVRdWVyeVNwYWNlID0gISF2OwogICAgcmV0dXJuIHRoaXM7CiAgfTsKCiAgcmV0dXJuIFVSSTsKfSkpOwoKfSx7Ii4vSVB2NiI6MiwiLi9TZWNvbmRMZXZlbERvbWFpbnMiOjMsIi4vcHVueWNvZGUiOjV9XSw1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKKGZ1bmN0aW9uIChnbG9iYWwpewovKiEgaHR0cHM6Ly9tdGhzLmJlL3B1bnljb2RlIHYxLjQuMCBieSBAbWF0aGlhcyAqLwo7KGZ1bmN0aW9uKHJvb3QpIHsKCgkvKiogRGV0ZWN0IGZyZWUgdmFyaWFibGVzICovCgl2YXIgZnJlZUV4cG9ydHMgPSB0eXBlb2YgZXhwb3J0cyA9PSAnb2JqZWN0JyAmJiBleHBvcnRzICYmCgkJIWV4cG9ydHMubm9kZVR5cGUgJiYgZXhwb3J0czsKCXZhciBmcmVlTW9kdWxlID0gdHlwZW9mIG1vZHVsZSA9PSAnb2JqZWN0JyAmJiBtb2R1bGUgJiYKCQkhbW9kdWxlLm5vZGVUeXBlICYmIG1vZHVsZTsKCXZhciBmcmVlR2xvYmFsID0gdHlwZW9mIGdsb2JhbCA9PSAnb2JqZWN0JyAmJiBnbG9iYWw7CglpZiAoCgkJZnJlZUdsb2JhbC5nbG9iYWwgPT09IGZyZWVHbG9iYWwgfHwKCQlmcmVlR2xvYmFsLndpbmRvdyA9PT0gZnJlZUdsb2JhbCB8fAoJCWZyZWVHbG9iYWwuc2VsZiA9PT0gZnJlZUdsb2JhbAoJKSB7CgkJcm9vdCA9IGZyZWVHbG9iYWw7Cgl9CgoJLyoqCgkgKiBUaGUgYHB1bnljb2RlYCBvYmplY3QuCgkgKiBAbmFtZSBwdW55Y29kZQoJICogQHR5cGUgT2JqZWN0CgkgKi8KCXZhciBwdW55Y29kZSwKCgkvKiogSGlnaGVzdCBwb3NpdGl2ZSBzaWduZWQgMzItYml0IGZsb2F0IHZhbHVlICovCgltYXhJbnQgPSAyMTQ3NDgzNjQ3LCAvLyBha2EuIDB4N0ZGRkZGRkYgb3IgMl4zMS0xCgoJLyoqIEJvb3RzdHJpbmcgcGFyYW1ldGVycyAqLwoJYmFzZSA9IDM2LAoJdE1pbiA9IDEsCgl0TWF4ID0gMjYsCglza2V3ID0gMzgsCglkYW1wID0gNzAwLAoJaW5pdGlhbEJpYXMgPSA3MiwKCWluaXRpYWxOID0gMTI4LCAvLyAweDgwCglkZWxpbWl0ZXIgPSAnLScsIC8vICdceDJEJwoKCS8qKiBSZWd1bGFyIGV4cHJlc3Npb25zICovCglyZWdleFB1bnljb2RlID0gL154bi0tLywKCXJlZ2V4Tm9uQVNDSUkgPSAvW15ceDIwLVx4N0VdLywgLy8gdW5wcmludGFibGUgQVNDSUkgY2hhcnMgKyBub24tQVNDSUkgY2hhcnMKCXJlZ2V4U2VwYXJhdG9ycyA9IC9bXHgyRVx1MzAwMlx1RkYwRVx1RkY2MV0vZywgLy8gUkZDIDM0OTAgc2VwYXJhdG9ycwoKCS8qKiBFcnJvciBtZXNzYWdlcyAqLwoJZXJyb3JzID0gewoJCSdvdmVyZmxvdyc6ICdPdmVyZmxvdzogaW5wdXQgbmVlZHMgd2lkZXIgaW50ZWdlcnMgdG8gcHJvY2VzcycsCgkJJ25vdC1iYXNpYyc6ICdJbGxlZ2FsIGlucHV0ID49IDB4ODAgKG5vdCBhIGJhc2ljIGNvZGUgcG9pbnQpJywKCQknaW52YWxpZC1pbnB1dCc6ICdJbnZhbGlkIGlucHV0JwoJfSwKCgkvKiogQ29udmVuaWVuY2Ugc2hvcnRjdXRzICovCgliYXNlTWludXNUTWluID0gYmFzZSAtIHRNaW4sCglmbG9vciA9IE1hdGguZmxvb3IsCglzdHJpbmdGcm9tQ2hhckNvZGUgPSBTdHJpbmcuZnJvbUNoYXJDb2RlLAoKCS8qKiBUZW1wb3JhcnkgdmFyaWFibGUgKi8KCWtleTsKCgkvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi8KCgkvKioKCSAqIEEgZ2VuZXJpYyBlcnJvciB1dGlsaXR5IGZ1bmN0aW9uLgoJICogQHByaXZhdGUKCSAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlIFRoZSBlcnJvciB0eXBlLgoJICogQHJldHVybnMge0Vycm9yfSBUaHJvd3MgYSBgUmFuZ2VFcnJvcmAgd2l0aCB0aGUgYXBwbGljYWJsZSBlcnJvciBtZXNzYWdlLgoJICovCglmdW5jdGlvbiBlcnJvcih0eXBlKSB7CgkJdGhyb3cgbmV3IFJhbmdlRXJyb3IoZXJyb3JzW3R5cGVdKTsKCX0KCgkvKioKCSAqIEEgZ2VuZXJpYyBgQXJyYXkjbWFwYCB1dGlsaXR5IGZ1bmN0aW9uLgoJICogQHByaXZhdGUKCSAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBpdGVyYXRlIG92ZXIuCgkgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBUaGUgZnVuY3Rpb24gdGhhdCBnZXRzIGNhbGxlZCBmb3IgZXZlcnkgYXJyYXkKCSAqIGl0ZW0uCgkgKiBAcmV0dXJucyB7QXJyYXl9IEEgbmV3IGFycmF5IG9mIHZhbHVlcyByZXR1cm5lZCBieSB0aGUgY2FsbGJhY2sgZnVuY3Rpb24uCgkgKi8KCWZ1bmN0aW9uIG1hcChhcnJheSwgZm4pIHsKCQl2YXIgbGVuZ3RoID0gYXJyYXkubGVuZ3RoOwoJCXZhciByZXN1bHQgPSBbXTsKCQl3aGlsZSAobGVuZ3RoLS0pIHsKCQkJcmVzdWx0W2xlbmd0aF0gPSBmbihhcnJheVtsZW5ndGhdKTsKCQl9CgkJcmV0dXJuIHJlc3VsdDsKCX0KCgkvKioKCSAqIEEgc2ltcGxlIGBBcnJheSNtYXBgLWxpa2Ugd3JhcHBlciB0byB3b3JrIHdpdGggZG9tYWluIG5hbWUgc3RyaW5ncyBvciBlbWFpbAoJICogYWRkcmVzc2VzLgoJICogQHByaXZhdGUKCSAqIEBwYXJhbSB7U3RyaW5nfSBkb21haW4gVGhlIGRvbWFpbiBuYW1lIG9yIGVtYWlsIGFkZHJlc3MuCgkgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBUaGUgZnVuY3Rpb24gdGhhdCBnZXRzIGNhbGxlZCBmb3IgZXZlcnkKCSAqIGNoYXJhY3Rlci4KCSAqIEByZXR1cm5zIHtBcnJheX0gQSBuZXcgc3RyaW5nIG9mIGNoYXJhY3RlcnMgcmV0dXJuZWQgYnkgdGhlIGNhbGxiYWNrCgkgKiBmdW5jdGlvbi4KCSAqLwoJZnVuY3Rpb24gbWFwRG9tYWluKHN0cmluZywgZm4pIHsKCQl2YXIgcGFydHMgPSBzdHJpbmcuc3BsaXQoJ0AnKTsKCQl2YXIgcmVzdWx0ID0gJyc7CgkJaWYgKHBhcnRzLmxlbmd0aCA+IDEpIHsKCQkJLy8gSW4gZW1haWwgYWRkcmVzc2VzLCBvbmx5IHRoZSBkb21haW4gbmFtZSBzaG91bGQgYmUgcHVueWNvZGVkLiBMZWF2ZQoJCQkvLyB0aGUgbG9jYWwgcGFydCAoaS5lLiBldmVyeXRoaW5nIHVwIHRvIGBAYCkgaW50YWN0LgoJCQlyZXN1bHQgPSBwYXJ0c1swXSArICdAJzsKCQkJc3RyaW5nID0gcGFydHNbMV07CgkJfQoJCS8vIEF2b2lkIGBzcGxpdChyZWdleClgIGZvciBJRTggY29tcGF0aWJpbGl0eS4gU2VlICMxNy4KCQlzdHJpbmcgPSBzdHJpbmcucmVwbGFjZShyZWdleFNlcGFyYXRvcnMsICdceDJFJyk7CgkJdmFyIGxhYmVscyA9IHN0cmluZy5zcGxpdCgnLicpOwoJCXZhciBlbmNvZGVkID0gbWFwKGxhYmVscywgZm4pLmpvaW4oJy4nKTsKCQlyZXR1cm4gcmVzdWx0ICsgZW5jb2RlZDsKCX0KCgkvKioKCSAqIENyZWF0ZXMgYW4gYXJyYXkgY29udGFpbmluZyB0aGUgbnVtZXJpYyBjb2RlIHBvaW50cyBvZiBlYWNoIFVuaWNvZGUKCSAqIGNoYXJhY3RlciBpbiB0aGUgc3RyaW5nLiBXaGlsZSBKYXZhU2NyaXB0IHVzZXMgVUNTLTIgaW50ZXJuYWxseSwKCSAqIHRoaXMgZnVuY3Rpb24gd2lsbCBjb252ZXJ0IGEgcGFpciBvZiBzdXJyb2dhdGUgaGFsdmVzIChlYWNoIG9mIHdoaWNoCgkgKiBVQ1MtMiBleHBvc2VzIGFzIHNlcGFyYXRlIGNoYXJhY3RlcnMpIGludG8gYSBzaW5nbGUgY29kZSBwb2ludCwKCSAqIG1hdGNoaW5nIFVURi0xNi4KCSAqIEBzZWUgYHB1bnljb2RlLnVjczIuZW5jb2RlYAoJICogQHNlZSA8aHR0cHM6Ly9tYXRoaWFzYnluZW5zLmJlL25vdGVzL2phdmFzY3JpcHQtZW5jb2Rpbmc+CgkgKiBAbWVtYmVyT2YgcHVueWNvZGUudWNzMgoJICogQG5hbWUgZGVjb2RlCgkgKiBAcGFyYW0ge1N0cmluZ30gc3RyaW5nIFRoZSBVbmljb2RlIGlucHV0IHN0cmluZyAoVUNTLTIpLgoJICogQHJldHVybnMge0FycmF5fSBUaGUgbmV3IGFycmF5IG9mIGNvZGUgcG9pbnRzLgoJICovCglmdW5jdGlvbiB1Y3MyZGVjb2RlKHN0cmluZykgewoJCXZhciBvdXRwdXQgPSBbXSwKCQkgICAgY291bnRlciA9IDAsCgkJICAgIGxlbmd0aCA9IHN0cmluZy5sZW5ndGgsCgkJICAgIHZhbHVlLAoJCSAgICBleHRyYTsKCQl3aGlsZSAoY291bnRlciA8IGxlbmd0aCkgewoJCQl2YWx1ZSA9IHN0cmluZy5jaGFyQ29kZUF0KGNvdW50ZXIrKyk7CgkJCWlmICh2YWx1ZSA+PSAweEQ4MDAgJiYgdmFsdWUgPD0gMHhEQkZGICYmIGNvdW50ZXIgPCBsZW5ndGgpIHsKCQkJCS8vIGhpZ2ggc3Vycm9nYXRlLCBhbmQgdGhlcmUgaXMgYSBuZXh0IGNoYXJhY3RlcgoJCQkJZXh0cmEgPSBzdHJpbmcuY2hhckNvZGVBdChjb3VudGVyKyspOwoJCQkJaWYgKChleHRyYSAmIDB4RkMwMCkgPT0gMHhEQzAwKSB7IC8vIGxvdyBzdXJyb2dhdGUKCQkJCQlvdXRwdXQucHVzaCgoKHZhbHVlICYgMHgzRkYpIDw8IDEwKSArIChleHRyYSAmIDB4M0ZGKSArIDB4MTAwMDApOwoJCQkJfSBlbHNlIHsKCQkJCQkvLyB1bm1hdGNoZWQgc3Vycm9nYXRlOyBvbmx5IGFwcGVuZCB0aGlzIGNvZGUgdW5pdCwgaW4gY2FzZSB0aGUgbmV4dAoJCQkJCS8vIGNvZGUgdW5pdCBpcyB0aGUgaGlnaCBzdXJyb2dhdGUgb2YgYSBzdXJyb2dhdGUgcGFpcgoJCQkJCW91dHB1dC5wdXNoKHZhbHVlKTsKCQkJCQljb3VudGVyLS07CgkJCQl9CgkJCX0gZWxzZSB7CgkJCQlvdXRwdXQucHVzaCh2YWx1ZSk7CgkJCX0KCQl9CgkJcmV0dXJuIG91dHB1dDsKCX0KCgkvKioKCSAqIENyZWF0ZXMgYSBzdHJpbmcgYmFzZWQgb24gYW4gYXJyYXkgb2YgbnVtZXJpYyBjb2RlIHBvaW50cy4KCSAqIEBzZWUgYHB1bnljb2RlLnVjczIuZGVjb2RlYAoJICogQG1lbWJlck9mIHB1bnljb2RlLnVjczIKCSAqIEBuYW1lIGVuY29kZQoJICogQHBhcmFtIHtBcnJheX0gY29kZVBvaW50cyBUaGUgYXJyYXkgb2YgbnVtZXJpYyBjb2RlIHBvaW50cy4KCSAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSBuZXcgVW5pY29kZSBzdHJpbmcgKFVDUy0yKS4KCSAqLwoJZnVuY3Rpb24gdWNzMmVuY29kZShhcnJheSkgewoJCXJldHVybiBtYXAoYXJyYXksIGZ1bmN0aW9uKHZhbHVlKSB7CgkJCXZhciBvdXRwdXQgPSAnJzsKCQkJaWYgKHZhbHVlID4gMHhGRkZGKSB7CgkJCQl2YWx1ZSAtPSAweDEwMDAwOwoJCQkJb3V0cHV0ICs9IHN0cmluZ0Zyb21DaGFyQ29kZSh2YWx1ZSA+Pj4gMTAgJiAweDNGRiB8IDB4RDgwMCk7CgkJCQl2YWx1ZSA9IDB4REMwMCB8IHZhbHVlICYgMHgzRkY7CgkJCX0KCQkJb3V0cHV0ICs9IHN0cmluZ0Zyb21DaGFyQ29kZSh2YWx1ZSk7CgkJCXJldHVybiBvdXRwdXQ7CgkJfSkuam9pbignJyk7Cgl9CgoJLyoqCgkgKiBDb252ZXJ0cyBhIGJhc2ljIGNvZGUgcG9pbnQgaW50byBhIGRpZ2l0L2ludGVnZXIuCgkgKiBAc2VlIGBkaWdpdFRvQmFzaWMoKWAKCSAqIEBwcml2YXRlCgkgKiBAcGFyYW0ge051bWJlcn0gY29kZVBvaW50IFRoZSBiYXNpYyBudW1lcmljIGNvZGUgcG9pbnQgdmFsdWUuCgkgKiBAcmV0dXJucyB7TnVtYmVyfSBUaGUgbnVtZXJpYyB2YWx1ZSBvZiBhIGJhc2ljIGNvZGUgcG9pbnQgKGZvciB1c2UgaW4KCSAqIHJlcHJlc2VudGluZyBpbnRlZ2VycykgaW4gdGhlIHJhbmdlIGAwYCB0byBgYmFzZSAtIDFgLCBvciBgYmFzZWAgaWYKCSAqIHRoZSBjb2RlIHBvaW50IGRvZXMgbm90IHJlcHJlc2VudCBhIHZhbHVlLgoJICovCglmdW5jdGlvbiBiYXNpY1RvRGlnaXQoY29kZVBvaW50KSB7CgkJaWYgKGNvZGVQb2ludCAtIDQ4IDwgMTApIHsKCQkJcmV0dXJuIGNvZGVQb2ludCAtIDIyOwoJCX0KCQlpZiAoY29kZVBvaW50IC0gNjUgPCAyNikgewoJCQlyZXR1cm4gY29kZVBvaW50IC0gNjU7CgkJfQoJCWlmIChjb2RlUG9pbnQgLSA5NyA8IDI2KSB7CgkJCXJldHVybiBjb2RlUG9pbnQgLSA5NzsKCQl9CgkJcmV0dXJuIGJhc2U7Cgl9CgoJLyoqCgkgKiBDb252ZXJ0cyBhIGRpZ2l0L2ludGVnZXIgaW50byBhIGJhc2ljIGNvZGUgcG9pbnQuCgkgKiBAc2VlIGBiYXNpY1RvRGlnaXQoKWAKCSAqIEBwcml2YXRlCgkgKiBAcGFyYW0ge051bWJlcn0gZGlnaXQgVGhlIG51bWVyaWMgdmFsdWUgb2YgYSBiYXNpYyBjb2RlIHBvaW50LgoJICogQHJldHVybnMge051bWJlcn0gVGhlIGJhc2ljIGNvZGUgcG9pbnQgd2hvc2UgdmFsdWUgKHdoZW4gdXNlZCBmb3IKCSAqIHJlcHJlc2VudGluZyBpbnRlZ2VycykgaXMgYGRpZ2l0YCwgd2hpY2ggbmVlZHMgdG8gYmUgaW4gdGhlIHJhbmdlCgkgKiBgMGAgdG8gYGJhc2UgLSAxYC4gSWYgYGZsYWdgIGlzIG5vbi16ZXJvLCB0aGUgdXBwZXJjYXNlIGZvcm0gaXMKCSAqIHVzZWQ7IGVsc2UsIHRoZSBsb3dlcmNhc2UgZm9ybSBpcyB1c2VkLiBUaGUgYmVoYXZpb3IgaXMgdW5kZWZpbmVkCgkgKiBpZiBgZmxhZ2AgaXMgbm9uLXplcm8gYW5kIGBkaWdpdGAgaGFzIG5vIHVwcGVyY2FzZSBmb3JtLgoJICovCglmdW5jdGlvbiBkaWdpdFRvQmFzaWMoZGlnaXQsIGZsYWcpIHsKCQkvLyAgMC4uMjUgbWFwIHRvIEFTQ0lJIGEuLnogb3IgQS4uWgoJCS8vIDI2Li4zNSBtYXAgdG8gQVNDSUkgMC4uOQoJCXJldHVybiBkaWdpdCArIDIyICsgNzUgKiAoZGlnaXQgPCAyNikgLSAoKGZsYWcgIT0gMCkgPDwgNSk7Cgl9CgoJLyoqCgkgKiBCaWFzIGFkYXB0YXRpb24gZnVuY3Rpb24gYXMgcGVyIHNlY3Rpb24gMy40IG9mIFJGQyAzNDkyLgoJICogaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzM0OTIjc2VjdGlvbi0zLjQKCSAqIEBwcml2YXRlCgkgKi8KCWZ1bmN0aW9uIGFkYXB0KGRlbHRhLCBudW1Qb2ludHMsIGZpcnN0VGltZSkgewoJCXZhciBrID0gMDsKCQlkZWx0YSA9IGZpcnN0VGltZSA/IGZsb29yKGRlbHRhIC8gZGFtcCkgOiBkZWx0YSA+PiAxOwoJCWRlbHRhICs9IGZsb29yKGRlbHRhIC8gbnVtUG9pbnRzKTsKCQlmb3IgKC8qIG5vIGluaXRpYWxpemF0aW9uICovOyBkZWx0YSA+IGJhc2VNaW51c1RNaW4gKiB0TWF4ID4+IDE7IGsgKz0gYmFzZSkgewoJCQlkZWx0YSA9IGZsb29yKGRlbHRhIC8gYmFzZU1pbnVzVE1pbik7CgkJfQoJCXJldHVybiBmbG9vcihrICsgKGJhc2VNaW51c1RNaW4gKyAxKSAqIGRlbHRhIC8gKGRlbHRhICsgc2tldykpOwoJfQoKCS8qKgoJICogQ29udmVydHMgYSBQdW55Y29kZSBzdHJpbmcgb2YgQVNDSUktb25seSBzeW1ib2xzIHRvIGEgc3RyaW5nIG9mIFVuaWNvZGUKCSAqIHN5bWJvbHMuCgkgKiBAbWVtYmVyT2YgcHVueWNvZGUKCSAqIEBwYXJhbSB7U3RyaW5nfSBpbnB1dCBUaGUgUHVueWNvZGUgc3RyaW5nIG9mIEFTQ0lJLW9ubHkgc3ltYm9scy4KCSAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSByZXN1bHRpbmcgc3RyaW5nIG9mIFVuaWNvZGUgc3ltYm9scy4KCSAqLwoJZnVuY3Rpb24gZGVjb2RlKGlucHV0KSB7CgkJLy8gRG9uJ3QgdXNlIFVDUy0yCgkJdmFyIG91dHB1dCA9IFtdLAoJCSAgICBpbnB1dExlbmd0aCA9IGlucHV0Lmxlbmd0aCwKCQkgICAgb3V0LAoJCSAgICBpID0gMCwKCQkgICAgbiA9IGluaXRpYWxOLAoJCSAgICBiaWFzID0gaW5pdGlhbEJpYXMsCgkJICAgIGJhc2ljLAoJCSAgICBqLAoJCSAgICBpbmRleCwKCQkgICAgb2xkaSwKCQkgICAgdywKCQkgICAgaywKCQkgICAgZGlnaXQsCgkJICAgIHQsCgkJICAgIC8qKiBDYWNoZWQgY2FsY3VsYXRpb24gcmVzdWx0cyAqLwoJCSAgICBiYXNlTWludXNUOwoKCQkvLyBIYW5kbGUgdGhlIGJhc2ljIGNvZGUgcG9pbnRzOiBsZXQgYGJhc2ljYCBiZSB0aGUgbnVtYmVyIG9mIGlucHV0IGNvZGUKCQkvLyBwb2ludHMgYmVmb3JlIHRoZSBsYXN0IGRlbGltaXRlciwgb3IgYDBgIGlmIHRoZXJlIGlzIG5vbmUsIHRoZW4gY29weQoJCS8vIHRoZSBmaXJzdCBiYXNpYyBjb2RlIHBvaW50cyB0byB0aGUgb3V0cHV0LgoKCQliYXNpYyA9IGlucHV0Lmxhc3RJbmRleE9mKGRlbGltaXRlcik7CgkJaWYgKGJhc2ljIDwgMCkgewoJCQliYXNpYyA9IDA7CgkJfQoKCQlmb3IgKGogPSAwOyBqIDwgYmFzaWM7ICsraikgewoJCQkvLyBpZiBpdCdzIG5vdCBhIGJhc2ljIGNvZGUgcG9pbnQKCQkJaWYgKGlucHV0LmNoYXJDb2RlQXQoaikgPj0gMHg4MCkgewoJCQkJZXJyb3IoJ25vdC1iYXNpYycpOwoJCQl9CgkJCW91dHB1dC5wdXNoKGlucHV0LmNoYXJDb2RlQXQoaikpOwoJCX0KCgkJLy8gTWFpbiBkZWNvZGluZyBsb29wOiBzdGFydCBqdXN0IGFmdGVyIHRoZSBsYXN0IGRlbGltaXRlciBpZiBhbnkgYmFzaWMgY29kZQoJCS8vIHBvaW50cyB3ZXJlIGNvcGllZDsgc3RhcnQgYXQgdGhlIGJlZ2lubmluZyBvdGhlcndpc2UuCgoJCWZvciAoaW5kZXggPSBiYXNpYyA+IDAgPyBiYXNpYyArIDEgOiAwOyBpbmRleCA8IGlucHV0TGVuZ3RoOyAvKiBubyBmaW5hbCBleHByZXNzaW9uICovKSB7CgoJCQkvLyBgaW5kZXhgIGlzIHRoZSBpbmRleCBvZiB0aGUgbmV4dCBjaGFyYWN0ZXIgdG8gYmUgY29uc3VtZWQuCgkJCS8vIERlY29kZSBhIGdlbmVyYWxpemVkIHZhcmlhYmxlLWxlbmd0aCBpbnRlZ2VyIGludG8gYGRlbHRhYCwKCQkJLy8gd2hpY2ggZ2V0cyBhZGRlZCB0byBgaWAuIFRoZSBvdmVyZmxvdyBjaGVja2luZyBpcyBlYXNpZXIKCQkJLy8gaWYgd2UgaW5jcmVhc2UgYGlgIGFzIHdlIGdvLCB0aGVuIHN1YnRyYWN0IG9mZiBpdHMgc3RhcnRpbmcKCQkJLy8gdmFsdWUgYXQgdGhlIGVuZCB0byBvYnRhaW4gYGRlbHRhYC4KCQkJZm9yIChvbGRpID0gaSwgdyA9IDEsIGsgPSBiYXNlOyAvKiBubyBjb25kaXRpb24gKi87IGsgKz0gYmFzZSkgewoKCQkJCWlmIChpbmRleCA+PSBpbnB1dExlbmd0aCkgewoJCQkJCWVycm9yKCdpbnZhbGlkLWlucHV0Jyk7CgkJCQl9CgoJCQkJZGlnaXQgPSBiYXNpY1RvRGlnaXQoaW5wdXQuY2hhckNvZGVBdChpbmRleCsrKSk7CgoJCQkJaWYgKGRpZ2l0ID49IGJhc2UgfHwgZGlnaXQgPiBmbG9vcigobWF4SW50IC0gaSkgLyB3KSkgewoJCQkJCWVycm9yKCdvdmVyZmxvdycpOwoJCQkJfQoKCQkJCWkgKz0gZGlnaXQgKiB3OwoJCQkJdCA9IGsgPD0gYmlhcyA/IHRNaW4gOiAoayA+PSBiaWFzICsgdE1heCA/IHRNYXggOiBrIC0gYmlhcyk7CgoJCQkJaWYgKGRpZ2l0IDwgdCkgewoJCQkJCWJyZWFrOwoJCQkJfQoKCQkJCWJhc2VNaW51c1QgPSBiYXNlIC0gdDsKCQkJCWlmICh3ID4gZmxvb3IobWF4SW50IC8gYmFzZU1pbnVzVCkpIHsKCQkJCQllcnJvcignb3ZlcmZsb3cnKTsKCQkJCX0KCgkJCQl3ICo9IGJhc2VNaW51c1Q7CgoJCQl9CgoJCQlvdXQgPSBvdXRwdXQubGVuZ3RoICsgMTsKCQkJYmlhcyA9IGFkYXB0KGkgLSBvbGRpLCBvdXQsIG9sZGkgPT0gMCk7CgoJCQkvLyBgaWAgd2FzIHN1cHBvc2VkIHRvIHdyYXAgYXJvdW5kIGZyb20gYG91dGAgdG8gYDBgLAoJCQkvLyBpbmNyZW1lbnRpbmcgYG5gIGVhY2ggdGltZSwgc28gd2UnbGwgZml4IHRoYXQgbm93OgoJCQlpZiAoZmxvb3IoaSAvIG91dCkgPiBtYXhJbnQgLSBuKSB7CgkJCQllcnJvcignb3ZlcmZsb3cnKTsKCQkJfQoKCQkJbiArPSBmbG9vcihpIC8gb3V0KTsKCQkJaSAlPSBvdXQ7CgoJCQkvLyBJbnNlcnQgYG5gIGF0IHBvc2l0aW9uIGBpYCBvZiB0aGUgb3V0cHV0CgkJCW91dHB1dC5zcGxpY2UoaSsrLCAwLCBuKTsKCgkJfQoKCQlyZXR1cm4gdWNzMmVuY29kZShvdXRwdXQpOwoJfQoKCS8qKgoJICogQ29udmVydHMgYSBzdHJpbmcgb2YgVW5pY29kZSBzeW1ib2xzIChlLmcuIGEgZG9tYWluIG5hbWUgbGFiZWwpIHRvIGEKCSAqIFB1bnljb2RlIHN0cmluZyBvZiBBU0NJSS1vbmx5IHN5bWJvbHMuCgkgKiBAbWVtYmVyT2YgcHVueWNvZGUKCSAqIEBwYXJhbSB7U3RyaW5nfSBpbnB1dCBUaGUgc3RyaW5nIG9mIFVuaWNvZGUgc3ltYm9scy4KCSAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSByZXN1bHRpbmcgUHVueWNvZGUgc3RyaW5nIG9mIEFTQ0lJLW9ubHkgc3ltYm9scy4KCSAqLwoJZnVuY3Rpb24gZW5jb2RlKGlucHV0KSB7CgkJdmFyIG4sCgkJICAgIGRlbHRhLAoJCSAgICBoYW5kbGVkQ1BDb3VudCwKCQkgICAgYmFzaWNMZW5ndGgsCgkJICAgIGJpYXMsCgkJICAgIGosCgkJICAgIG0sCgkJICAgIHEsCgkJICAgIGssCgkJICAgIHQsCgkJICAgIGN1cnJlbnRWYWx1ZSwKCQkgICAgb3V0cHV0ID0gW10sCgkJICAgIC8qKiBgaW5wdXRMZW5ndGhgIHdpbGwgaG9sZCB0aGUgbnVtYmVyIG9mIGNvZGUgcG9pbnRzIGluIGBpbnB1dGAuICovCgkJICAgIGlucHV0TGVuZ3RoLAoJCSAgICAvKiogQ2FjaGVkIGNhbGN1bGF0aW9uIHJlc3VsdHMgKi8KCQkgICAgaGFuZGxlZENQQ291bnRQbHVzT25lLAoJCSAgICBiYXNlTWludXNULAoJCSAgICBxTWludXNUOwoKCQkvLyBDb252ZXJ0IHRoZSBpbnB1dCBpbiBVQ1MtMiB0byBVbmljb2RlCgkJaW5wdXQgPSB1Y3MyZGVjb2RlKGlucHV0KTsKCgkJLy8gQ2FjaGUgdGhlIGxlbmd0aAoJCWlucHV0TGVuZ3RoID0gaW5wdXQubGVuZ3RoOwoKCQkvLyBJbml0aWFsaXplIHRoZSBzdGF0ZQoJCW4gPSBpbml0aWFsTjsKCQlkZWx0YSA9IDA7CgkJYmlhcyA9IGluaXRpYWxCaWFzOwoKCQkvLyBIYW5kbGUgdGhlIGJhc2ljIGNvZGUgcG9pbnRzCgkJZm9yIChqID0gMDsgaiA8IGlucHV0TGVuZ3RoOyArK2opIHsKCQkJY3VycmVudFZhbHVlID0gaW5wdXRbal07CgkJCWlmIChjdXJyZW50VmFsdWUgPCAweDgwKSB7CgkJCQlvdXRwdXQucHVzaChzdHJpbmdGcm9tQ2hhckNvZGUoY3VycmVudFZhbHVlKSk7CgkJCX0KCQl9CgoJCWhhbmRsZWRDUENvdW50ID0gYmFzaWNMZW5ndGggPSBvdXRwdXQubGVuZ3RoOwoKCQkvLyBgaGFuZGxlZENQQ291bnRgIGlzIHRoZSBudW1iZXIgb2YgY29kZSBwb2ludHMgdGhhdCBoYXZlIGJlZW4gaGFuZGxlZDsKCQkvLyBgYmFzaWNMZW5ndGhgIGlzIHRoZSBudW1iZXIgb2YgYmFzaWMgY29kZSBwb2ludHMuCgoJCS8vIEZpbmlzaCB0aGUgYmFzaWMgc3RyaW5nIC0gaWYgaXQgaXMgbm90IGVtcHR5IC0gd2l0aCBhIGRlbGltaXRlcgoJCWlmIChiYXNpY0xlbmd0aCkgewoJCQlvdXRwdXQucHVzaChkZWxpbWl0ZXIpOwoJCX0KCgkJLy8gTWFpbiBlbmNvZGluZyBsb29wOgoJCXdoaWxlIChoYW5kbGVkQ1BDb3VudCA8IGlucHV0TGVuZ3RoKSB7CgoJCQkvLyBBbGwgbm9uLWJhc2ljIGNvZGUgcG9pbnRzIDwgbiBoYXZlIGJlZW4gaGFuZGxlZCBhbHJlYWR5LiBGaW5kIHRoZSBuZXh0CgkJCS8vIGxhcmdlciBvbmU6CgkJCWZvciAobSA9IG1heEludCwgaiA9IDA7IGogPCBpbnB1dExlbmd0aDsgKytqKSB7CgkJCQljdXJyZW50VmFsdWUgPSBpbnB1dFtqXTsKCQkJCWlmIChjdXJyZW50VmFsdWUgPj0gbiAmJiBjdXJyZW50VmFsdWUgPCBtKSB7CgkJCQkJbSA9IGN1cnJlbnRWYWx1ZTsKCQkJCX0KCQkJfQoKCQkJLy8gSW5jcmVhc2UgYGRlbHRhYCBlbm91Z2ggdG8gYWR2YW5jZSB0aGUgZGVjb2RlcidzIDxuLGk+IHN0YXRlIHRvIDxtLDA+LAoJCQkvLyBidXQgZ3VhcmQgYWdhaW5zdCBvdmVyZmxvdwoJCQloYW5kbGVkQ1BDb3VudFBsdXNPbmUgPSBoYW5kbGVkQ1BDb3VudCArIDE7CgkJCWlmIChtIC0gbiA+IGZsb29yKChtYXhJbnQgLSBkZWx0YSkgLyBoYW5kbGVkQ1BDb3VudFBsdXNPbmUpKSB7CgkJCQllcnJvcignb3ZlcmZsb3cnKTsKCQkJfQoKCQkJZGVsdGEgKz0gKG0gLSBuKSAqIGhhbmRsZWRDUENvdW50UGx1c09uZTsKCQkJbiA9IG07CgoJCQlmb3IgKGogPSAwOyBqIDwgaW5wdXRMZW5ndGg7ICsraikgewoJCQkJY3VycmVudFZhbHVlID0gaW5wdXRbal07CgoJCQkJaWYgKGN1cnJlbnRWYWx1ZSA8IG4gJiYgKytkZWx0YSA+IG1heEludCkgewoJCQkJCWVycm9yKCdvdmVyZmxvdycpOwoJCQkJfQoKCQkJCWlmIChjdXJyZW50VmFsdWUgPT0gbikgewoJCQkJCS8vIFJlcHJlc2VudCBkZWx0YSBhcyBhIGdlbmVyYWxpemVkIHZhcmlhYmxlLWxlbmd0aCBpbnRlZ2VyCgkJCQkJZm9yIChxID0gZGVsdGEsIGsgPSBiYXNlOyAvKiBubyBjb25kaXRpb24gKi87IGsgKz0gYmFzZSkgewoJCQkJCQl0ID0gayA8PSBiaWFzID8gdE1pbiA6IChrID49IGJpYXMgKyB0TWF4ID8gdE1heCA6IGsgLSBiaWFzKTsKCQkJCQkJaWYgKHEgPCB0KSB7CgkJCQkJCQlicmVhazsKCQkJCQkJfQoJCQkJCQlxTWludXNUID0gcSAtIHQ7CgkJCQkJCWJhc2VNaW51c1QgPSBiYXNlIC0gdDsKCQkJCQkJb3V0cHV0LnB1c2goCgkJCQkJCQlzdHJpbmdGcm9tQ2hhckNvZGUoZGlnaXRUb0Jhc2ljKHQgKyBxTWludXNUICUgYmFzZU1pbnVzVCwgMCkpCgkJCQkJCSk7CgkJCQkJCXEgPSBmbG9vcihxTWludXNUIC8gYmFzZU1pbnVzVCk7CgkJCQkJfQoKCQkJCQlvdXRwdXQucHVzaChzdHJpbmdGcm9tQ2hhckNvZGUoZGlnaXRUb0Jhc2ljKHEsIDApKSk7CgkJCQkJYmlhcyA9IGFkYXB0KGRlbHRhLCBoYW5kbGVkQ1BDb3VudFBsdXNPbmUsIGhhbmRsZWRDUENvdW50ID09IGJhc2ljTGVuZ3RoKTsKCQkJCQlkZWx0YSA9IDA7CgkJCQkJKytoYW5kbGVkQ1BDb3VudDsKCQkJCX0KCQkJfQoKCQkJKytkZWx0YTsKCQkJKytuOwoKCQl9CgkJcmV0dXJuIG91dHB1dC5qb2luKCcnKTsKCX0KCgkvKioKCSAqIENvbnZlcnRzIGEgUHVueWNvZGUgc3RyaW5nIHJlcHJlc2VudGluZyBhIGRvbWFpbiBuYW1lIG9yIGFuIGVtYWlsIGFkZHJlc3MKCSAqIHRvIFVuaWNvZGUuIE9ubHkgdGhlIFB1bnljb2RlZCBwYXJ0cyBvZiB0aGUgaW5wdXQgd2lsbCBiZSBjb252ZXJ0ZWQsIGkuZS4KCSAqIGl0IGRvZXNuJ3QgbWF0dGVyIGlmIHlvdSBjYWxsIGl0IG9uIGEgc3RyaW5nIHRoYXQgaGFzIGFscmVhZHkgYmVlbgoJICogY29udmVydGVkIHRvIFVuaWNvZGUuCgkgKiBAbWVtYmVyT2YgcHVueWNvZGUKCSAqIEBwYXJhbSB7U3RyaW5nfSBpbnB1dCBUaGUgUHVueWNvZGVkIGRvbWFpbiBuYW1lIG9yIGVtYWlsIGFkZHJlc3MgdG8KCSAqIGNvbnZlcnQgdG8gVW5pY29kZS4KCSAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSBVbmljb2RlIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBnaXZlbiBQdW55Y29kZQoJICogc3RyaW5nLgoJICovCglmdW5jdGlvbiB0b1VuaWNvZGUoaW5wdXQpIHsKCQlyZXR1cm4gbWFwRG9tYWluKGlucHV0LCBmdW5jdGlvbihzdHJpbmcpIHsKCQkJcmV0dXJuIHJlZ2V4UHVueWNvZGUudGVzdChzdHJpbmcpCgkJCQk/IGRlY29kZShzdHJpbmcuc2xpY2UoNCkudG9Mb3dlckNhc2UoKSkKCQkJCTogc3RyaW5nOwoJCX0pOwoJfQoKCS8qKgoJICogQ29udmVydHMgYSBVbmljb2RlIHN0cmluZyByZXByZXNlbnRpbmcgYSBkb21haW4gbmFtZSBvciBhbiBlbWFpbCBhZGRyZXNzIHRvCgkgKiBQdW55Y29kZS4gT25seSB0aGUgbm9uLUFTQ0lJIHBhcnRzIG9mIHRoZSBkb21haW4gbmFtZSB3aWxsIGJlIGNvbnZlcnRlZCwKCSAqIGkuZS4gaXQgZG9lc24ndCBtYXR0ZXIgaWYgeW91IGNhbGwgaXQgd2l0aCBhIGRvbWFpbiB0aGF0J3MgYWxyZWFkeSBpbgoJICogQVNDSUkuCgkgKiBAbWVtYmVyT2YgcHVueWNvZGUKCSAqIEBwYXJhbSB7U3RyaW5nfSBpbnB1dCBUaGUgZG9tYWluIG5hbWUgb3IgZW1haWwgYWRkcmVzcyB0byBjb252ZXJ0LCBhcyBhCgkgKiBVbmljb2RlIHN0cmluZy4KCSAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSBQdW55Y29kZSByZXByZXNlbnRhdGlvbiBvZiB0aGUgZ2l2ZW4gZG9tYWluIG5hbWUgb3IKCSAqIGVtYWlsIGFkZHJlc3MuCgkgKi8KCWZ1bmN0aW9uIHRvQVNDSUkoaW5wdXQpIHsKCQlyZXR1cm4gbWFwRG9tYWluKGlucHV0LCBmdW5jdGlvbihzdHJpbmcpIHsKCQkJcmV0dXJuIHJlZ2V4Tm9uQVNDSUkudGVzdChzdHJpbmcpCgkJCQk/ICd4bi0tJyArIGVuY29kZShzdHJpbmcpCgkJCQk6IHN0cmluZzsKCQl9KTsKCX0KCgkvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi8KCgkvKiogRGVmaW5lIHRoZSBwdWJsaWMgQVBJICovCglwdW55Y29kZSA9IHsKCQkvKioKCQkgKiBBIHN0cmluZyByZXByZXNlbnRpbmcgdGhlIGN1cnJlbnQgUHVueWNvZGUuanMgdmVyc2lvbiBudW1iZXIuCgkJICogQG1lbWJlck9mIHB1bnljb2RlCgkJICogQHR5cGUgU3RyaW5nCgkJICovCgkJJ3ZlcnNpb24nOiAnMS4zLjInLAoJCS8qKgoJCSAqIEFuIG9iamVjdCBvZiBtZXRob2RzIHRvIGNvbnZlcnQgZnJvbSBKYXZhU2NyaXB0J3MgaW50ZXJuYWwgY2hhcmFjdGVyCgkJICogcmVwcmVzZW50YXRpb24gKFVDUy0yKSB0byBVbmljb2RlIGNvZGUgcG9pbnRzLCBhbmQgYmFjay4KCQkgKiBAc2VlIDxodHRwczovL21hdGhpYXNieW5lbnMuYmUvbm90ZXMvamF2YXNjcmlwdC1lbmNvZGluZz4KCQkgKiBAbWVtYmVyT2YgcHVueWNvZGUKCQkgKiBAdHlwZSBPYmplY3QKCQkgKi8KCQkndWNzMic6IHsKCQkJJ2RlY29kZSc6IHVjczJkZWNvZGUsCgkJCSdlbmNvZGUnOiB1Y3MyZW5jb2RlCgkJfSwKCQknZGVjb2RlJzogZGVjb2RlLAoJCSdlbmNvZGUnOiBlbmNvZGUsCgkJJ3RvQVNDSUknOiB0b0FTQ0lJLAoJCSd0b1VuaWNvZGUnOiB0b1VuaWNvZGUKCX07CgoJLyoqIEV4cG9zZSBgcHVueWNvZGVgICovCgkvLyBTb21lIEFNRCBidWlsZCBvcHRpbWl6ZXJzLCBsaWtlIHIuanMsIGNoZWNrIGZvciBzcGVjaWZpYyBjb25kaXRpb24gcGF0dGVybnMKCS8vIGxpa2UgdGhlIGZvbGxvd2luZzoKCWlmICgKCQl0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYKCQl0eXBlb2YgZGVmaW5lLmFtZCA9PSAnb2JqZWN0JyAmJgoJCWRlZmluZS5hbWQKCSkgewoJCWRlZmluZSgncHVueWNvZGUnLCBmdW5jdGlvbigpIHsKCQkJcmV0dXJuIHB1bnljb2RlOwoJCX0pOwoJfSBlbHNlIGlmIChmcmVlRXhwb3J0cyAmJiBmcmVlTW9kdWxlKSB7CgkJaWYgKG1vZHVsZS5leHBvcnRzID09IGZyZWVFeHBvcnRzKSB7CgkJCS8vIGluIE5vZGUuanMsIGlvLmpzLCBvciBSaW5nb0pTIHYwLjguMCsKCQkJZnJlZU1vZHVsZS5leHBvcnRzID0gcHVueWNvZGU7CgkJfSBlbHNlIHsKCQkJLy8gaW4gTmFyd2hhbCBvciBSaW5nb0pTIHYwLjcuMC0KCQkJZm9yIChrZXkgaW4gcHVueWNvZGUpIHsKCQkJCXB1bnljb2RlLmhhc093blByb3BlcnR5KGtleSkgJiYgKGZyZWVFeHBvcnRzW2tleV0gPSBwdW55Y29kZVtrZXldKTsKCQkJfQoJCX0KCX0gZWxzZSB7CgkJLy8gaW4gUmhpbm8gb3IgYSB3ZWIgYnJvd3NlcgoJCXJvb3QucHVueWNvZGUgPSBwdW55Y29kZTsKCX0KCn0odGhpcykpOwoKfSkuY2FsbCh0aGlzLHR5cGVvZiBnbG9iYWwgIT09ICJ1bmRlZmluZWQiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09ICJ1bmRlZmluZWQiID8gc2VsZiA6IHR5cGVvZiB3aW5kb3cgIT09ICJ1bmRlZmluZWQiID8gd2luZG93IDoge30pCn0se31dLDY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewondXNlIHN0cmljdCc7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kZWZhdWx0ID0gYWN0aXZhdGU7Cgp2YXIgX3VyaWpzID0gcmVxdWlyZSgndXJpanMnKTsKCnZhciBfdXJpanMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdXJpanMpOwoKdmFyIF9TeW5jaGVyID0gcmVxdWlyZSgnc2VydmljZS1mcmFtZXdvcmsvZGlzdC9TeW5jaGVyJyk7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfQoKdmFyIE5vdGlmaWNhdGlvbnNPYnNlcnZlciA9IHsKICAgIG9uTm90aWZpY2F0aW9uOiBmdW5jdGlvbiBvbk5vdGlmaWNhdGlvbihjYWxsYmFjaykgewogICAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAgIHRoaXMuc3luY2hlci5vbk5vdGlmaWNhdGlvbihmdW5jdGlvbiAoZXZlbnQpIHsKICAgICAgICAgICAgaWYgKGV2ZW50LnNjaGVtYSA9PT0gX3RoaXMub2JqZWN0RGVzY1VSTCkgewogICAgICAgICAgICAgICAgX3RoaXMuc3luY2hlci5zdWJzY3JpYmUoX3RoaXMub2JqZWN0RGVzY1VSTCwgZXZlbnQudXJsKS50aGVuKGZ1bmN0aW9uIChkYXRhT2JqZWN0KSB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ25vdGlmaWNhdGlvbiByZWNlaXZlZCcsIGRhdGFPYmplY3QpOwogICAgICAgICAgICAgICAgICAgIGRhdGFPYmplY3Qub25BZGRDaGlsZChmdW5jdGlvbiAoY2hpbGQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ21lc3NhZ2UgcmVjZWl2ZWQnLCBjaGlsZCk7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjaGlsZERhdGEgPSBjaGlsZC5kYXRhID8gY2hpbGQuZGF0YSA6IGNoaWxkLnZhbHVlOwoKICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMubm90aWZpY2F0aW9ucy5wdXNoKGNoaWxkRGF0YSk7CiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKF90aGlzLm5vdGlmaWNhdGlvbnNbX3RoaXMubm90aWZpY2F0aW9ucy5sZW5ndGggLSAxXSk7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgfQp9OwoKdmFyIE5vdGlmaWNhdGlvbnNPYnNlcnZlckZhY3RvcnkgPSBmdW5jdGlvbiBOb3RpZmljYXRpb25zT2JzZXJ2ZXJGYWN0b3J5KGh5cGVydHlVUkwsIGJ1cywgY29uZmlnKSB7CiAgICB2YXIgdXJpID0gbmV3IF91cmlqczIuZGVmYXVsdChoeXBlcnR5VVJMKTsKICAgIHZhciBzeW5jaGVyID0gbmV3IF9TeW5jaGVyLlN5bmNoZXIoaHlwZXJ0eVVSTCwgYnVzLCBjb25maWcpOwogICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmNyZWF0ZShOb3RpZmljYXRpb25zT2JzZXJ2ZXIpLCB7CiAgICAgICAgJ3N5bmNoZXInOiBzeW5jaGVyLAogICAgICAgICdvYmplY3REZXNjVVJMJzogJ2h5cGVydHktY2F0YWxvZ3VlOi8vY2F0YWxvZ3VlLicgKyB1cmkuaG9zdG5hbWUoKSArICcvLndlbGwta25vd24vZGF0YXNjaGVtYS9Db21tdW5pY2F0aW9uJywKICAgICAgICAnaHlwZXJ0eVVSTCc6IGh5cGVydHlVUkwsCiAgICAgICAgbm90aWZpY2F0aW9uczogW10KICAgIH0pOwp9OwoKZnVuY3Rpb24gYWN0aXZhdGUoaHlwZXJ0eVVSTCwgYnVzLCBjb25maWcpIHsKICAgIHJldHVybiB7CiAgICAgICAgbmFtZTogJ05vdGlmaWNhdGlvbnNPYnNlcnZlcicsCiAgICAgICAgaW5zdGFuY2U6IE5vdGlmaWNhdGlvbnNPYnNlcnZlckZhY3RvcnkoaHlwZXJ0eVVSTCwgYnVzLCBjb25maWcpCiAgICB9Owp9Cm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOwoKfSx7InNlcnZpY2UtZnJhbWV3b3JrL2Rpc3QvU3luY2hlciI6MSwidXJpanMiOjR9XX0se30sWzZdKSg2KQp9KTs=",
      "sourceCodeClassname": "NotificationsObserver",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10012,
    "version": "0.1",
    "description": "Description of NotificationsObserver",
    "objectName": "NotificationsObserver",
    "configuration": {},
    "hypertyType": [],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "NotificationsReporter": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "NotificationsReporter",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10013,
    "version": "0.1",
    "description": "Description of NotificationsReporter",
    "objectName": "NotificationsReporter",
    "configuration": {},
    "hypertyType": [],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "SurveyObserver": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "SurveyObserver",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10014,
    "version": "0.1",
    "description": "Description of SurveyObserver",
    "objectName": "SurveyObserver",
    "configuration": {},
    "hypertyType": [],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "SurveyReporter": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "SurveyReporter",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10015,
    "version": "0.1",
    "description": "Description of SurveyReporter",
    "objectName": "SurveyReporter",
    "configuration": {},
    "hypertyType": [],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "HelloWorldDiscoveryObserver": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "HelloWorldDiscoveryObserver",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10016,
    "version": "0.1",
    "description": "Description of HelloWorldDiscoveryObserver",
    "objectName": "HelloWorldDiscoveryObserver",
    "configuration": {},
    "hypertyType": [],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "RoomClient": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "RoomClient",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10017,
    "version": "0.1",
    "description": "Description of RoomClient",
    "objectName": "RoomClient",
    "configuration": {},
    "hypertyType": [],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [],
    "accessControlPolicy": "somePolicy"
  },
  "RoomServer": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "RoomServer",
      "encoding": "base64",
      "signature": ""
    },
    "cguid": 10018,
    "version": "0.1",
    "description": "Description of RoomServer",
    "objectName": "RoomServer",
    "configuration": {},
    "hypertyType": [],
    "sourcePackageURL": "/sourcePackage",
    "language": "javascript",
    "signature": "",
    "messageSchemas": "",
    "dataObjects": [
      "https://catalogue.hybroker.rethink.ptinovacao.pt/.well-known/dataschema/Communication"
    ],
    "accessControlPolicy": "somePolicy"
  }
}